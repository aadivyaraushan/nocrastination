{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction _createForOfIteratorHelperLoose(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (it) return (it = it.call(o)).next.bind(it); if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport React, { useEffect } from \"react\";\nimport { useContext, useState } from \"react/cjs/react.development\";\nimport { QuestContext } from \"../QuestContext\";\nimport { onAuthStateChanged } from \"firebase/auth\";\nimport { GameContext } from \"../GameContext\";\nimport HealthBar from \"../components/HealthBar\";\nimport { setButtonStyleAsync } from \"expo-navigation-bar\";\nimport { UserContext } from \"../UserContext\";\nimport { deleteDoc, doc, updateDoc } from \"@firebase/firestore\";\nimport { db } from \"../firebase\";\nimport { Audio } from \"expo-av\";\nimport { Sound } from \"expo-av/build/Audio\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar MultiplayerBattle = function MultiplayerBattle(_ref) {\n  var route = _ref.route,\n      navigation = _ref.navigation;\n  var rewardData = route.params;\n\n  var _useContext = useContext(GameContext),\n      game = _useContext.game,\n      setGame = _useContext.setGame;\n\n  var _useContext2 = useContext(UserContext),\n      user = _useContext2.user,\n      setUser = _useContext2.setUser;\n\n  var _useContext3 = useContext(QuestContext),\n      quest = _useContext3.quest,\n      setQuest = _useContext3.setQuest;\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      player1Health = _useState2[0],\n      setPlayer1Health = _useState2[1];\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      player2Health = _useState4[0],\n      setPlayer2Health = _useState4[1];\n\n  var _useState5 = useState(80),\n      _useState6 = _slicedToArray(_useState5, 2),\n      player1Count = _useState6[0],\n      setPlayer1Count = _useState6[1];\n\n  var _useState7 = useState(80),\n      _useState8 = _slicedToArray(_useState7, 2),\n      player2Count = _useState8[0],\n      setPlayer2Count = _useState8[1];\n\n  var _useState9 = useState(false),\n      _useState10 = _slicedToArray(_useState9, 2),\n      player1AttackPressed = _useState10[0],\n      setPlayer1AttackPressed = _useState10[1];\n\n  var _useState11 = useState(false),\n      _useState12 = _slicedToArray(_useState11, 2),\n      player2AttackPressed = _useState12[0],\n      setPlayer2AttackPressed = _useState12[1];\n\n  var _useState13 = useState(game[\"player1\"][\"activeQuest\"][\"subTasks\"]),\n      _useState14 = _slicedToArray(_useState13, 2),\n      subTasksP1 = _useState14[0],\n      setSubTasksP1 = _useState14[1];\n\n  var _useState15 = useState(game[\"player2\"][\"activeQuest\"][\"subTasks\"]),\n      _useState16 = _slicedToArray(_useState15, 2),\n      subTasksP2 = _useState16[0],\n      setSubTasksP2 = _useState16[1];\n\n  var _useState17 = useState(),\n      _useState18 = _slicedToArray(_useState17, 2),\n      sound = _useState18[0],\n      setSound = _useState18[1];\n\n  function playDamaged() {\n    var _await$Audio$Sound$cr, sound;\n\n    return _regeneratorRuntime.async(function playDamaged$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(Audio.Sound.createAsync(require(\"../assets/sfx/damaged.mp3\")));\n\n          case 2:\n            _await$Audio$Sound$cr = _context.sent;\n            sound = _await$Audio$Sound$cr.sound;\n            setSound(sound);\n            _context.next = 7;\n            return _regeneratorRuntime.awrap(sound.playAsync());\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  function playVictory() {\n    var _await$Audio$Sound$cr2, sound;\n\n    return _regeneratorRuntime.async(function playVictory$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(Audio.Sound.createAsync(require(\"../assets/sfx/victory.mp3\")));\n\n          case 2:\n            _await$Audio$Sound$cr2 = _context2.sent;\n            sound = _await$Audio$Sound$cr2.sound;\n            setSound(sound);\n            _context2.next = 7;\n            return _regeneratorRuntime.awrap(sound.playAsync());\n\n          case 7:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  function playDefeat() {\n    var _await$Audio$Sound$cr3, sound;\n\n    return _regeneratorRuntime.async(function playDefeat$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return _regeneratorRuntime.awrap(Audio.Sound.createAsync(require(\"../assets/sfx/defeat.mp3\")));\n\n          case 2:\n            _await$Audio$Sound$cr3 = _context3.sent;\n            sound = _await$Audio$Sound$cr3.sound;\n            setSound(sound);\n            _context3.next = 7;\n            return _regeneratorRuntime.awrap(sound.playAsync());\n\n          case 7:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  function playAttack() {\n    var _await$Audio$Sound$cr4, sound;\n\n    return _regeneratorRuntime.async(function playAttack$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.next = 2;\n            return _regeneratorRuntime.awrap(Audio.Sound.createAsync(require(\"../assets/sfx/attack.mp3\")));\n\n          case 2:\n            _await$Audio$Sound$cr4 = _context4.sent;\n            sound = _await$Audio$Sound$cr4.sound;\n            setSound(sound);\n            _context4.next = 7;\n            return _regeneratorRuntime.awrap(sound.playAsync());\n\n          case 7:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  var player1HealthBoost = 0;\n  var player1DamageBoost = 0;\n  var player1Avatar = \"\";\n\n  for (var _iterator = _createForOfIteratorHelperLoose(game[\"player1\"][\"items\"]), _step; !(_step = _iterator()).done;) {\n    var item = _step.value;\n\n    if (item[\"name\"] == \"regeneration\") {} else if (item[\"type\"] == \"offensive\") player1DamageBoost += item[\"damageBoost\"];else if (item[\"type\"] == \"deensive\") player1HealthBoost += item[\"healthBoost\"];\n  }\n\n  var player1DamagePerSubTask = 100 / game[\"player1\"][\"activeQuest\"][\"subTasks\"].length + player1DamageBoost;\n  var player1HealthVar = 100 + player1HealthBoost;\n\n  switch (game[\"player1\"][\"avatar\"]) {\n    case \"superhero\":\n      player1Avatar = require(\"../assets/superhero.png\");\n      break;\n\n    case \"wizard\":\n      player1Avatar = require(\"../assets/wizard.png\");\n      break;\n  }\n\n  var player2HealthBoost = 0;\n  var player2DamageBoost = 0;\n  var player2Avatar = \"\";\n\n  for (var _iterator2 = _createForOfIteratorHelperLoose(game[\"player2\"][\"items\"]), _step2; !(_step2 = _iterator2()).done;) {\n    var _item = _step2.value;\n\n    if (_item[\"name\"] == \"regeneration\") {} else if (_item[\"type\"] == \"offensive\") player2DamageBoost += _item[\"damageBoost\"];else if (_item[\"type\"] == \"deensive\") player2HealthBoost += _item[\"healthBoost\"];\n  }\n\n  var player2DamagePerSubTask = 100 / game[\"player2\"][\"activeQuest\"][\"subTasks\"].length + player2DamageBoost;\n  var player2HealthVar = 100 + player2HealthBoost;\n\n  switch (game[\"player2\"][\"avatar\"]) {\n    case \"superhero\":\n      player2Avatar = require(\"../assets/superhero.png\");\n      break;\n\n    case \"wizard\":\n      player2Avatar = require(\"../assets/wizard.png\");\n      break;\n  }\n\n  useEffect(function () {\n    setPlayer1Health(player1HealthVar);\n    setPlayer2Health(player2HealthVar);\n  }, []);\n  useEffect(function () {\n    if (player1Health <= 0) {\n      if (game[\"player2\"][\"email\"] == user[\"email\"]) {\n        playVictory();\n      } else {\n        playDefeat();\n      }\n\n      alert(game[\"player2\"][\"displayName\"] + \" wins!\");\n      updateDoc(doc(db, \"users\", game[\"player2\"][\"email\"]), {\n        coins: user[\"coins\"] + rewardData[quest[\"difficulty\"]][\"coins\"],\n        currentXp: user[\"currentXp\"] + rewardData[quest[\"difficulty\"]][\"xp\"]\n      }).then(function () {\n        if (game[\"player2\"][\"email\"] === user[\"email\"]) {\n          setUser({\n            avatar: user[\"avatar\"],\n            coins: user[\"coins\"] + rewardData[quest[\"difficulty\"]][\"coins\"],\n            currentXp: user[\"currentXp\"] + rewardData[quest[\"difficulty\"]][\"xp\"],\n            activeQuest: user[\"activeQuest\"],\n            diamonds: user[\"diamonds\"],\n            displayName: user[\"displayName\"],\n            email: user[\"email\"],\n            emotes: user[\"emotes\"],\n            items: user[\"items\"],\n            level: user[\"level\"],\n            multiplier: user[\"multiplier\"],\n            questsDone: user[\"questsDone\"],\n            tasks: user[\"tasks\"]\n          });\n        }\n      }).then(function () {\n        deleteDoc(doc(db, \"games\", game[\"id\"])).then(function () {\n          return navigation.navigate(\"homepage\");\n        }).catch(function (reason) {\n          return alert(reason);\n        });\n      });\n      return;\n    }\n\n    if (player2Health <= 0) {\n      if (game[\"player1\"][\"email\"] == user[\"email\"]) {\n        playVictory();\n      } else {\n        playDefeat();\n      }\n\n      alert(game[\"player1\"][\"displayName\"] + \" wins!\");\n      updateDoc(doc(db, \"users\", game[\"player1\"][\"email\"]), {\n        coins: user[\"coins\"] + rewardData[quest[\"difficulty\"]][\"coins\"],\n        currentXp: user[\"currentXp\"] + rewardData[quest[\"difficulty\"]][\"xp\"]\n      }).then(function () {\n        if (game[\"player1\"][\"email\"] === user[\"email\"]) {\n          user[\"tasks\"].splice(user[\"tasks\"].indexOf(user[\"activeQuest\"]), 1);\n          setUser({\n            coins: user[\"coins\"] + rewardData[quest[\"difficulty\"]][\"coins\"],\n            currentXp: user[\"currentXp\"] + rewardData[quest[\"difficulty\"]][\"xp\"],\n            activeQuest: user[\"activeQuest\"],\n            diamonds: user[\"diamonds\"],\n            displayName: user[\"displayName\"],\n            email: user[\"email\"],\n            emotes: user[\"emotes\"],\n            items: user[\"items\"],\n            level: user[\"level\"],\n            multiplier: user[\"multiplier\"],\n            questsDone: user[\"questsDone\"],\n            tasks: user[\"tasks\"]\n          });\n        }\n      }).then(function () {\n        deleteDoc(doc(db, \"games\", game[\"id\"])).then(function () {\n          return navigation.navigate(\"homepage\");\n        }).catch(function (reason) {\n          return alert(reason);\n        });\n      });\n      return;\n    }\n  }, [player1Health, player2Health]);\n  setTimeout(function () {\n    if (player1AttackPressed) {\n      setPlayer1Count(0);\n      setPlayer1AttackPressed(false);\n    }\n\n    if (player2AttackPressed) {\n      setPlayer2Count(0);\n      setPlayer2AttackPressed(false);\n    }\n\n    setPlayer1Count(player1Count + 1);\n    setPlayer2Count(player2Count + 1);\n  }, 1000);\n  return _jsx(View, {\n    children: _jsxs(ImageBackground, {\n      source: require(\"../assets/background.png\"),\n      style: styles.bg,\n      children: [_jsxs(View, {\n        style: styles.panelsContainer,\n        children: [_jsx(ImageBackground, {\n          style: styles.subTasksPanel,\n          children: _jsxs(View, {\n            style: styles.subTasksContainer,\n            children: [_jsx(Text, {\n              style: styles.name,\n              children: game[\"player1\"][\"displayName\"]\n            }), subTasksP1.map(function (subTask, index) {\n              return _jsx(Pressable, {\n                onPress: function onPress() {\n                  if (player1Count < 60) {\n                    alert(\"Wait 1 min before checking off another sub-quest\");\n                  } else {\n                    if (game[\"player1\"][\"email\"] === user[\"email\"]) {\n                      playAttack();\n                      user[\"activeQuest\"][\"subTasks\"].splice(user[\"activeQuest\"][\"subTasks\"].indexOf(subTask), 1);\n                      console.log(\"removed \", subTask, \" from \", user[\"activeQuest\"][\"subTasks\"]);\n                      setUser({\n                        activeQuest: user[\"activeQuest\"],\n                        avatar: user[\"avatar\"],\n                        coins: user[\"coins\"],\n                        diamonds: user[\"diamonds\"],\n                        displayName: user[\"displayName\"],\n                        email: user[\"email\"],\n                        emotes: user[\"emotes\"],\n                        items: user[\"items\"],\n                        level: user[\"level\"],\n                        multiplier: user[\"multiplier\"],\n                        questsDone: user[\"questsDone\"],\n                        tasks: user[\"tasks\"]\n                      });\n                      updateDoc(doc(db, \"users\", user[\"email\"]), {\n                        activeQuest: user[\"activeQuest\"]\n                      });\n                    } else {\n                      playDamaged();\n                      game[\"player1\"][\"activeQuest\"][\"subTasks\"].splice(game[\"player1\"][\"activeQuest\"][\"subTasks\"].indexOf(subTask), 1);\n                      updateDoc(doc(db, \"users\", game[\"player1\"][\"email\"]), {\n                        activeQuest: game[\"player1\"][\"email\"][\"activeQuest\"]\n                      });\n                    }\n\n                    setPlayer2Health(player2Health - player1DamagePerSubTask);\n                    setPlayer1AttackPressed(true);\n                    subTasksP1.splice(subTasksP1.indexOf(subTask), 1);\n                    setSubTasksP1(subTasksP1);\n                  }\n                },\n                style: styles.textContainer,\n                disabled: game[\"player1\"][\"email\"] != user[\"email\"],\n                android_disableSound: true,\n                children: _jsxs(Text, {\n                  style: styles.text,\n                  children: [\"\\u25A1\", subTask]\n                }, index)\n              }, index);\n            })]\n          })\n        }), _jsx(ImageBackground, {\n          style: styles.subTasksPanel,\n          children: _jsxs(View, {\n            style: styles.subTasksContainer,\n            children: [_jsx(Text, {\n              style: styles.name,\n              children: game[\"player2\"][\"displayName\"]\n            }), subTasksP2.map(function (subTask, index) {\n              return _jsx(Pressable, {\n                onPress: function onPress() {\n                  if (player2Count < 60) {\n                    alert(\"Wait 1 min before checking off another sub-quest\");\n                  } else {\n                    if (game[\"player2\"][\"email\"] === user[\"email\"]) {\n                      playAttack();\n                      user[\"activeQuest\"][\"subTasks\"].splice(user[\"activeQuest\"][\"subTasks\"].indexOf(subTask), 1);\n                      setUser({\n                        activeQuest: user[\"activeQuest\"],\n                        avatar: user[\"avatar\"],\n                        coins: user[\"coins\"],\n                        diamonds: user[\"diamonds\"],\n                        displayName: user[\"displayName\"],\n                        email: user[\"email\"],\n                        emotes: user[\"emotes\"],\n                        items: user[\"items\"],\n                        level: user[\"level\"],\n                        multiplier: user[\"multiplier\"],\n                        questsDone: user[\"questsDone\"],\n                        tasks: user[\"tasks\"]\n                      });\n                      updateDoc(doc(db, \"users\", user[\"email\"]), {\n                        activeQuest: user[\"activeQuest\"]\n                      });\n                    } else {\n                      playDamaged();\n                      game[\"player2\"][\"activeQuest\"][\"subTasks\"].splice(game[\"player2\"][\"activeQuest\"][\"subTasks\"].indexOf(subTask), 1);\n                      updateDoc(doc(db, \"users\", game[\"player2\"][\"email\"]), {\n                        activeQuest: game[\"player2\"][\"email\"][\"activeQuest\"]\n                      });\n                    }\n\n                    setPlayer1Health(player1Health - player2DamagePerSubTask);\n                    setPlayer2AttackPressed(true);\n                    subTasksP2.splice(subTasksP2.indexOf(subTask), 1);\n                    setSubTasksP2(subTasksP2);\n                  }\n                },\n                style: styles.textContainer,\n                disabled: game[\"player2\"][\"email\"] != user[\"email\"],\n                children: _jsxs(Text, {\n                  style: styles.text,\n                  children: [\"\\u25A1\", subTask]\n                }, index)\n              }, index);\n            })]\n          })\n        })]\n      }), _jsx(HealthBar, {\n        health: player1Health,\n        isLower: true\n      }), _jsx(Image, {\n        style: styles.lowerAvatar,\n        source: player1Avatar\n      }), _jsx(Image, {\n        style: styles.upperAvatar,\n        source: player2Avatar\n      }), _jsx(HealthBar, {\n        health: player2Health,\n        isLower: false\n      })]\n    })\n  });\n};\n\nexport default MultiplayerBattle;\nvar styles = StyleSheet.create({\n  bg: {\n    width: \"100%\",\n    height: \"100%\",\n    resizeMode: \"contain\",\n    display: \"flex\",\n    flexDirection: \"column-reverse\"\n  },\n  subTasksPanel: {\n    backgroundColor: \"#9EDBD8\",\n    width: 200,\n    height: 250\n  },\n  subTasksContainer: {\n    display: \"flex\",\n    flex: 1,\n    flexDirection: \"column\",\n    alignItems: \"center\"\n  },\n  panelsContainer: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"space-evenly\"\n  },\n  text: {\n    fontSize: 25,\n    color: \"white\",\n    fontFamily: \"RetroGaming\"\n  },\n  textContainer: {\n    flex: 1,\n    flexWrap: \"nowrap\"\n  },\n  name: {\n    fontSize: 30,\n    color: \"white\",\n    fontFamily: \"RetroGaming\",\n    textDecorationStyle: \"solid\",\n    textDecorationLine: \"underline\"\n  },\n  lowerAvatar: {\n    width: 150,\n    height: 150,\n    marginLeft: 10,\n    marginBottom: 20\n  },\n  upperAvatar: {\n    width: 150,\n    height: 150,\n    position: \"absolute\",\n    top: 80,\n    right: 20,\n    transform: [{\n      scaleX: -1\n    }]\n  }\n});","map":{"version":3,"sources":["/home/aadivyaraushan/Documents/GitHub/nocrastination/screens/MultiplayerBattle.js"],"names":["React","useEffect","useContext","useState","QuestContext","onAuthStateChanged","GameContext","HealthBar","setButtonStyleAsync","UserContext","deleteDoc","doc","updateDoc","db","Audio","Sound","MultiplayerBattle","route","navigation","rewardData","params","game","setGame","user","setUser","quest","setQuest","player1Health","setPlayer1Health","player2Health","setPlayer2Health","player1Count","setPlayer1Count","player2Count","setPlayer2Count","player1AttackPressed","setPlayer1AttackPressed","player2AttackPressed","setPlayer2AttackPressed","subTasksP1","setSubTasksP1","subTasksP2","setSubTasksP2","sound","setSound","playDamaged","createAsync","require","playAsync","playVictory","playDefeat","playAttack","player1HealthBoost","player1DamageBoost","player1Avatar","item","player1DamagePerSubTask","length","player1HealthVar","player2HealthBoost","player2DamageBoost","player2Avatar","player2DamagePerSubTask","player2HealthVar","alert","coins","currentXp","then","avatar","activeQuest","diamonds","displayName","email","emotes","items","level","multiplier","questsDone","tasks","navigate","catch","reason","splice","indexOf","setTimeout","styles","bg","panelsContainer","subTasksPanel","subTasksContainer","name","map","subTask","index","console","log","textContainer","text","lowerAvatar","upperAvatar","StyleSheet","create","width","height","resizeMode","display","flexDirection","backgroundColor","flex","alignItems","justifyContent","fontSize","color","fontFamily","flexWrap","textDecorationStyle","textDecorationLine","marginLeft","marginBottom","position","top","right","transform","scaleX"],"mappings":"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","sourcesContent":["import {\n  StyleSheet,\n  Text,\n  View,\n  ImageBackground,\n  Image,\n  Pressable,\n} from \"react-native\";\nimport React, { useEffect } from \"react\";\nimport { useContext, useState } from \"react/cjs/react.development\";\nimport { QuestContext } from \"../QuestContext\";\nimport { onAuthStateChanged } from \"firebase/auth\";\nimport { GameContext } from \"../GameContext\";\nimport HealthBar from \"../components/HealthBar\";\nimport { setButtonStyleAsync } from \"expo-navigation-bar\";\nimport { UserContext } from \"../UserContext\";\nimport { deleteDoc, doc, updateDoc } from \"@firebase/firestore\";\nimport { db } from \"../firebase\";\nimport { Audio } from \"expo-av\";\nimport { Sound } from \"expo-av/build/Audio\";\n\nconst MultiplayerBattle = ({ route, navigation }) => {\n  const rewardData = route.params;\n  const { game, setGame } = useContext(GameContext);\n  const { user, setUser } = useContext(UserContext);\n  const { quest, setQuest } = useContext(QuestContext);\n  const [player1Health, setPlayer1Health] = useState();\n  const [player2Health, setPlayer2Health] = useState();\n  const [player1Count, setPlayer1Count] = useState(80);\n  const [player2Count, setPlayer2Count] = useState(80);\n  const [player1AttackPressed, setPlayer1AttackPressed] = useState(false);\n  const [player2AttackPressed, setPlayer2AttackPressed] = useState(false);\n  const [subTasksP1, setSubTasksP1] = useState(\n    game[\"player1\"][\"activeQuest\"][\"subTasks\"]\n  );\n  const [subTasksP2, setSubTasksP2] = useState(\n    game[\"player2\"][\"activeQuest\"][\"subTasks\"]\n  );\n  const [sound, setSound] = useState();\n\n  // Sound functions\n  async function playDamaged() {\n    const { sound } = await Audio.Sound.createAsync(\n      require(\"../assets/sfx/damaged.mp3\")\n    );\n    setSound(sound);\n    await sound.playAsync();\n  }\n\n  async function playVictory() {\n    const { sound } = await Audio.Sound.createAsync(\n      require(\"../assets/sfx/victory.mp3\")\n    );\n    setSound(sound);\n    await sound.playAsync();\n  }\n\n  async function playDefeat() {\n    const { sound } = await Audio.Sound.createAsync(\n      require(\"../assets/sfx/defeat.mp3\")\n    );\n    setSound(sound);\n    await sound.playAsync();\n  }\n\n  async function playAttack() {\n    const { sound } = await Audio.Sound.createAsync(\n      require(\"../assets/sfx/attack.mp3\")\n    );\n    setSound(sound);\n    await sound.playAsync();\n  }\n\n  // Calculating health boost and damage boost\n  let player1HealthBoost = 0;\n  let player1DamageBoost = 0;\n  let player1Avatar = \"\";\n  for (const item of game[\"player1\"][\"items\"]) {\n    if (item[\"name\"] == \"regeneration\") {\n      // special regeneration stuff\n    } else if (item[\"type\"] == \"offensive\")\n      player1DamageBoost += item[\"damageBoost\"];\n    else if (item[\"type\"] == \"deensive\")\n      player1HealthBoost += item[\"healthBoost\"];\n  }\n  const player1DamagePerSubTask =\n    100 / game[\"player1\"][\"activeQuest\"][\"subTasks\"].length +\n    player1DamageBoost;\n  let player1HealthVar = 100 + player1HealthBoost;\n\n  // Computing player 1 avatar\n  switch (game[\"player1\"][\"avatar\"]) {\n    case \"superhero\":\n      player1Avatar = require(\"../assets/superhero.png\");\n      break;\n    case \"wizard\":\n      player1Avatar = require(\"../assets/wizard.png\");\n      break;\n  }\n\n  // Calculating player 2's health boost and damage boost\n  let player2HealthBoost = 0;\n  let player2DamageBoost = 0;\n  let player2Avatar = \"\";\n  for (const item of game[\"player2\"][\"items\"]) {\n    if (item[\"name\"] == \"regeneration\") {\n      // special regeneration stuff\n    } else if (item[\"type\"] == \"offensive\")\n      player2DamageBoost += item[\"damageBoost\"];\n    else if (item[\"type\"] == \"deensive\")\n      player2HealthBoost += item[\"healthBoost\"];\n  }\n  const player2DamagePerSubTask =\n    100 / game[\"player2\"][\"activeQuest\"][\"subTasks\"].length +\n    player2DamageBoost;\n  let player2HealthVar = 100 + player2HealthBoost;\n\n  // Computing player2 avatar\n  switch (game[\"player2\"][\"avatar\"]) {\n    case \"superhero\":\n      player2Avatar = require(\"../assets/superhero.png\");\n      break;\n    case \"wizard\":\n      player2Avatar = require(\"../assets/wizard.png\");\n      break;\n  }\n\n  useEffect(() => {\n    setPlayer1Health(player1HealthVar);\n    setPlayer2Health(player2HealthVar);\n  }, []);\n\n  useEffect(() => {\n    if (player1Health <= 0) {\n      if (game[\"player2\"][\"email\"] == user[\"email\"]) {\n        playVictory();\n      } else {\n        playDefeat();\n      }\n      alert(game[\"player2\"][\"displayName\"] + \" wins!\");\n      updateDoc(doc(db, \"users\", game[\"player2\"][\"email\"]), {\n        coins: user[\"coins\"] + rewardData[quest[\"difficulty\"]][\"coins\"],\n        currentXp: user[\"currentXp\"] + rewardData[quest[\"difficulty\"]][\"xp\"],\n      })\n        .then(() => {\n          if (game[\"player2\"][\"email\"] === user[\"email\"]) {\n            setUser({\n              avatar: user[\"avatar\"],\n              coins: user[\"coins\"] + rewardData[quest[\"difficulty\"]][\"coins\"],\n              currentXp:\n                user[\"currentXp\"] + rewardData[quest[\"difficulty\"]][\"xp\"],\n              activeQuest: user[\"activeQuest\"],\n              diamonds: user[\"diamonds\"],\n              displayName: user[\"displayName\"],\n              email: user[\"email\"],\n              emotes: user[\"emotes\"],\n              items: user[\"items\"],\n              level: user[\"level\"],\n              multiplier: user[\"multiplier\"],\n              questsDone: user[\"questsDone\"],\n              tasks: user[\"tasks\"],\n            });\n          }\n        })\n        .then(() => {\n          deleteDoc(doc(db, \"games\", game[\"id\"]))\n            .then(() => navigation.navigate(\"homepage\"))\n            .catch((reason) => alert(reason));\n        });\n\n      return;\n    }\n    if (player2Health <= 0) {\n      if (game[\"player1\"][\"email\"] == user[\"email\"]) {\n        playVictory();\n      } else {\n        playDefeat();\n      }\n      alert(game[\"player1\"][\"displayName\"] + \" wins!\");\n      updateDoc(doc(db, \"users\", game[\"player1\"][\"email\"]), {\n        coins: user[\"coins\"] + rewardData[quest[\"difficulty\"]][\"coins\"],\n        currentXp: user[\"currentXp\"] + rewardData[quest[\"difficulty\"]][\"xp\"],\n      })\n        .then(() => {\n          if (game[\"player1\"][\"email\"] === user[\"email\"]) {\n            user[\"tasks\"].splice(user[\"tasks\"].indexOf(user[\"activeQuest\"]), 1);\n            setUser({\n              coins: user[\"coins\"] + rewardData[quest[\"difficulty\"]][\"coins\"],\n              currentXp:\n                user[\"currentXp\"] + rewardData[quest[\"difficulty\"]][\"xp\"],\n              activeQuest: user[\"activeQuest\"],\n              diamonds: user[\"diamonds\"],\n              displayName: user[\"displayName\"],\n              email: user[\"email\"],\n              emotes: user[\"emotes\"],\n              items: user[\"items\"],\n              level: user[\"level\"],\n              multiplier: user[\"multiplier\"],\n              questsDone: user[\"questsDone\"],\n              tasks: user[\"tasks\"],\n            });\n          }\n        })\n        .then(() => {\n          deleteDoc(doc(db, \"games\", game[\"id\"]))\n            .then(() => navigation.navigate(\"homepage\"))\n            .catch((reason) => alert(reason));\n        });\n\n      return;\n    }\n  }, [player1Health, player2Health]);\n\n  setTimeout(() => {\n    if (player1AttackPressed) {\n      setPlayer1Count(0);\n      setPlayer1AttackPressed(false);\n    }\n    if (player2AttackPressed) {\n      setPlayer2Count(0);\n      setPlayer2AttackPressed(false);\n    }\n    setPlayer1Count(player1Count + 1);\n    setPlayer2Count(player2Count + 1);\n  }, 1000);\n\n  return (\n    <View>\n      <ImageBackground\n        source={require(\"../assets/background.png\")}\n        style={styles.bg}\n      >\n        <View style={styles.panelsContainer}>\n          <ImageBackground style={styles.subTasksPanel}>\n            <View style={styles.subTasksContainer}>\n              <Text style={styles.name}>{game[\"player1\"][\"displayName\"]}</Text>\n              {subTasksP1.map((subTask, index) => {\n                return (\n                  <Pressable\n                    onPress={() => {\n                      if (player1Count < 60) {\n                        alert(\n                          \"Wait 1 min before checking off another sub-quest\"\n                        );\n                      } else {\n                        if (game[\"player1\"][\"email\"] === user[\"email\"]) {\n                          playAttack();\n                          user[\"activeQuest\"][\"subTasks\"].splice(\n                            user[\"activeQuest\"][\"subTasks\"].indexOf(subTask),\n                            1\n                          );\n                          console.log(\n                            \"removed \",\n                            subTask,\n                            \" from \",\n                            user[\"activeQuest\"][\"subTasks\"]\n                          );\n                          setUser({\n                            activeQuest: user[\"activeQuest\"],\n                            avatar: user[\"avatar\"],\n                            coins: user[\"coins\"],\n                            diamonds: user[\"diamonds\"],\n                            displayName: user[\"displayName\"],\n                            email: user[\"email\"],\n                            emotes: user[\"emotes\"],\n                            items: user[\"items\"],\n                            level: user[\"level\"],\n                            multiplier: user[\"multiplier\"],\n                            questsDone: user[\"questsDone\"],\n                            tasks: user[\"tasks\"],\n                          });\n\n                          updateDoc(doc(db, \"users\", user[\"email\"]), {\n                            activeQuest: user[\"activeQuest\"],\n                          });\n                        } else {\n                          playDamaged();\n                          game[\"player1\"][\"activeQuest\"][\"subTasks\"].splice(\n                            game[\"player1\"][\"activeQuest\"][\"subTasks\"].indexOf(\n                              subTask\n                            ),\n                            1\n                          );\n                          updateDoc(\n                            doc(db, \"users\", game[\"player1\"][\"email\"]),\n                            {\n                              activeQuest:\n                                game[\"player1\"][\"email\"][\"activeQuest\"],\n                            }\n                          );\n                        }\n                        setPlayer2Health(\n                          player2Health - player1DamagePerSubTask\n                        );\n                        setPlayer1AttackPressed(true);\n                        subTasksP1.splice(subTasksP1.indexOf(subTask), 1);\n                        setSubTasksP1(subTasksP1);\n                      }\n                    }}\n                    key={index}\n                    style={styles.textContainer}\n                    disabled={game[\"player1\"][\"email\"] != user[\"email\"]}\n                    android_disableSound={true}\n                  >\n                    <Text style={styles.text} key={index}>\n                      □{subTask}\n                    </Text>\n                  </Pressable>\n                );\n              })}\n            </View>\n          </ImageBackground>\n          <ImageBackground style={styles.subTasksPanel}>\n            <View style={styles.subTasksContainer}>\n              <Text style={styles.name}>{game[\"player2\"][\"displayName\"]}</Text>\n              {subTasksP2.map((subTask, index) => {\n                return (\n                  <Pressable\n                    onPress={() => {\n                      if (player2Count < 60) {\n                        alert(\n                          \"Wait 1 min before checking off another sub-quest\"\n                        );\n                      } else {\n                        if (game[\"player2\"][\"email\"] === user[\"email\"]) {\n                          playAttack();\n                          user[\"activeQuest\"][\"subTasks\"].splice(\n                            user[\"activeQuest\"][\"subTasks\"].indexOf(subTask),\n                            1\n                          );\n                          setUser({\n                            activeQuest: user[\"activeQuest\"],\n                            avatar: user[\"avatar\"],\n                            coins: user[\"coins\"],\n                            diamonds: user[\"diamonds\"],\n                            displayName: user[\"displayName\"],\n                            email: user[\"email\"],\n                            emotes: user[\"emotes\"],\n                            items: user[\"items\"],\n                            level: user[\"level\"],\n                            multiplier: user[\"multiplier\"],\n                            questsDone: user[\"questsDone\"],\n                            tasks: user[\"tasks\"],\n                          });\n\n                          updateDoc(doc(db, \"users\", user[\"email\"]), {\n                            activeQuest: user[\"activeQuest\"],\n                          });\n                        } else {\n                          playDamaged();\n                          game[\"player2\"][\"activeQuest\"][\"subTasks\"].splice(\n                            game[\"player2\"][\"activeQuest\"][\"subTasks\"].indexOf(\n                              subTask\n                            ),\n                            1\n                          );\n                          updateDoc(\n                            doc(db, \"users\", game[\"player2\"][\"email\"]),\n                            {\n                              activeQuest:\n                                game[\"player2\"][\"email\"][\"activeQuest\"],\n                            }\n                          );\n                        }\n\n                        setPlayer1Health(\n                          player1Health - player2DamagePerSubTask\n                        );\n                        setPlayer2AttackPressed(true);\n                        subTasksP2.splice(subTasksP2.indexOf(subTask), 1);\n                        setSubTasksP2(subTasksP2);\n                      }\n                    }}\n                    key={index}\n                    style={styles.textContainer}\n                    disabled={game[\"player2\"][\"email\"] != user[\"email\"]}\n                  >\n                    <Text style={styles.text} key={index}>\n                      □{subTask}\n                    </Text>\n                  </Pressable>\n                );\n              })}\n            </View>\n          </ImageBackground>\n        </View>\n        <HealthBar health={player1Health} isLower={true} />\n        <Image style={styles.lowerAvatar} source={player1Avatar} />\n        <Image style={styles.upperAvatar} source={player2Avatar} />\n        <HealthBar health={player2Health} isLower={false} />\n      </ImageBackground>\n    </View>\n  );\n};\n\nexport default MultiplayerBattle;\n\nconst styles = StyleSheet.create({\n  bg: {\n    width: \"100%\",\n    height: \"100%\",\n    resizeMode: \"contain\",\n    display: \"flex\",\n    flexDirection: \"column-reverse\",\n  },\n  subTasksPanel: {\n    backgroundColor: \"#9EDBD8\",\n    width: 200,\n    height: 250,\n  },\n  subTasksContainer: {\n    display: \"flex\",\n    flex: 1,\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  panelsContainer: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"space-evenly\",\n  },\n  text: {\n    fontSize: 25,\n    color: \"white\",\n    fontFamily: \"RetroGaming\",\n  },\n  textContainer: {\n    flex: 1,\n    flexWrap: \"nowrap\",\n    // marginLeft: 30,\n    // marginTop: 5,\n  },\n  name: {\n    fontSize: 30,\n    color: \"white\",\n    fontFamily: \"RetroGaming\",\n    // marginLeft: 30,\n    // marginTop: 5,\n    // marginBottom: 30,\n    textDecorationStyle: \"solid\",\n    textDecorationLine: \"underline\",\n  },\n  lowerAvatar: {\n    width: 150,\n    height: 150,\n    marginLeft: 10,\n    marginBottom: 20,\n  },\n  upperAvatar: {\n    width: 150,\n    height: 150,\n    position: \"absolute\",\n    top: 80,\n    right: 20,\n    transform: [{ scaleX: -1 }],\n  },\n});\n"]},"metadata":{},"sourceType":"module"}