{"ast":null,"code":"import _toArray from \"@babel/runtime/helpers/toArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport React from \"react\";\nimport Topbar from \"../components/Topbar\";\nimport BottomBar from \"../components/BottomBar\";\nimport { useContext, useEffect, useState } from \"react/cjs/react.development\";\nimport { UserContext } from \"../UserContext\";\nimport { QuestContext } from \"../QuestContext\";\nimport { doc, getDoc, updateDoc } from \"@firebase/firestore\";\nimport { db } from \"../firebase\";\nimport { Audio } from \"expo-av\";\nimport { useFonts } from \"expo-font\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar PickATask = function PickATask(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useContext = useContext(UserContext),\n      user = _useContext.user,\n      setUser = _useContext.setUser;\n\n  var _useContext2 = useContext(QuestContext),\n      quest = _useContext2.quest,\n      setQuest = _useContext2.setQuest;\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      sound = _useState2[0],\n      setSound = _useState2[1];\n\n  var _useFonts = useFonts({\n    RetroGaming: require(\"../assets/fonts/RetroGaming-Regular.ttf\"),\n    InkyThinPixels: require(\"../assets/fonts/InkyThinPixels-Regular.ttf\"),\n    PlayMeGames: require(\"../assets/fonts/Playmegames-Regular.ttf\")\n  }),\n      _useFonts2 = _toArray(_useFonts);\n\n  function playSelect() {\n    var _await$Audio$Sound$cr, sound;\n\n    return _regeneratorRuntime.async(function playSelect$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(Audio.Sound.createAsync(require(\"../assets/sfx/tap2.mp3\")));\n\n          case 2:\n            _await$Audio$Sound$cr = _context.sent;\n            sound = _await$Audio$Sound$cr.sound;\n            setSound(sound);\n            _context.next = 7;\n            return _regeneratorRuntime.awrap(sound.playAsync());\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  var pressHandler = function pressHandler(taskTitle) {\n    var docSnap;\n    return _regeneratorRuntime.async(function pressHandler$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(playSelect());\n\n          case 2:\n            _context2.next = 4;\n            return _regeneratorRuntime.awrap(getDoc(doc(db, \"tasks\", taskTitle)));\n\n          case 4:\n            docSnap = _context2.sent;\n            _context2.next = 7;\n            return _regeneratorRuntime.awrap(setQuest(docSnap.data()));\n\n          case 7:\n            _context2.next = 9;\n            return _regeneratorRuntime.awrap(navigation.navigate(\"matchmakingSelect\"));\n\n          case 9:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return _jsx(View, {\n    children: _jsxs(ImageBackground, {\n      source: require(\"../assets/background.png\"),\n      style: styles.bg,\n      children: [_jsx(Topbar, {}), _jsx(View, {\n        style: styles.banner,\n        children: _jsx(Text, {\n          style: styles.bannerText,\n          children: \"Pick a quest to complete\"\n        })\n      }), _jsx(ScrollView, {\n        style: styles.tasksContainer,\n        children: user[\"tasks\"].map(function (task, index) {\n          return _jsx(Pressable, {\n            style: styles.taskContainer,\n            onPress: function onPress() {\n              return pressHandler(task);\n            },\n            android_disableSound: true,\n            children: _jsx(Text, {\n              style: styles.tasksText,\n              children: task\n            })\n          }, index);\n        })\n      }), _jsx(BottomBar, {})]\n    })\n  });\n};\n\nexport default PickATask;\nvar styles = StyleSheet.create({\n  bg: {\n    width: \"100%\",\n    height: \"100%\",\n    resizeMode: \"contain\",\n    display: \"flex\",\n    alignItems: \"center\"\n  },\n  banner: {\n    marginTop: 50,\n    backgroundColor: \"#DD4141\",\n    width: \"100%\"\n  },\n  bannerText: {\n    fontSize: 40,\n    fontFamily: \"PlayMeGames\",\n    color: \"white\",\n    textAlign: \"center\"\n  },\n  tasksText: {\n    fontSize: 20,\n    fontFamily: \"PlayMeGames\",\n    color: \"white\",\n    textAlign: \"center\"\n  },\n  tasksContainer: {\n    display: \"flex\",\n    backgroundColor: \"#04151F\",\n    width: 300,\n    height: 200,\n    marginTop: 25\n  },\n  taskContainer: {\n    backgroundColor: \"#072536\",\n    width: 300,\n    height: \"auto\",\n    marginBottom: 5\n  }\n});","map":{"version":3,"names":["React","Topbar","BottomBar","useContext","useEffect","useState","UserContext","QuestContext","doc","getDoc","updateDoc","db","Audio","useFonts","PickATask","navigation","user","setUser","quest","setQuest","sound","setSound","RetroGaming","require","InkyThinPixels","PlayMeGames","playSelect","Sound","createAsync","playAsync","pressHandler","taskTitle","docSnap","data","navigate","styles","bg","banner","bannerText","tasksContainer","map","task","index","taskContainer","tasksText","StyleSheet","create","width","height","resizeMode","display","alignItems","marginTop","backgroundColor","fontSize","fontFamily","color","textAlign","marginBottom"],"sources":["/home/aadivyaraushan/Documents/GitHub/nocrastination/screens/TaskSelect.js"],"sourcesContent":["import {\n  ImageBackground,\n  ScrollView,\n  StyleSheet,\n  Text,\n  View,\n  Pressable,\n} from \"react-native\";\nimport React from \"react\";\nimport Topbar from \"../components/Topbar\";\nimport BottomBar from \"../components/BottomBar\";\nimport { useContext, useEffect, useState } from \"react/cjs/react.development\";\nimport { UserContext } from \"../UserContext\";\nimport { QuestContext } from \"../QuestContext\";\nimport { doc, getDoc, updateDoc } from \"@firebase/firestore\";\nimport { db } from \"../firebase\";\nimport { Audio } from \"expo-av\";\nimport { useFonts } from \"expo-font\";\n\nconst PickATask = ({ navigation }) => {\n  const { user, setUser } = useContext(UserContext);\n  const { quest, setQuest } = useContext(QuestContext);\n  const [sound, setSound] = useState();\n  const [] = useFonts({\n    RetroGaming: require(\"../assets/fonts/RetroGaming-Regular.ttf\"),\n    InkyThinPixels: require(\"../assets/fonts/InkyThinPixels-Regular.ttf\"),\n    PlayMeGames: require(\"../assets/fonts/Playmegames-Regular.ttf\"),\n  });\n\n  async function playSelect() {\n    const { sound } = await Audio.Sound.createAsync(\n      require(\"../assets/sfx/tap2.mp3\")\n    );\n    setSound(sound);\n    await sound.playAsync();\n  }\n\n  const pressHandler = async (taskTitle) => {\n    // playSelect();\n    // awaitgetDoc(doc(db, \"tasks\", taskTitle)).then((task) => {\n    //   const questTemp = task.data();\n    //   updateDoc(doc(db, \"users\", user[\"email\"]), {\n    //     activeQuest: taskTitle,\n    //   })\n    //     .then(() => {\n    //       setQuest(questTemp);\n    //     })\n    //     .then(() => {\n    //       setUser({\n    //         activeQuest: taskTitle,\n    //         avatar: user[\"avatar\"],\n    //         coins: user[\"coins\"],\n    //         currentXp: user[\"currentXp\"],\n    //         diamonds: user[\"diamonds\"],\n    //         displayName: user[\"displayName\"],\n    //         email: user[\"email\"],\n    //         emotes: user[\"emotes\"],\n    //         items: user[\"items\"],\n    //         level: user[\"level\"],\n    //         multiplier: user[\"multiplier\"],\n    //         questsDone: user[\"questsDone\"],\n    //         tasks: user[\"tasks\"],\n    //       });\n    //     })\n    //     .then(() => {\n    //       navigation.navigate(\"matchmakingSelect\");\n    //     })\n    //     .catch((err) => console.log(err));\n    // });\n    await playSelect();\n    const docSnap = await getDoc(doc(db, \"tasks\", taskTitle));\n    // await updateDoc(doc(db, \"users\", user[\"email\"]), {\n    //   activeQuest: taskTitle,\n    // });\n    await setQuest(docSnap.data());\n    // await setUser({\n    //   activeQuest: taskTitle,\n    //   avatar: user[\"avatar\"],\n    //   coins: user[\"coins\"],\n    //   currentXp: user[\"currentXp\"],\n    //   diamonds: user[\"diamonds\"],\n    //   displayName: user[\"displayName\"],\n    //   email: user[\"email\"],\n    //   emotes: user[\"emotes\"],\n    //   items: user[\"items\"],\n    //   level: user[\"level\"],\n    //   multiplier: user[\"multiplier\"],\n    //   questsDone: user[\"questsDone\"],\n    //   tasks: user[\"tasks\"],\n    // });\n    await navigation.navigate(\"matchmakingSelect\");\n  };\n\n  return (\n    <View>\n      <ImageBackground\n        source={require(\"../assets/background.png\")}\n        style={styles.bg}\n      >\n        <Topbar />\n        <View style={styles.banner}>\n          <Text style={styles.bannerText}>Pick a quest to complete</Text>\n        </View>\n        <ScrollView style={styles.tasksContainer}>\n          {user[\"tasks\"].map((task, index) => {\n            return (\n              <Pressable\n                style={styles.taskContainer}\n                key={index}\n                onPress={() => pressHandler(task)}\n                android_disableSound={true}\n              >\n                <Text style={styles.tasksText}>{task}</Text>\n              </Pressable>\n            );\n          })}\n        </ScrollView>\n        <BottomBar />\n      </ImageBackground>\n    </View>\n  );\n};\n\nexport default PickATask;\n\nconst styles = StyleSheet.create({\n  bg: {\n    width: \"100%\",\n    height: \"100%\",\n    resizeMode: \"contain\",\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n  banner: {\n    marginTop: 50,\n    backgroundColor: \"#DD4141\",\n    width: \"100%\",\n  },\n  bannerText: {\n    fontSize: 40,\n    fontFamily: \"PlayMeGames\",\n    color: \"white\",\n    textAlign: \"center\",\n  },\n  tasksText: {\n    fontSize: 20,\n    fontFamily: \"PlayMeGames\",\n    color: \"white\",\n    textAlign: \"center\",\n  },\n  tasksContainer: {\n    display: \"flex\",\n    backgroundColor: \"#04151F\",\n    width: 300,\n    height: 200,\n    marginTop: 25,\n  },\n  taskContainer: {\n    backgroundColor: \"#072536\",\n    width: 300,\n    height: \"auto\",\n    marginBottom: 5,\n  },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}