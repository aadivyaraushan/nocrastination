{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport React, { useState, useContext } from \"react\";\nimport { getFirestore, setDoc, doc, updateDoc } from \"@firebase/firestore\";\nimport { UserContext } from \"../UserContext\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar AddTask = function AddTask() {\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      title = _useState2[0],\n      setTitle = _useState2[1];\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      subTasks = _useState4[0],\n      setSubTasks = _useState4[1];\n\n  var _useState5 = useState(),\n      _useState6 = _slicedToArray(_useState5, 2),\n      difficulty = _useState6[0],\n      setDifficulty = _useState6[1];\n\n  var _useContext = useContext(UserContext),\n      user = _useContext.user,\n      setUser = _useContext.setUser;\n\n  var db = getFirestore();\n\n  var handleAdd = function handleAdd() {\n    var subTasksArr, data, userRef;\n    return _regeneratorRuntime.async(function handleAdd$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!(difficulty === \"easy\" || difficulty === \"medium\" || difficulty === \"hard\")) {\n              alert(\"Invalid difficulty entered!\");\n            }\n\n            subTasksArr = subTasks.split(\",\");\n            data = {\n              title: title,\n              subTasks: subTasksArr,\n              difficulty: difficulty,\n              owner: user[\"email\"]\n            };\n            _context.next = 5;\n            return _regeneratorRuntime.awrap(setDoc(doc(db, \"tasks\", title), data));\n\n          case 5:\n            user[\"tasks\"].unshift(data[\"title\"]);\n            setUser({\n              activeQuest: user[\"activeQuest\"],\n              coins: user[\"coins\"],\n              emotes: user[\"emotes\"],\n              items: user[\"items\"],\n              currentXp: user[\"currentXp\"],\n              diamonds: user[\"diamonds\"],\n              displayName: user[\"displayName\"],\n              email: user[\"email\"],\n              level: user[\"level\"],\n              multiplier: user[\"multiplier\"],\n              questsDone: user[\"questsDone\"],\n              tasks: user[\"tasks\"],\n              avatar: user[\"avatar\"]\n            });\n            userRef = doc(db, \"users\", user[\"email\"]);\n            _context.next = 10;\n            return _regeneratorRuntime.awrap(updateDoc(userRef, {\n              tasks: user[\"tasks\"]\n            }));\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return _jsx(View, {\n    children: _jsxs(ImageBackground, {\n      source: require(\"../assets/background.png\"),\n      style: styles.bg,\n      children: [_jsx(Image, {\n        source: require(\"../assets/addTaskBanner.png\"),\n        style: styles.banner\n      }), _jsxs(View, {\n        style: styles.inputFieldsContainer,\n        children: [_jsx(TextInput, {\n          style: styles.inputFields,\n          onChangeText: setTitle,\n          value: title,\n          placeholder: \"Name the task.\"\n        }), _jsx(TextInput, {\n          style: styles.inputFields,\n          onChangeText: setSubTasks,\n          value: subTasks,\n          placeholder: \"Break the task into smaller sub-tasks(Each sub task should be separated by commas).\"\n        }), _jsx(TextInput, {\n          style: styles.inputFields,\n          onChangeText: setDifficulty,\n          value: difficulty,\n          placeholder: \"How difficult is the task(Only easy, medium and hard will be accepted)?\"\n        }), _jsx(Pressable, {\n          onPress: handleAdd,\n          children: _jsx(Image, {\n            source: require(\"./../assets/buttons/add.png\"),\n            style: styles.submit\n          })\n        })]\n      })]\n    })\n  });\n};\n\nvar styles = StyleSheet.create({\n  bg: {\n    width: \"100%\",\n    height: \"100%\"\n  },\n  banner: {\n    resizeMode: \"contain\",\n    position: \"absolute\",\n    top: 0,\n    width: \"100%\",\n    height: \"10%\",\n    backgroundColor: \"black\"\n  },\n  inputFields: {\n    marginTop: 50,\n    width: \"100%\",\n    backgroundColor: \"white\",\n    height: \"10%\"\n  },\n  inputFieldsContainer: {\n    marginTop: 50\n  },\n  submit: {\n    width: \"100%\",\n    height: \"40%\",\n    resizeMode: \"contain\",\n    top: 50\n  }\n});\nexport default AddTask;","map":{"version":3,"sources":["/home/aadivyaraushan/Documents/GitHub/nocrastination/screens/AddTask.js"],"names":["React","useState","useContext","getFirestore","setDoc","doc","updateDoc","UserContext","AddTask","title","setTitle","subTasks","setSubTasks","difficulty","setDifficulty","user","setUser","db","handleAdd","alert","subTasksArr","split","data","owner","unshift","activeQuest","coins","emotes","items","currentXp","diamonds","displayName","email","level","multiplier","questsDone","tasks","avatar","userRef","require","styles","bg","banner","inputFieldsContainer","inputFields","submit","StyleSheet","create","width","height","resizeMode","position","top","backgroundColor","marginTop"],"mappings":"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","sourcesContent":["import {\n  View,\n  Text,\n  StyleSheet,\n  ImageBackground,\n  Image,\n  TextInput,\n  Pressable,\n} from \"react-native\";\nimport React, { useState, useContext } from \"react\";\nimport { getFirestore, setDoc, doc, updateDoc } from \"@firebase/firestore\";\nimport { UserContext } from \"../UserContext\";\n\nconst AddTask = () => {\n  const [title, setTitle] = useState();\n  const [subTasks, setSubTasks] = useState();\n  const [difficulty, setDifficulty] = useState();\n\n  const { user, setUser } = useContext(UserContext);\n  const db = getFirestore();\n\n  const handleAdd = async () => {\n    if (\n      !(\n        difficulty === \"easy\" ||\n        difficulty === \"medium\" ||\n        difficulty === \"hard\"\n      )\n    ) {\n      alert(\"Invalid difficulty entered!\");\n    }\n\n    const subTasksArr = subTasks.split(\",\");\n\n    const data = {\n      title: title,\n      subTasks: subTasksArr,\n      difficulty: difficulty,\n      owner: user[\"email\"],\n    };\n\n    await setDoc(doc(db, \"tasks\", title), data);\n    user[\"tasks\"].unshift(data[\"title\"]);\n    setUser({\n      activeQuest: user[\"activeQuest\"],\n      coins: user[\"coins\"],\n      emotes: user[\"emotes\"],\n      items: user[\"items\"],\n      currentXp: user[\"currentXp\"],\n      diamonds: user[\"diamonds\"],\n      displayName: user[\"displayName\"],\n      email: user[\"email\"],\n      level: user[\"level\"],\n      multiplier: user[\"multiplier\"],\n      questsDone: user[\"questsDone\"],\n      tasks: user[\"tasks\"],\n      avatar: user[\"avatar\"],\n    });\n\n    const userRef = doc(db, \"users\", user[\"email\"]);\n    await updateDoc(userRef, {\n      tasks: user[\"tasks\"],\n    });\n  };\n\n  return (\n    <View>\n      <ImageBackground\n        source={require(\"../assets/background.png\")}\n        style={styles.bg}\n      >\n        <Image\n          source={require(\"../assets/addTaskBanner.png\")}\n          style={styles.banner}\n        />\n        <View style={styles.inputFieldsContainer}>\n          <TextInput\n            style={styles.inputFields}\n            onChangeText={setTitle}\n            value={title}\n            placeholder=\"Name the task.\"\n          />\n          <TextInput\n            style={styles.inputFields}\n            onChangeText={setSubTasks}\n            value={subTasks}\n            placeholder=\"Break the task into smaller sub-tasks(Each sub task should be separated by commas).\"\n          />\n          <TextInput\n            style={styles.inputFields}\n            onChangeText={setDifficulty}\n            value={difficulty}\n            placeholder=\"How difficult is the task(Only easy, medium and hard will be accepted)?\"\n          />\n          <Pressable onPress={handleAdd}>\n            <Image\n              source={require(\"./../assets/buttons/add.png\")}\n              style={styles.submit}\n            />\n          </Pressable>\n        </View>\n      </ImageBackground>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  bg: {\n    width: \"100%\",\n    height: \"100%\",\n  },\n  banner: {\n    resizeMode: \"contain\",\n    position: \"absolute\",\n    top: 0,\n    width: \"100%\",\n    height: \"10%\",\n    backgroundColor: \"black\",\n  },\n  inputFields: {\n    marginTop: 50,\n    width: \"100%\",\n    backgroundColor: \"white\",\n    height: \"10%\",\n  },\n  inputFieldsContainer: {\n    marginTop: 50,\n  },\n  submit: {\n    width: \"100%\",\n    height: \"40%\",\n    resizeMode: \"contain\",\n    top: 50,\n  },\n});\n\nexport default AddTask;\n"]},"metadata":{},"sourceType":"module"}