{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport { useContext, useState, useEffect } from \"react\";\nimport { getAuth, signInWithEmailAndPassword } from \"firebase/auth\";\nimport { getDoc, doc } from \"firebase/firestore\";\nimport { UserContext } from \"../UserContext.js\";\nimport { auth, db } from \"../firebase\";\nimport { Audio } from \"expo-av\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar userCred = null;\n\nfunction Login(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      onChangeEmail = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      onChangePassword = _useState4[1];\n\n  var _useState5 = useState(),\n      _useState6 = _slicedToArray(_useState5, 2),\n      sound = _useState6[0],\n      setSound = _useState6[1];\n\n  var _useContext = useContext(UserContext),\n      user = _useContext.user,\n      setUser = _useContext.setUser;\n\n  var handleLogin = function handleLogin() {\n    var docRef, docSnap;\n    return _regeneratorRuntime.async(function handleLogin$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(signInWithEmailAndPassword(auth, email, password).then(function (userCredentials) {\n              userCred = userCredentials.user;\n            }).catch(function (error) {\n              return alert(error.message);\n            }));\n\n          case 2:\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(doc(db, \"users\", userCred.email));\n\n          case 4:\n            docRef = _context.sent;\n            _context.next = 7;\n            return _regeneratorRuntime.awrap(getDoc(docRef));\n\n          case 7:\n            docSnap = _context.sent;\n\n            if (docSnap.exists()) {\n              setUser(docSnap.data());\n              playSound();\n              navigation.navigate(\"homepage\");\n            } else console.log(\"No such document!\");\n\n          case 9:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  function playSound() {\n    var _await$Audio$Sound$cr, sound;\n\n    return _regeneratorRuntime.async(function playSound$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(Audio.Sound.createAsync(require(\"../assets/sfx/tap2.mp3\")));\n\n          case 2:\n            _await$Audio$Sound$cr = _context2.sent;\n            sound = _await$Audio$Sound$cr.sound;\n            setSound(sound);\n            _context2.next = 7;\n            return _regeneratorRuntime.awrap(sound.playAsync());\n\n          case 7:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  useEffect(function () {\n    return sound ? function () {\n      console.log(\"Unloading Sound\");\n      sound.unloadAsync();\n    } : undefined;\n  }, [sound]);\n  return _jsx(View, {\n    style: styles.container,\n    children: _jsxs(ImageBackground, {\n      style: styles.bg,\n      source: require(\"./../assets/background.png\"),\n      children: [_jsx(Image, {\n        source: require(\"./../assets/loginBanner.png\"),\n        style: styles.banner\n      }), _jsxs(View, {\n        style: styles.inputFieldsContainer,\n        children: [_jsx(TextInput, {\n          style: styles.inputFields,\n          onChangeText: onChangeEmail,\n          value: email,\n          placeholder: \"Email\"\n        }), _jsx(TextInput, {\n          style: styles.inputFields,\n          onChangeText: onChangePassword,\n          value: password,\n          placeholder: \"Password\",\n          secureTextEntry: true\n        }), _jsx(Pressable, {\n          onPress: handleLogin,\n          android_disableSound: true,\n          children: _jsx(Image, {\n            source: require(\"./../assets/buttons/submit.png\"),\n            style: styles.submit\n          })\n        })]\n      })]\n    })\n  });\n}\n\nexport default Login;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\"\n  },\n  banner: {\n    resizeMode: \"contain\",\n    position: \"absolute\",\n    top: 0,\n    width: \"100%\",\n    height: \"10%\",\n    backgroundColor: \"black\"\n  },\n  bg: {\n    width: \"100%\",\n    height: \"100%\",\n    justifyContent: \"flex-start\"\n  },\n  inputFields: {\n    marginTop: 50,\n    width: \"100%\",\n    backgroundColor: \"white\",\n    height: \"10%\"\n  },\n  inputFieldsContainer: {\n    marginTop: 50\n  },\n  submit: {\n    width: \"100%\",\n    height: \"40%\",\n    resizeMode: \"contain\",\n    top: 50\n  }\n});","map":{"version":3,"sources":["/home/aadivyaraushan/Documents/GitHub/nocrastination/screens/Login.js"],"names":["useContext","useState","useEffect","getAuth","signInWithEmailAndPassword","getDoc","doc","UserContext","auth","db","Audio","userCred","Login","navigation","email","onChangeEmail","password","onChangePassword","sound","setSound","user","setUser","handleLogin","then","userCredentials","catch","error","alert","message","docRef","docSnap","exists","data","playSound","navigate","console","log","Sound","createAsync","require","playAsync","unloadAsync","undefined","styles","container","bg","banner","inputFieldsContainer","inputFields","submit","StyleSheet","create","flex","backgroundColor","display","flexDirection","justifyContent","resizeMode","position","top","width","height","marginTop"],"mappings":";;;;;;;;AAQA,SAASA,UAAT,EAAqBC,QAArB,EAA+BC,SAA/B,QAAgD,OAAhD;AACA,SAASC,OAAT,EAAkBC,0BAAlB,QAAoD,eAApD;AACA,SAASC,MAAT,EAAiBC,GAAjB,QAA4B,oBAA5B;AACA,SAASC,WAAT;AACA,SAASC,IAAT,EAAeC,EAAf;AACA,SAASC,KAAT,QAAsB,SAAtB;;;AAEA,IAAIC,QAAQ,GAAG,IAAf;;AAEA,SAASC,KAAT,OAA+B;AAAA,MAAdC,UAAc,QAAdA,UAAc;;AAC7B,kBAA+BZ,QAAQ,CAAC,EAAD,CAAvC;AAAA;AAAA,MAAOa,KAAP;AAAA,MAAcC,aAAd;;AACA,mBAAqCd,QAAQ,CAAC,EAAD,CAA7C;AAAA;AAAA,MAAOe,QAAP;AAAA,MAAiBC,gBAAjB;;AACA,mBAA0BhB,QAAQ,EAAlC;AAAA;AAAA,MAAOiB,KAAP;AAAA,MAAcC,QAAd;;AACA,oBAA0BnB,UAAU,CAACO,WAAD,CAApC;AAAA,MAAQa,IAAR,eAAQA,IAAR;AAAA,MAAcC,OAAd,eAAcA,OAAd;;AAEA,MAAMC,WAAW,GAAG,SAAdA,WAAc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACZlB,0BAA0B,CAACI,IAAD,EAAOM,KAAP,EAAcE,QAAd,CAA1B,CACHO,IADG,CACE,UAACC,eAAD,EAAqB;AACzBb,cAAAA,QAAQ,GAAGa,eAAe,CAACJ,IAA3B;AACD,aAHG,EAIHK,KAJG,CAIG,UAACC,KAAD;AAAA,qBAAWC,KAAK,CAACD,KAAK,CAACE,OAAP,CAAhB;AAAA,aAJH,CADY;;AAAA;AAAA;AAAA,6CAOGtB,GAAG,CAACG,EAAD,EAAK,OAAL,EAAcE,QAAQ,CAACG,KAAvB,CAPN;;AAAA;AAOZe,YAAAA,MAPY;AAAA;AAAA,6CAQIxB,MAAM,CAACwB,MAAD,CARV;;AAAA;AAQZC,YAAAA,OARY;;AASlB,gBAAIA,OAAO,CAACC,MAAR,EAAJ,EAAsB;AACpBV,cAAAA,OAAO,CAACS,OAAO,CAACE,IAAR,EAAD,CAAP;AACAC,cAAAA,SAAS;AACTpB,cAAAA,UAAU,CAACqB,QAAX,CAAoB,UAApB;AACD,aAJD,MAIOC,OAAO,CAACC,GAAR,CAAY,mBAAZ;;AAbW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAApB;;AAgBA,WAAeH,SAAf;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAC0BvB,KAAK,CAAC2B,KAAN,CAAYC,WAAZ,CACtBC,OAAO,0BADe,CAD1B;;AAAA;AAAA;AACUrB,YAAAA,KADV,yBACUA,KADV;AAIEC,YAAAA,QAAQ,CAACD,KAAD,CAAR;AAJF;AAAA,6CAMQA,KAAK,CAACsB,SAAN,EANR;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AASAtC,EAAAA,SAAS,CAAC,YAAM;AACd,WAAOgB,KAAK,GACR,YAAM;AACJiB,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACAlB,MAAAA,KAAK,CAACuB,WAAN;AACD,KAJO,GAKRC,SALJ;AAMD,GAPQ,EAON,CAACxB,KAAD,CAPM,CAAT;AASA,SACE,KAAC,IAAD;AAAM,IAAA,KAAK,EAAEyB,MAAM,CAACC,SAApB;AAAA,cACE,MAAC,eAAD;AACE,MAAA,KAAK,EAAED,MAAM,CAACE,EADhB;AAEE,MAAA,MAAM,EAAEN,OAAO,8BAFjB;AAAA,iBAIE,KAAC,KAAD;AACE,QAAA,MAAM,EAAEA,OAAO,+BADjB;AAEE,QAAA,KAAK,EAAEI,MAAM,CAACG;AAFhB,QAJF,EAQE,MAAC,IAAD;AAAM,QAAA,KAAK,EAAEH,MAAM,CAACI,oBAApB;AAAA,mBACE,KAAC,SAAD;AACE,UAAA,KAAK,EAAEJ,MAAM,CAACK,WADhB;AAEE,UAAA,YAAY,EAAEjC,aAFhB;AAGE,UAAA,KAAK,EAAED,KAHT;AAIE,UAAA,WAAW,EAAC;AAJd,UADF,EAOE,KAAC,SAAD;AACE,UAAA,KAAK,EAAE6B,MAAM,CAACK,WADhB;AAEE,UAAA,YAAY,EAAE/B,gBAFhB;AAGE,UAAA,KAAK,EAAED,QAHT;AAIE,UAAA,WAAW,EAAC,UAJd;AAKE,UAAA,eAAe;AALjB,UAPF,EAcE,KAAC,SAAD;AAAW,UAAA,OAAO,EAAEM,WAApB;AAAiC,UAAA,oBAAoB,EAAE,IAAvD;AAAA,oBACE,KAAC,KAAD;AACE,YAAA,MAAM,EAAEiB,OAAO,kCADjB;AAEE,YAAA,KAAK,EAAEI,MAAM,CAACM;AAFhB;AADF,UAdF;AAAA,QARF;AAAA;AADF,IADF;AAkCD;;AAED,eAAerC,KAAf;AAEA,IAAM+B,MAAM,GAAGO,UAAU,CAACC,MAAX,CAAkB;AAC/BP,EAAAA,SAAS,EAAE;AACTQ,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,eAAe,EAAE,MAFR;AAGTC,IAAAA,OAAO,EAAE,MAHA;AAITC,IAAAA,aAAa,EAAE,QAJN;AAKTC,IAAAA,cAAc,EAAE;AALP,GADoB;AAQ/BV,EAAAA,MAAM,EAAE;AACNW,IAAAA,UAAU,EAAE,SADN;AAENC,IAAAA,QAAQ,EAAE,UAFJ;AAGNC,IAAAA,GAAG,EAAE,CAHC;AAINC,IAAAA,KAAK,EAAE,MAJD;AAKNC,IAAAA,MAAM,EAAE,KALF;AAMNR,IAAAA,eAAe,EAAE;AANX,GARuB;AAgB/BR,EAAAA,EAAE,EAAE;AACFe,IAAAA,KAAK,EAAE,MADL;AAEFC,IAAAA,MAAM,EAAE,MAFN;AAGFL,IAAAA,cAAc,EAAE;AAHd,GAhB2B;AAqB/BR,EAAAA,WAAW,EAAE;AACXc,IAAAA,SAAS,EAAE,EADA;AAEXF,IAAAA,KAAK,EAAE,MAFI;AAGXP,IAAAA,eAAe,EAAE,OAHN;AAIXQ,IAAAA,MAAM,EAAE;AAJG,GArBkB;AA2B/Bd,EAAAA,oBAAoB,EAAE;AACpBe,IAAAA,SAAS,EAAE;AADS,GA3BS;AA8B/Bb,EAAAA,MAAM,EAAE;AACNW,IAAAA,KAAK,EAAE,MADD;AAENC,IAAAA,MAAM,EAAE,KAFF;AAGNJ,IAAAA,UAAU,EAAE,SAHN;AAINE,IAAAA,GAAG,EAAE;AAJC;AA9BuB,CAAlB,CAAf","sourcesContent":["import {\n  TextInput,\n  StyleSheet,\n  View,\n  Image,\n  ImageBackground,\n  Pressable,\n} from \"react-native\";\nimport { useContext, useState, useEffect } from \"react\";\nimport { getAuth, signInWithEmailAndPassword } from \"firebase/auth\";\nimport { getDoc, doc } from \"firebase/firestore\";\nimport { UserContext } from \"../UserContext.js\";\nimport { auth, db } from \"../firebase\";\nimport { Audio } from \"expo-av\";\n\nlet userCred = null;\n\nfunction Login({ navigation }) {\n  const [email, onChangeEmail] = useState(\"\");\n  const [password, onChangePassword] = useState(\"\");\n  const [sound, setSound] = useState();\n  const { user, setUser } = useContext(UserContext);\n\n  const handleLogin = async () => {\n    await signInWithEmailAndPassword(auth, email, password)\n      .then((userCredentials) => {\n        userCred = userCredentials.user;\n      })\n      .catch((error) => alert(error.message));\n\n    const docRef = await doc(db, \"users\", userCred.email);\n    const docSnap = await getDoc(docRef);\n    if (docSnap.exists()) {\n      setUser(docSnap.data());\n      playSound();\n      navigation.navigate(\"homepage\");\n    } else console.log(\"No such document!\");\n  };\n\n  async function playSound() {\n    const { sound } = await Audio.Sound.createAsync(\n      require(\"../assets/sfx/tap2.mp3\")\n    );\n    setSound(sound);\n\n    await sound.playAsync();\n  }\n\n  useEffect(() => {\n    return sound\n      ? () => {\n          console.log(\"Unloading Sound\");\n          sound.unloadAsync();\n        }\n      : undefined;\n  }, [sound]);\n\n  return (\n    <View style={styles.container}>\n      <ImageBackground\n        style={styles.bg}\n        source={require(\"./../assets/background.png\")}\n      >\n        <Image\n          source={require(\"./../assets/loginBanner.png\")}\n          style={styles.banner}\n        />\n        <View style={styles.inputFieldsContainer}>\n          <TextInput\n            style={styles.inputFields}\n            onChangeText={onChangeEmail}\n            value={email}\n            placeholder=\"Email\"\n          />\n          <TextInput\n            style={styles.inputFields}\n            onChangeText={onChangePassword}\n            value={password}\n            placeholder=\"Password\"\n            secureTextEntry\n          />\n          <Pressable onPress={handleLogin} android_disableSound={true}>\n            <Image\n              source={require(\"./../assets/buttons/submit.png\")}\n              style={styles.submit}\n            />\n          </Pressable>\n        </View>\n      </ImageBackground>\n    </View>\n  );\n}\n\nexport default Login;\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n  },\n  banner: {\n    resizeMode: \"contain\",\n    position: \"absolute\",\n    top: 0,\n    width: \"100%\",\n    height: \"10%\",\n    backgroundColor: \"black\",\n  },\n  bg: {\n    width: \"100%\",\n    height: \"100%\",\n    justifyContent: \"flex-start\",\n  },\n  inputFields: {\n    marginTop: 50,\n    width: \"100%\",\n    backgroundColor: \"white\",\n    height: \"10%\",\n  },\n  inputFieldsContainer: {\n    marginTop: 50,\n  },\n  submit: {\n    width: \"100%\",\n    height: \"40%\",\n    resizeMode: \"contain\",\n    top: 50,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}