{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _toArray from \"@babel/runtime/helpers/toArray\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport React, { useState, useEffect } from \"react\";\nimport { useFonts } from \"expo-font\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar HealthBar = function HealthBar(_ref) {\n  var health = _ref.health,\n      isLower = _ref.isLower;\n\n  var _useFonts = useFonts({\n    RetroGaming: require(\"../assets/fonts/RetroGaming-Regular.ttf\"),\n    InkyThinPixels: require(\"../assets/fonts/InkyThinPixels-Regular.ttf\"),\n    PlayMeGames: require(\"../assets/fonts/Playmegames-Regular.ttf\")\n  }),\n      _useFonts2 = _toArray(_useFonts);\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      bars = _useState2[0],\n      setBars = _useState2[1];\n\n  useEffect(function () {\n    setBars([]);\n    bars = [];\n\n    for (var i = 10; i <= health; i += 10) {\n      var key = Math.random();\n      bars.push(_jsx(View, {\n        style: {\n          backgroundColor: \"#E92720\",\n          width: 30,\n          height: 20,\n          borderColor: \"#000\",\n          borderWidth: 2\n        }\n      }, key));\n      setBars(bars);\n    }\n  }, [health]);\n\n  if (isLower) {\n    return _jsxs(View, {\n      style: styles.container,\n      children: [_jsx(Image, {\n        source: require(\"../assets/regeneration.png\"),\n        style: styles.heart\n      }), _jsx(View, {\n        style: styles.barsContainer,\n        children: bars\n      })]\n    });\n  } else {\n    return _jsxs(View, {\n      style: styles.containerUpper,\n      children: [_jsx(View, {\n        style: styles.barsContainerUpper,\n        children: bars\n      }), _jsx(Image, {\n        source: require(\"../assets/regeneration.png\"),\n        style: styles.heartUpper\n      })]\n    });\n  }\n};\n\nexport default HealthBar;\nvar styles = StyleSheet.create({\n  container: {\n    display: \"flex\",\n    flexDirection: \"row\"\n  },\n  containerUpper: {\n    display: \"flex\",\n    flexDirection: \"row-reverse\",\n    position: \"relative\",\n    top: 150\n  },\n  heart: {\n    width: 30,\n    height: 30,\n    marginLeft: 10,\n    marginBottom: 10\n  },\n  heartUpper: {\n    width: 30,\n    height: 30,\n    marginRight: 10,\n    marginBottom: 10\n  },\n  barsContainer: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    flexDirection: \"row\",\n    zIndex: 1,\n    position: \"absolute\",\n    width: \"100%\",\n    left: 40,\n    top: 2\n  },\n  barsContainerUpper: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    flexDirection: \"row-reverse\",\n    zIndex: 1,\n    position: \"absolute\",\n    width: \"100%\",\n    left: 40,\n    top: 2\n  }\n});","map":{"version":3,"names":["React","useState","useEffect","useFonts","HealthBar","health","isLower","RetroGaming","require","InkyThinPixels","PlayMeGames","bars","setBars","i","key","Math","random","push","backgroundColor","width","height","borderColor","borderWidth","styles","container","heart","barsContainer","containerUpper","barsContainerUpper","heartUpper","StyleSheet","create","display","flexDirection","position","top","marginLeft","marginBottom","marginRight","flexWrap","zIndex","left"],"sources":["/home/aadivyaraushan/Documents/GitHub/nocrastination/components/HealthBar.js"],"sourcesContent":["import { StyleSheet, Text, View, Image } from \"react-native\";\nimport React, { useState, useEffect } from \"react\";\nimport { useFonts } from \"expo-font\";\n\nconst HealthBar = ({ health, isLower }) => {\n  const [] = useFonts({\n    RetroGaming: require(\"../assets/fonts/RetroGaming-Regular.ttf\"),\n    InkyThinPixels: require(\"../assets/fonts/InkyThinPixels-Regular.ttf\"),\n    PlayMeGames: require(\"../assets/fonts/Playmegames-Regular.ttf\"),\n  });\n  let [bars, setBars] = useState([]);\n  useEffect(() => {\n    setBars([]);\n    bars = [];\n    for (let i = 10; i <= health; i += 10) {\n      let key = Math.random();\n      bars.push(\n        <View\n          style={{\n            backgroundColor: \"#E92720\",\n            width: 30,\n            height: 20,\n            borderColor: \"#000\",\n            borderWidth: 2,\n          }}\n          key={key}\n        ></View>\n      );\n      setBars(bars);\n    }\n  }, [health]);\n\n  if (isLower) {\n    return (\n      <View style={styles.container}>\n        <Image\n          source={require(\"../assets/regeneration.png\")}\n          style={styles.heart}\n        />\n        <View style={styles.barsContainer}>{bars}</View>\n      </View>\n    );\n  } else {\n    return (\n      <View style={styles.containerUpper}>\n        <View style={styles.barsContainerUpper}>{bars}</View>\n        <Image\n          source={require(\"../assets/regeneration.png\")}\n          style={styles.heartUpper}\n        />\n      </View>\n    );\n  }\n};\n\nexport default HealthBar;\n\nconst styles = StyleSheet.create({\n  container: {\n    display: \"flex\",\n    flexDirection: \"row\",\n  },\n  containerUpper: {\n    display: \"flex\",\n    flexDirection: \"row-reverse\",\n    position: \"relative\",\n    top: 150,\n  },\n  heart: {\n    width: 30,\n    height: 30,\n    marginLeft: 10,\n    marginBottom: 10,\n  },\n  heartUpper: {\n    width: 30,\n    height: 30,\n    marginRight: 10,\n    marginBottom: 10,\n  },\n  barsContainer: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    flexDirection: \"row\",\n    zIndex: 1,\n    position: \"absolute\",\n    width: \"100%\",\n    left: 40,\n    top: 2,\n  },\n  barsContainerUpper: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    flexDirection: \"row-reverse\",\n    zIndex: 1,\n    position: \"absolute\",\n    width: \"100%\",\n    left: 40,\n    top: 2,\n  },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}