{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport React, { useState } from \"react\";\nimport Topbar from \"../components/Topbar\";\nimport BottomBar from \"../components/BottomBar\";\nimport { useFonts } from \"expo-font\";\nimport { collection, getDocs, getFirestore, query, QuerySnapshot } from \"@firebase/firestore\";\nimport { useContext, useEffect } from \"react/cjs/react.development\";\nimport { auth, db } from \"../firebase\";\nimport { OrganisationContext } from \"../OrganisationContext\";\nimport { Audio } from \"expo-av\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar Organisations = function Organisations(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useFonts = useFonts({\n    RetroGaming: require(\"../assets/fonts/RetroGaming-Regular.ttf\")\n  }),\n      _useFonts2 = _slicedToArray(_useFonts, 1),\n      loaded = _useFonts2[0];\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      organisationsJSX = _useState2[0],\n      setOrganisationsJSX = _useState2[1];\n\n  var _useContext = useContext(OrganisationContext),\n      organisation = _useContext.organisation,\n      setOrganisation = _useContext.setOrganisation;\n\n  var organisations = [];\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      sound = _useState4[0],\n      setSound = _useState4[1];\n\n  function playTap() {\n    var _await$Audio$Sound$cr, sound;\n\n    return _regeneratorRuntime.async(function playTap$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(Audio.Sound.createAsync(require(\"../assets/sfx/tap1.mp3\")));\n\n          case 2:\n            _await$Audio$Sound$cr = _context.sent;\n            sound = _await$Audio$Sound$cr.sound;\n            setSound(sound);\n            _context.next = 7;\n            return _regeneratorRuntime.awrap(sound.playAsync());\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  useEffect(function () {\n    getDocs(collection(db, \"organisations\")).then(function (querySnapshot) {\n      querySnapshot.forEach(function (doc) {\n        organisations.push(doc.data());\n      });\n    }).then(function () {\n      setOrganisationsJSX(_jsx(View, {\n        style: styles.organisationsContainer,\n        children: organisations.map(function (organisation, index) {\n          return _jsx(Pressable, {\n            onPress: function onPress() {\n              playTap();\n              navigation.navigate(\"organisation\");\n              setOrganisation(organisation);\n            },\n            android_disableSound: true,\n            children: _jsxs(ImageBackground, {\n              source: require(\"../assets/organisationBG.png\"),\n              style: styles.organisationBackground,\n              children: [_jsx(Text, {\n                style: styles.organisationName,\n                children: organisation[\"name\"]\n              }), _jsxs(Text, {\n                style: styles.organisationDetails,\n                children: [\"Members: \", organisation[\"members\"].length]\n              }), _jsxs(Text, {\n                style: styles.organisationDetails,\n                children: [\"Level: \", organisation[\"level\"]]\n              }), _jsx(Text, {\n                style: styles.organisationAwardText,\n                children: organisation[\"awards\"]\n              }), _jsx(Image, {\n                source: require(\"../assets/trophy.png\"),\n                style: styles.organisationAwardImage\n              })]\n            }, index)\n          }, index);\n        })\n      }));\n    });\n  }, []);\n  return _jsx(View, {\n    children: _jsxs(ImageBackground, {\n      source: require(\"../assets/background.png\"),\n      style: styles.bg,\n      children: [_jsx(Topbar, {}), _jsx(View, {\n        style: styles.banner,\n        children: _jsx(Text, {\n          style: styles.bannerText,\n          children: \"Organisations\"\n        })\n      }), _jsx(View, {\n        style: styles.organisationsContainer,\n        children: organisationsJSX\n      }), _jsx(BottomBar, {})]\n    })\n  });\n};\n\nexport default Organisations;\nvar styles = StyleSheet.create({\n  bg: {\n    width: \"100%\",\n    height: \"100%\",\n    resizeMode: \"contain\"\n  },\n  banner: {\n    marginTop: 50,\n    backgroundColor: \"#DD4141\",\n    width: \"100%\"\n  },\n  bannerText: {\n    fontSize: 40,\n    fontFamily: \"RetroGaming\",\n    color: \"white\",\n    textAlign: \"center\"\n  },\n  organisationBackground: {\n    width: 320,\n    height: 105,\n    resizeMode: \"contain\",\n    margin: 20,\n    padding: 10\n  },\n  organisationName: {\n    fontSize: 25,\n    fontFamily: \"RetroGaming\",\n    color: \"white\",\n    textAlign: \"center\"\n  },\n  organisationDetails: {\n    fontSize: 13,\n    fontFamily: \"RetroGaming\",\n    color: \"white\",\n    textAlign: \"left\"\n  },\n  organisationsContainer: {\n    display: \"flex\",\n    alignItems: \"center\",\n    flexDirection: \"column\"\n  },\n  organisationAwardText: {\n    fontSize: 30,\n    fontFamily: \"RetroGaming\",\n    color: \"white\",\n    textAlign: \"right\",\n    zIndex: 2,\n    position: \"absolute\",\n    top: 60,\n    left: 240\n  },\n  organisationAwardImage: {\n    position: \"absolute\",\n    zIndex: 2,\n    height: 30,\n    width: 30,\n    top: 65,\n    left: 210\n  }\n});","map":{"version":3,"sources":["/home/aadivyaraushan/Documents/GitHub/nocrastination/screens/Organisations.js"],"names":["React","useState","Topbar","BottomBar","useFonts","collection","getDocs","getFirestore","query","QuerySnapshot","useContext","useEffect","auth","db","OrganisationContext","Audio","Organisations","navigation","RetroGaming","require","loaded","organisationsJSX","setOrganisationsJSX","organisation","setOrganisation","organisations","sound","setSound","playTap","Sound","createAsync","playAsync","then","querySnapshot","forEach","doc","push","data","styles","organisationsContainer","map","index","navigate","organisationBackground","organisationName","organisationDetails","length","organisationAwardText","organisationAwardImage","bg","banner","bannerText","StyleSheet","create","width","height","resizeMode","marginTop","backgroundColor","fontSize","fontFamily","color","textAlign","margin","padding","display","alignItems","flexDirection","zIndex","position","top","left"],"mappings":"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","sourcesContent":["import {\n  ImageBackground,\n  ScrollView,\n  StyleSheet,\n  Text,\n  View,\n  Image,\n  Pressable,\n} from \"react-native\";\nimport React, { useState } from \"react\";\nimport Topbar from \"../components/Topbar\";\nimport BottomBar from \"../components/BottomBar\";\nimport { useFonts } from \"expo-font\";\nimport {\n  collection,\n  getDocs,\n  getFirestore,\n  query,\n  QuerySnapshot,\n} from \"@firebase/firestore\";\nimport { useContext, useEffect } from \"react/cjs/react.development\";\nimport { auth, db } from \"../firebase\";\nimport { OrganisationContext } from \"../OrganisationContext\";\nimport { Audio } from \"expo-av\";\n\nconst Organisations = ({ navigation }) => {\n  const [loaded] = useFonts({\n    RetroGaming: require(\"../assets/fonts/RetroGaming-Regular.ttf\"),\n  });\n  const [organisationsJSX, setOrganisationsJSX] = useState();\n  const { organisation, setOrganisation } = useContext(OrganisationContext);\n  let organisations = [];\n  const [sound, setSound] = useState();\n  async function playTap() {\n    const { sound } = await Audio.Sound.createAsync(\n      require(\"../assets/sfx/tap1.mp3\")\n    );\n    setSound(sound);\n    await sound.playAsync();\n  }\n\n  useEffect(() => {\n    getDocs(collection(db, \"organisations\"))\n      .then((querySnapshot) => {\n        querySnapshot.forEach((doc) => {\n          organisations.push(doc.data());\n        });\n      })\n      .then(() => {\n        setOrganisationsJSX(\n          <View style={styles.organisationsContainer}>\n            {organisations.map((organisation, index) => {\n              return (\n                <Pressable\n                  onPress={() => {\n                    playTap();\n                    navigation.navigate(\"organisation\");\n                    setOrganisation(organisation);\n                  }}\n                  key={index}\n                  android_disableSound={true}\n                >\n                  <ImageBackground\n                    source={require(\"../assets/organisationBG.png\")}\n                    style={styles.organisationBackground}\n                    key={index}\n                  >\n                    <Text style={styles.organisationName}>\n                      {organisation[\"name\"]}\n                    </Text>\n                    <Text style={styles.organisationDetails}>\n                      Members: {organisation[\"members\"].length}\n                    </Text>\n                    <Text style={styles.organisationDetails}>\n                      Level: {organisation[\"level\"]}\n                    </Text>\n                    <Text style={styles.organisationAwardText}>\n                      {organisation[\"awards\"]}\n                    </Text>\n                    <Image\n                      source={require(\"../assets/trophy.png\")}\n                      style={styles.organisationAwardImage}\n                    />\n                  </ImageBackground>\n                </Pressable>\n              );\n            })}\n          </View>\n        );\n      });\n  }, []);\n\n  return (\n    <View>\n      <ImageBackground\n        source={require(\"../assets/background.png\")}\n        style={styles.bg}\n      >\n        <Topbar />\n        <View style={styles.banner}>\n          <Text style={styles.bannerText}>Organisations</Text>\n        </View>\n        <View style={styles.organisationsContainer}>{organisationsJSX}</View>\n        <BottomBar />\n      </ImageBackground>\n    </View>\n  );\n};\n\nexport default Organisations;\n\nconst styles = StyleSheet.create({\n  bg: {\n    width: \"100%\",\n    height: \"100%\",\n    resizeMode: \"contain\",\n  },\n  banner: {\n    marginTop: 50,\n    backgroundColor: \"#DD4141\",\n    width: \"100%\",\n  },\n  bannerText: {\n    fontSize: 40,\n    fontFamily: \"RetroGaming\",\n    color: \"white\",\n    textAlign: \"center\",\n  },\n  organisationBackground: {\n    width: 320,\n    height: 105,\n    resizeMode: \"contain\",\n    margin: 20,\n    padding: 10,\n  },\n  organisationName: {\n    fontSize: 25,\n    fontFamily: \"RetroGaming\",\n    color: \"white\",\n    textAlign: \"center\",\n  },\n  organisationDetails: {\n    fontSize: 13,\n    fontFamily: \"RetroGaming\",\n    color: \"white\",\n    textAlign: \"left\",\n  },\n  organisationsContainer: {\n    display: \"flex\",\n    alignItems: \"center\",\n    flexDirection: \"column\",\n  },\n  organisationAwardText: {\n    fontSize: 30,\n    fontFamily: \"RetroGaming\",\n    color: \"white\",\n    textAlign: \"right\",\n    zIndex: 2,\n    position: \"absolute\",\n    top: 60,\n    left: 240,\n  },\n  organisationAwardImage: {\n    position: \"absolute\",\n    zIndex: 2,\n    height: 30,\n    width: 30,\n    top: 65,\n    left: 210,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}