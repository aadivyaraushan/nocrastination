{"ast":null,"code":"import _toArray from \"@babel/runtime/helpers/toArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport React, { useEffect } from \"react\";\nimport { useContext, useState } from \"react/cjs/react.development\";\nimport { QuestContext } from \"../QuestContext\";\nimport { GameContext } from \"../GameContext\";\nimport HealthBar from \"../components/HealthBar\";\nimport { setButtonStyleAsync } from \"expo-navigation-bar\";\nimport { UserContext } from \"../UserContext\";\nimport { deleteDoc, doc, updateDoc } from \"@firebase/firestore\";\nimport { db, rtdb } from \"../firebase\";\nimport { Audio } from \"expo-av\";\nimport { useFonts } from \"expo-font\";\nimport { child, get, onValue, ref, remove, update } from \"firebase/database\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar MultiplayerBattle = function MultiplayerBattle(_ref) {\n  var route = _ref.route,\n      navigation = _ref.navigation;\n\n  var _useContext = useContext(UserContext),\n      user = _useContext.user,\n      setUser = _useContext.setUser;\n\n  var _useContext2 = useContext(QuestContext),\n      quest = _useContext2.quest,\n      setQuest = _useContext2.setQuest;\n\n  var _useContext3 = useContext(GameContext),\n      game = _useContext3.game,\n      setGame = _useContext3.setGame;\n\n  var rewardData = route.params;\n\n  var _useState = useState(80),\n      _useState2 = _slicedToArray(_useState, 2),\n      count = _useState2[0],\n      setCount = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      attackPressed = _useState4[0],\n      setAttackPressed = _useState4[1];\n\n  var _useState5 = useState(),\n      _useState6 = _slicedToArray(_useState5, 2),\n      sound = _useState6[0],\n      setSound = _useState6[1];\n\n  var _useFonts = useFonts({\n    RetroGaming: require(\"../assets/fonts/RetroGaming-Regular.ttf\"),\n    InkyThinPixels: require(\"../assets/fonts/InkyThinPixels-Regular.ttf\"),\n    PlayMeGames: require(\"../assets/fonts/Playmegames-Regular.ttf\")\n  }),\n      _useFonts2 = _toArray(_useFonts);\n\n  function playDamaged() {\n    var _await$Audio$Sound$cr, sound;\n\n    return _regeneratorRuntime.async(function playDamaged$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(Audio.Sound.createAsync(require(\"../assets/sfx/damaged.mp3\")));\n\n          case 2:\n            _await$Audio$Sound$cr = _context.sent;\n            sound = _await$Audio$Sound$cr.sound;\n            setSound(sound);\n            _context.next = 7;\n            return _regeneratorRuntime.awrap(sound.playAsync());\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  function playVictory() {\n    var _await$Audio$Sound$cr2, sound;\n\n    return _regeneratorRuntime.async(function playVictory$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(Audio.Sound.createAsync(require(\"../assets/sfx/victory.mp3\")));\n\n          case 2:\n            _await$Audio$Sound$cr2 = _context2.sent;\n            sound = _await$Audio$Sound$cr2.sound;\n            setSound(sound);\n            _context2.next = 7;\n            return _regeneratorRuntime.awrap(sound.playAsync());\n\n          case 7:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  function playDefeat() {\n    var _await$Audio$Sound$cr3, sound;\n\n    return _regeneratorRuntime.async(function playDefeat$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return _regeneratorRuntime.awrap(Audio.Sound.createAsync(require(\"../assets/sfx/defeat.mp3\")));\n\n          case 2:\n            _await$Audio$Sound$cr3 = _context3.sent;\n            sound = _await$Audio$Sound$cr3.sound;\n            setSound(sound);\n            _context3.next = 7;\n            return _regeneratorRuntime.awrap(sound.playAsync());\n\n          case 7:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  function playAttack() {\n    var _await$Audio$Sound$cr4, sound;\n\n    return _regeneratorRuntime.async(function playAttack$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.next = 2;\n            return _regeneratorRuntime.awrap(Audio.Sound.createAsync(require(\"../assets/sfx/attack.mp3\")));\n\n          case 2:\n            _await$Audio$Sound$cr4 = _context4.sent;\n            sound = _await$Audio$Sound$cr4.sound;\n            setSound(sound);\n            _context4.next = 7;\n            return _regeneratorRuntime.awrap(sound.playAsync());\n\n          case 7:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  var damage = 0;\n  get(child(ref(rtdb), \"games/\" + game + \"/damages\")).then(function (snapshot) {\n    if (snapshot.exists()) {\n      if (isPlayerOne) {\n        damage = snapshot.val()[\"player1\"];\n      } else {\n        damage = snapshot.val()[\"player2\"];\n      }\n    }\n  });\n\n  var _useState7 = useState([]),\n      _useState8 = _slicedToArray(_useState7, 2),\n      subTasks = _useState8[0],\n      setSubTasks = _useState8[1];\n\n  var _useState9 = useState(),\n      _useState10 = _slicedToArray(_useState9, 2),\n      health1 = _useState10[0],\n      setHealth1 = _useState10[1];\n\n  var _useState11 = useState(),\n      _useState12 = _slicedToArray(_useState11, 2),\n      health2 = _useState12[0],\n      setHealth2 = _useState12[1];\n\n  var _useState13 = useState(),\n      _useState14 = _slicedToArray(_useState13, 2),\n      player1Avatar = _useState14[0],\n      setPlayer1Avatar = _useState14[1];\n\n  var _useState15 = useState(),\n      _useState16 = _slicedToArray(_useState15, 2),\n      player2Avatar = _useState16[0],\n      setPlayer2Avatar = _useState16[1];\n\n  var _useState17 = useState(),\n      _useState18 = _slicedToArray(_useState17, 2),\n      displayName1 = _useState18[0],\n      setDisplayName1 = _useState18[1];\n\n  var _useState19 = useState(),\n      _useState20 = _slicedToArray(_useState19, 2),\n      displayName2 = _useState20[0],\n      setDisplayName2 = _useState20[1];\n\n  var _useState21 = useState(_jsx(_Fragment, {})),\n      _useState22 = _slicedToArray(_useState21, 2),\n      subTasks1 = _useState22[0],\n      setSubTasks1 = _useState22[1];\n\n  var _useState23 = useState(_jsx(_Fragment, {})),\n      _useState24 = _slicedToArray(_useState23, 2),\n      subTasks2 = _useState24[0],\n      setSubTasks2 = _useState24[1];\n\n  var _useState25 = useState(),\n      _useState26 = _slicedToArray(_useState25, 2),\n      isPlayerOne = _useState26[0],\n      setIsPlayerOne = _useState26[1];\n\n  useEffect(function () {\n    get(child(ref(rtdb), \"games/\" + game + \"/emails\")).then(function (snapshot) {\n      if (snapshot.exists()) {\n        setIsPlayerOne(snapshot.val()[\"player1\"] === user[\"email\"]);\n      }\n    });\n    onValue(ref(rtdb, \"games/\" + game + \"/subTasks\"), function (snapshot) {\n      if (isPlayerOne) setSubTasks(snapshot.val()[\"player1\"]);else setSubTasks(snapshot.val()[\"player2\"]);\n    });\n    onValue(ref(rtdb, \"games/\" + game + \"/healths\"), function (snapshot) {\n      if (isPlayerOne) {\n        setHealth1(snapshot.val()[\"player1\"]);\n        setHealth2(snapshot.val()[\"player2\"]);\n      } else {\n        setHealth1(snapshot.val()[\"player2\"]);\n        setHealth2(snapshot.val()[\"player1\"]);\n      }\n    });\n    get(child(ref(rtdb), \"games/\" + game + \"/avatars\")).then(function (snapshot) {\n      if (snapshot.exists()) {\n        if (isPlayerOne) {\n          switch (snapshot.val()[\"player1\"]) {\n            case \"superhero\":\n              setPlayer1Avatar(require(\"../assets/superhero.png\"));\n              break;\n\n            case \"wizard\":\n              setPlayer1Avatar(require(\"../assets/wizard.png\"));\n              break;\n          }\n\n          switch (snapshot.val()[\"player2\"]) {\n            case \"superhero\":\n              setPlayer2Avatar(require(\"../assets/superhero.png\"));\n              break;\n\n            case \"wizard\":\n              setPlayer2Avatar(require(\"../assets/wizard.png\"));\n              break;\n          }\n        } else {\n          switch (snapshot.val()[\"player2\"]) {\n            case \"superhero\":\n              setPlayer1Avatar(require(\"../assets/superhero.png\"));\n              break;\n\n            case \"wizard\":\n              setPlayer1Avatar(require(\"../assets/wizard.png\"));\n              break;\n          }\n\n          switch (snapshot.val()[\"player1\"]) {\n            case \"superhero\":\n              setPlayer2Avatar(require(\"../assets/superhero.png\"));\n              break;\n\n            case \"wizard\":\n              setPlayer2Avatar(require(\"../assets/wizard.png\"));\n              break;\n          }\n        }\n      }\n    });\n    get(child(ref(rtdb), \"games/\" + game + \"/names\")).then(function (snapshot) {\n      if (snapshot.exists()) {\n        if (isPlayerOne) {\n          setDisplayName1(snapshot.val()[\"player1\"]);\n          setDisplayName2(snapshot.val()[\"player2\"]);\n        } else {\n          setDisplayName1(snapshot.val()[\"player2\"]);\n          setDisplayName2(snapshot.val()[\"player1\"]);\n        }\n      }\n    });\n\n    if (isPlayerOne) {\n      setSubTasks1(_jsx(_Fragment, {\n        children: subTasks.map(function (subTask, index) {\n          return _jsx(Pressable, {\n            onPress: function onPress() {\n              console.log(\"Pressed\");\n\n              if (count < 60) {\n                alert(\"Wait 1 min before checking off another sub-quest\");\n              } else {\n                var subTasksTemp = subTasks;\n                subTasksTemp.splice(subTasksTemp.indexOf(subTask), 1);\n                var updates = {};\n                updates[\"games/\" + game + \"/subTasks/player1\"] = subTasksTemp;\n                updates[\"games/\" + game + \"/subTasks/player2\"] = health2 - damage;\n                update(ref(rtdb), updates).then(function () {\n                  setAttackPressed(true);\n                  playAttack();\n                });\n              }\n            },\n            style: styles.textContainer,\n            disabled: !isPlayerOne,\n            android_disableSound: true,\n            children: _jsxs(Text, {\n              style: styles.text,\n              children: [\"\\u25A1\", subTask]\n            }, index)\n          }, index);\n        })\n      }));\n      setSubTasks2(_jsx(Text, {\n        style: styles.text,\n        children: \"...\"\n      }));\n    } else {\n      setSubTasks2(_jsx(_Fragment, {\n        children: subTasks.map(function (subTask, index) {\n          return _jsx(Pressable, {\n            onPress: function onPress() {\n              console.log(\"Pressed\");\n\n              if (count < 60) {\n                alert(\"Wait 1 min before checking off another sub-quest\");\n              } else {\n                var subTasksTemp = subTasks;\n                subTasksTemp.splice(subTasksTemp.indexOf(subTask), 1);\n                var updates = {};\n                updates[\"games/\" + game + \"/subTasks/player2\"] = subTasksTemp;\n                updates[\"games/\" + game + \"/healths/player1\"] = health1 - damage;\n                update(ref(rtdb), updates).then(function () {\n                  setAttackPressed(true);\n                  playAttack();\n                });\n              }\n            },\n            style: styles.textContainer,\n            disabled: isPlayerOne,\n            android_disableSound: true,\n            children: _jsxs(Text, {\n              style: styles.text,\n              children: [\"\\u25A1\", subTask]\n            }, index)\n          }, index);\n        })\n      }));\n      setSubTasks1(_jsx(Text, {\n        style: styles.text,\n        children: \"...\"\n      }));\n    }\n  }, []);\n  return _jsx(View, {\n    children: _jsxs(ImageBackground, {\n      source: require(\"../assets/background.png\"),\n      style: styles.bg,\n      children: [_jsxs(View, {\n        style: styles.panelsContainer,\n        children: [_jsx(ImageBackground, {\n          style: styles.subTasksPanel,\n          children: _jsxs(View, {\n            style: styles.subTasksContainer,\n            children: [_jsx(Text, {\n              style: styles.name,\n              children: displayName1\n            }), subTasks1]\n          })\n        }), _jsx(ImageBackground, {\n          style: styles.subTasksPanel,\n          children: _jsxs(View, {\n            style: styles.subTasksContainer,\n            children: [_jsx(Text, {\n              style: styles.name,\n              children: displayName2\n            }), subTasks2]\n          })\n        })]\n      }), _jsx(HealthBar, {\n        health: health1,\n        isLower: true\n      }), _jsx(Image, {\n        style: styles.lowerAvatar,\n        source: player1Avatar\n      }), _jsx(Image, {\n        style: styles.upperAvatar,\n        source: player2Avatar\n      }), _jsx(HealthBar, {\n        health: health2,\n        isLower: false\n      })]\n    })\n  });\n};\n\nexport default MultiplayerBattle;\nvar styles = StyleSheet.create({\n  bg: {\n    width: \"100%\",\n    height: \"100%\",\n    resizeMode: \"contain\",\n    display: \"flex\",\n    flexDirection: \"column-reverse\"\n  },\n  subTasksPanel: {\n    backgroundColor: \"#9EDBD8\",\n    width: 200,\n    height: 250\n  },\n  subTasksContainer: {\n    display: \"flex\",\n    flex: 1,\n    flexDirection: \"column\",\n    alignItems: \"center\"\n  },\n  panelsContainer: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"space-evenly\"\n  },\n  text: {\n    fontSize: 25,\n    color: \"white\",\n    fontFamily: \"PlayMeGames\",\n    top: 0,\n    left: 0,\n    position: \"relative\"\n  },\n  textContainer: {\n    flex: 1,\n    flexWrap: \"nowrap\",\n    backgroundColor: \"red\"\n  },\n  name: {\n    fontSize: 30,\n    color: \"white\",\n    fontFamily: \"PlayMeGames\",\n    marginBottom: 10,\n    textDecorationStyle: \"solid\",\n    textDecorationLine: \"underline\"\n  },\n  lowerAvatar: {\n    width: 170,\n    height: 170,\n    marginLeft: 10,\n    marginBottom: 20,\n    resizeMode: \"contain\"\n  },\n  upperAvatar: {\n    width: 170,\n    height: 170,\n    position: \"absolute\",\n    top: 80,\n    right: 20,\n    transform: [{\n      scaleX: -1\n    }],\n    resizeMode: \"contain\"\n  }\n});","map":{"version":3,"names":["React","useEffect","useContext","useState","QuestContext","GameContext","HealthBar","setButtonStyleAsync","UserContext","deleteDoc","doc","updateDoc","db","rtdb","Audio","useFonts","child","get","onValue","ref","remove","update","MultiplayerBattle","route","navigation","user","setUser","quest","setQuest","game","setGame","rewardData","params","count","setCount","attackPressed","setAttackPressed","sound","setSound","RetroGaming","require","InkyThinPixels","PlayMeGames","playDamaged","Sound","createAsync","playAsync","playVictory","playDefeat","playAttack","damage","then","snapshot","exists","isPlayerOne","val","subTasks","setSubTasks","health1","setHealth1","health2","setHealth2","player1Avatar","setPlayer1Avatar","player2Avatar","setPlayer2Avatar","displayName1","setDisplayName1","displayName2","setDisplayName2","subTasks1","setSubTasks1","subTasks2","setSubTasks2","setIsPlayerOne","map","subTask","index","console","log","alert","subTasksTemp","splice","indexOf","updates","styles","textContainer","text","bg","panelsContainer","subTasksPanel","subTasksContainer","name","lowerAvatar","upperAvatar","StyleSheet","create","width","height","resizeMode","display","flexDirection","backgroundColor","flex","alignItems","justifyContent","fontSize","color","fontFamily","top","left","position","flexWrap","marginBottom","textDecorationStyle","textDecorationLine","marginLeft","right","transform","scaleX"],"sources":["/home/aadivyaraushan/Documents/GitHub/nocrastination/screens/MultiplayerBattle.js"],"sourcesContent":["import {\n  StyleSheet,\n  Text,\n  View,\n  ImageBackground,\n  Image,\n  Pressable,\n} from \"react-native\";\nimport React, { useEffect } from \"react\";\nimport { useContext, useState } from \"react/cjs/react.development\";\nimport { QuestContext } from \"../QuestContext\";\nimport { GameContext } from \"../GameContext\";\nimport HealthBar from \"../components/HealthBar\";\nimport { setButtonStyleAsync } from \"expo-navigation-bar\";\nimport { UserContext } from \"../UserContext\";\nimport { deleteDoc, doc, updateDoc } from \"@firebase/firestore\";\nimport { db, rtdb } from \"../firebase\";\nimport { Audio } from \"expo-av\";\nimport { useFonts } from \"expo-font\";\nimport { child, get, onValue, ref, remove, update } from \"firebase/database\";\n\nconst MultiplayerBattle = ({ route, navigation }) => {\n  // Declaration of necessary context\n  const { user, setUser } = useContext(UserContext);\n  const { quest, setQuest } = useContext(QuestContext);\n  const { game, setGame } = useContext(GameContext);\n\n  // Declaration of necessary data\n  const rewardData = route.params;\n  const [count, setCount] = useState(80);\n  const [attackPressed, setAttackPressed] = useState(false);\n  const [sound, setSound] = useState();\n  const [] = useFonts({\n    RetroGaming: require(\"../assets/fonts/RetroGaming-Regular.ttf\"),\n    InkyThinPixels: require(\"../assets/fonts/InkyThinPixels-Regular.ttf\"),\n    PlayMeGames: require(\"../assets/fonts/Playmegames-Regular.ttf\"),\n  });\n\n  // Sound functions\n  async function playDamaged() {\n    const { sound } = await Audio.Sound.createAsync(\n      require(\"../assets/sfx/damaged.mp3\")\n    );\n    setSound(sound);\n    await sound.playAsync();\n  }\n\n  async function playVictory() {\n    const { sound } = await Audio.Sound.createAsync(\n      require(\"../assets/sfx/victory.mp3\")\n    );\n    setSound(sound);\n    await sound.playAsync();\n  }\n\n  async function playDefeat() {\n    const { sound } = await Audio.Sound.createAsync(\n      require(\"../assets/sfx/defeat.mp3\")\n    );\n    setSound(sound);\n    await sound.playAsync();\n  }\n\n  async function playAttack() {\n    const { sound } = await Audio.Sound.createAsync(\n      require(\"../assets/sfx/attack.mp3\")\n    );\n    setSound(sound);\n    await sound.playAsync();\n  }\n\n  // Declaring isPlayerOne\n\n  // Declaring damage for player\n  let damage = 0;\n  get(child(ref(rtdb), `games/${game}/damages`)).then((snapshot) => {\n    if (snapshot.exists()) {\n      if (isPlayerOne) {\n        damage = snapshot.val()[\"player1\"];\n      } else {\n        damage = snapshot.val()[\"player2\"];\n      }\n    }\n  });\n\n  // Declaring state\n  const [subTasks, setSubTasks] = useState([]);\n  const [health1, setHealth1] = useState();\n  const [health2, setHealth2] = useState();\n  const [player1Avatar, setPlayer1Avatar] = useState();\n  const [player2Avatar, setPlayer2Avatar] = useState();\n  const [displayName1, setDisplayName1] = useState();\n  const [displayName2, setDisplayName2] = useState();\n  const [subTasks1, setSubTasks1] = useState(<></>);\n  const [subTasks2, setSubTasks2] = useState(<></>);\n  const [isPlayerOne, setIsPlayerOne] = useState();\n  useEffect(() => {\n    // Declaring isPlayerOne\n    get(child(ref(rtdb), `games/${game}/emails`)).then((snapshot) => {\n      if (snapshot.exists()) {\n        setIsPlayerOne(snapshot.val()[\"player1\"] === user[\"email\"]);\n        // console.log(isPlayerOne);\n      }\n    });\n\n    // Getting subTasks\n    onValue(ref(rtdb, `games/${game}/subTasks`), (snapshot) => {\n      if (isPlayerOne) setSubTasks(snapshot.val()[\"player1\"]);\n      else setSubTasks(snapshot.val()[\"player2\"]);\n    });\n    // Getting healths\n    onValue(ref(rtdb, `games/${game}/healths`), (snapshot) => {\n      if (isPlayerOne) {\n        setHealth1(snapshot.val()[\"player1\"]);\n        setHealth2(snapshot.val()[\"player2\"]);\n      } else {\n        setHealth1(snapshot.val()[\"player2\"]);\n        setHealth2(snapshot.val()[\"player1\"]);\n      }\n    });\n\n    // Getting avatars\n    get(child(ref(rtdb), `games/${game}/avatars`)).then((snapshot) => {\n      if (snapshot.exists()) {\n        if (isPlayerOne) {\n          switch (snapshot.val()[\"player1\"]) {\n            case \"superhero\":\n              setPlayer1Avatar(require(\"../assets/superhero.png\"));\n              break;\n            case \"wizard\":\n              setPlayer1Avatar(require(\"../assets/wizard.png\"));\n              break;\n          }\n          switch (snapshot.val()[\"player2\"]) {\n            case \"superhero\":\n              setPlayer2Avatar(require(\"../assets/superhero.png\"));\n              break;\n            case \"wizard\":\n              setPlayer2Avatar(require(\"../assets/wizard.png\"));\n              break;\n          }\n        } else {\n          switch (snapshot.val()[\"player2\"]) {\n            case \"superhero\":\n              setPlayer1Avatar(require(\"../assets/superhero.png\"));\n              break;\n            case \"wizard\":\n              setPlayer1Avatar(require(\"../assets/wizard.png\"));\n              break;\n          }\n          switch (snapshot.val()[\"player1\"]) {\n            case \"superhero\":\n              setPlayer2Avatar(require(\"../assets/superhero.png\"));\n              break;\n            case \"wizard\":\n              setPlayer2Avatar(require(\"../assets/wizard.png\"));\n              break;\n          }\n        }\n      }\n    });\n\n    // Getting displayName\n    get(child(ref(rtdb), `games/${game}/names`)).then((snapshot) => {\n      if (snapshot.exists()) {\n        if (isPlayerOne) {\n          setDisplayName1(snapshot.val()[\"player1\"]);\n          setDisplayName2(snapshot.val()[\"player2\"]);\n        } else {\n          setDisplayName1(snapshot.val()[\"player2\"]);\n          setDisplayName2(snapshot.val()[\"player1\"]);\n        }\n      }\n    });\n\n    // Setting subTasks JSX 1 and 2\n    if (isPlayerOne) {\n      setSubTasks1(\n        <>\n          {subTasks.map((subTask, index) => {\n            return (\n              <Pressable\n                onPress={() => {\n                  console.log(\"Pressed\");\n                  if (count < 60) {\n                    alert(\"Wait 1 min before checking off another sub-quest\");\n                  } else {\n                    let subTasksTemp = subTasks;\n                    subTasksTemp.splice(subTasksTemp.indexOf(subTask), 1);\n                    const updates = {};\n                    updates[`games/${game}/subTasks/player1`] = subTasksTemp;\n                    updates[`games/${game}/subTasks/player2`] =\n                      health2 - damage;\n\n                    update(ref(rtdb), updates).then(() => {\n                      setAttackPressed(true);\n                      playAttack();\n                    });\n                  }\n                }}\n                key={index}\n                style={styles.textContainer}\n                disabled={!isPlayerOne}\n                android_disableSound={true}\n              >\n                <Text style={styles.text} key={index}>\n                  □{subTask}\n                </Text>\n              </Pressable>\n            );\n          })}\n        </>\n      );\n\n      setSubTasks2(<Text style={styles.text}>...</Text>);\n    } else {\n      setSubTasks2(\n        <>\n          {subTasks.map((subTask, index) => {\n            return (\n              <Pressable\n                onPress={() => {\n                  console.log(\"Pressed\");\n                  if (count < 60) {\n                    alert(\"Wait 1 min before checking off another sub-quest\");\n                  } else {\n                    let subTasksTemp = subTasks;\n                    subTasksTemp.splice(subTasksTemp.indexOf(subTask), 1);\n                    const updates = {};\n                    updates[`games/${game}/subTasks/player2`] = subTasksTemp;\n                    updates[`games/${game}/healths/player1`] = health1 - damage;\n\n                    update(ref(rtdb), updates).then(() => {\n                      setAttackPressed(true);\n                      playAttack();\n                    });\n                  }\n                }}\n                key={index}\n                style={styles.textContainer}\n                disabled={isPlayerOne}\n                android_disableSound={true}\n              >\n                <Text style={styles.text} key={index}>\n                  □{subTask}\n                </Text>\n              </Pressable>\n            );\n          })}\n        </>\n      );\n\n      setSubTasks1(<Text style={styles.text}>...</Text>);\n    }\n  }, []);\n\n  return (\n    <View>\n      <ImageBackground\n        source={require(\"../assets/background.png\")}\n        style={styles.bg}\n      >\n        <View style={styles.panelsContainer}>\n          <ImageBackground style={styles.subTasksPanel}>\n            <View style={styles.subTasksContainer}>\n              <Text style={styles.name}>{displayName1}</Text>\n              {subTasks1}\n            </View>\n          </ImageBackground>\n          <ImageBackground style={styles.subTasksPanel}>\n            <View style={styles.subTasksContainer}>\n              <Text style={styles.name}>{displayName2}</Text>\n              {subTasks2}\n            </View>\n          </ImageBackground>\n        </View>\n        <HealthBar health={health1} isLower={true} />\n        <Image style={styles.lowerAvatar} source={player1Avatar} />\n        <Image style={styles.upperAvatar} source={player2Avatar} />\n        <HealthBar health={health2} isLower={false} />\n      </ImageBackground>\n    </View>\n  );\n};\n\nexport default MultiplayerBattle;\n\nconst styles = StyleSheet.create({\n  bg: {\n    width: \"100%\",\n    height: \"100%\",\n    resizeMode: \"contain\",\n    display: \"flex\",\n    flexDirection: \"column-reverse\",\n  },\n  subTasksPanel: {\n    backgroundColor: \"#9EDBD8\",\n    width: 200,\n    height: 250,\n  },\n  subTasksContainer: {\n    display: \"flex\",\n    flex: 1,\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  panelsContainer: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"space-evenly\",\n  },\n  text: {\n    fontSize: 25,\n    color: \"white\",\n    fontFamily: \"PlayMeGames\",\n    top: 0,\n    left: 0,\n    position: \"relative\",\n  },\n  textContainer: {\n    flex: 1,\n    flexWrap: \"nowrap\",\n    // marginLeft: 30,\n    // marginTop: 5,\n    // marginBottom: 5,\n    backgroundColor: \"red\",\n  },\n  name: {\n    fontSize: 30,\n    color: \"white\",\n    fontFamily: \"PlayMeGames\",\n    // marginLeft: 30,\n    // marginTop: 5,\n    marginBottom: 10,\n    textDecorationStyle: \"solid\",\n    textDecorationLine: \"underline\",\n  },\n  lowerAvatar: {\n    width: 170,\n    height: 170,\n    marginLeft: 10,\n    marginBottom: 20,\n    resizeMode: \"contain\",\n  },\n  upperAvatar: {\n    width: 170,\n    height: 170,\n    position: \"absolute\",\n    top: 80,\n    right: 20,\n    transform: [{ scaleX: -1 }],\n    resizeMode: \"contain\",\n  },\n});\n"],"mappings":";;;;;;;;;AAQA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,UAAT,EAAqBC,QAArB,QAAqC,6BAArC;AACA,SAASC,YAAT;AACA,SAASC,WAAT;AACA,OAAOC,SAAP;AACA,SAASC,mBAAT,QAAoC,qBAApC;AACA,SAASC,WAAT;AACA,SAASC,SAAT,EAAoBC,GAApB,EAAyBC,SAAzB,QAA0C,qBAA1C;AACA,SAASC,EAAT,EAAaC,IAAb;AACA,SAASC,KAAT,QAAsB,SAAtB;AACA,SAASC,QAAT,QAAyB,WAAzB;AACA,SAASC,KAAT,EAAgBC,GAAhB,EAAqBC,OAArB,EAA8BC,GAA9B,EAAmCC,MAAnC,EAA2CC,MAA3C,QAAyD,mBAAzD;;;;;AAEA,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,OAA2B;EAAA,IAAxBC,KAAwB,QAAxBA,KAAwB;EAAA,IAAjBC,UAAiB,QAAjBA,UAAiB;;EAEnD,kBAA0BtB,UAAU,CAACM,WAAD,CAApC;EAAA,IAAQiB,IAAR,eAAQA,IAAR;EAAA,IAAcC,OAAd,eAAcA,OAAd;;EACA,mBAA4BxB,UAAU,CAACE,YAAD,CAAtC;EAAA,IAAQuB,KAAR,gBAAQA,KAAR;EAAA,IAAeC,QAAf,gBAAeA,QAAf;;EACA,mBAA0B1B,UAAU,CAACG,WAAD,CAApC;EAAA,IAAQwB,IAAR,gBAAQA,IAAR;EAAA,IAAcC,OAAd,gBAAcA,OAAd;;EAGA,IAAMC,UAAU,GAAGR,KAAK,CAACS,MAAzB;;EACA,gBAA0B7B,QAAQ,CAAC,EAAD,CAAlC;EAAA;EAAA,IAAO8B,KAAP;EAAA,IAAcC,QAAd;;EACA,iBAA0C/B,QAAQ,CAAC,KAAD,CAAlD;EAAA;EAAA,IAAOgC,aAAP;EAAA,IAAsBC,gBAAtB;;EACA,iBAA0BjC,QAAQ,EAAlC;EAAA;EAAA,IAAOkC,KAAP;EAAA,IAAcC,QAAd;;EACA,gBAAWvB,QAAQ,CAAC;IAClBwB,WAAW,EAAEC,OAAO,2CADF;IAElBC,cAAc,EAAED,OAAO,8CAFL;IAGlBE,WAAW,EAAEF,OAAO;EAHF,CAAD,CAAnB;EAAA;;EAOA,SAAeG,WAAf;IAAA;;IAAA;MAAA;QAAA;UAAA;YAAA;YAAA,iCAC0B7B,KAAK,CAAC8B,KAAN,CAAYC,WAAZ,CACtBL,OAAO,6BADe,CAD1B;;UAAA;YAAA;YACUH,KADV,yBACUA,KADV;YAIEC,QAAQ,CAACD,KAAD,CAAR;YAJF;YAAA,iCAKQA,KAAK,CAACS,SAAN,EALR;;UAAA;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA;;EAQA,SAAeC,WAAf;IAAA;;IAAA;MAAA;QAAA;UAAA;YAAA;YAAA,iCAC0BjC,KAAK,CAAC8B,KAAN,CAAYC,WAAZ,CACtBL,OAAO,6BADe,CAD1B;;UAAA;YAAA;YACUH,KADV,0BACUA,KADV;YAIEC,QAAQ,CAACD,KAAD,CAAR;YAJF;YAAA,iCAKQA,KAAK,CAACS,SAAN,EALR;;UAAA;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA;;EAQA,SAAeE,UAAf;IAAA;;IAAA;MAAA;QAAA;UAAA;YAAA;YAAA,iCAC0BlC,KAAK,CAAC8B,KAAN,CAAYC,WAAZ,CACtBL,OAAO,4BADe,CAD1B;;UAAA;YAAA;YACUH,KADV,0BACUA,KADV;YAIEC,QAAQ,CAACD,KAAD,CAAR;YAJF;YAAA,iCAKQA,KAAK,CAACS,SAAN,EALR;;UAAA;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA;;EAQA,SAAeG,UAAf;IAAA;;IAAA;MAAA;QAAA;UAAA;YAAA;YAAA,iCAC0BnC,KAAK,CAAC8B,KAAN,CAAYC,WAAZ,CACtBL,OAAO,4BADe,CAD1B;;UAAA;YAAA;YACUH,KADV,0BACUA,KADV;YAIEC,QAAQ,CAACD,KAAD,CAAR;YAJF;YAAA,iCAKQA,KAAK,CAACS,SAAN,EALR;;UAAA;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA;;EAWA,IAAII,MAAM,GAAG,CAAb;EACAjC,GAAG,CAACD,KAAK,CAACG,GAAG,CAACN,IAAD,CAAJ,aAAqBgB,IAArB,cAAN,CAAH,CAA+CsB,IAA/C,CAAoD,UAACC,QAAD,EAAc;IAChE,IAAIA,QAAQ,CAACC,MAAT,EAAJ,EAAuB;MACrB,IAAIC,WAAJ,EAAiB;QACfJ,MAAM,GAAGE,QAAQ,CAACG,GAAT,GAAe,SAAf,CAAT;MACD,CAFD,MAEO;QACLL,MAAM,GAAGE,QAAQ,CAACG,GAAT,GAAe,SAAf,CAAT;MACD;IACF;EACF,CARD;;EAWA,iBAAgCpD,QAAQ,CAAC,EAAD,CAAxC;EAAA;EAAA,IAAOqD,QAAP;EAAA,IAAiBC,WAAjB;;EACA,iBAA8BtD,QAAQ,EAAtC;EAAA;EAAA,IAAOuD,OAAP;EAAA,IAAgBC,UAAhB;;EACA,kBAA8BxD,QAAQ,EAAtC;EAAA;EAAA,IAAOyD,OAAP;EAAA,IAAgBC,UAAhB;;EACA,kBAA0C1D,QAAQ,EAAlD;EAAA;EAAA,IAAO2D,aAAP;EAAA,IAAsBC,gBAAtB;;EACA,kBAA0C5D,QAAQ,EAAlD;EAAA;EAAA,IAAO6D,aAAP;EAAA,IAAsBC,gBAAtB;;EACA,kBAAwC9D,QAAQ,EAAhD;EAAA;EAAA,IAAO+D,YAAP;EAAA,IAAqBC,eAArB;;EACA,kBAAwChE,QAAQ,EAAhD;EAAA;EAAA,IAAOiE,YAAP;EAAA,IAAqBC,eAArB;;EACA,kBAAkClE,QAAQ,CAAC,mBAAD,CAA1C;EAAA;EAAA,IAAOmE,SAAP;EAAA,IAAkBC,YAAlB;;EACA,kBAAkCpE,QAAQ,CAAC,mBAAD,CAA1C;EAAA;EAAA,IAAOqE,SAAP;EAAA,IAAkBC,YAAlB;;EACA,kBAAsCtE,QAAQ,EAA9C;EAAA;EAAA,IAAOmD,WAAP;EAAA,IAAoBoB,cAApB;;EACAzE,SAAS,CAAC,YAAM;IAEdgB,GAAG,CAACD,KAAK,CAACG,GAAG,CAACN,IAAD,CAAJ,aAAqBgB,IAArB,aAAN,CAAH,CAA8CsB,IAA9C,CAAmD,UAACC,QAAD,EAAc;MAC/D,IAAIA,QAAQ,CAACC,MAAT,EAAJ,EAAuB;QACrBqB,cAAc,CAACtB,QAAQ,CAACG,GAAT,GAAe,SAAf,MAA8B9B,IAAI,CAAC,OAAD,CAAnC,CAAd;MAED;IACF,CALD;IAQAP,OAAO,CAACC,GAAG,CAACN,IAAD,aAAgBgB,IAAhB,eAAJ,EAAsC,UAACuB,QAAD,EAAc;MACzD,IAAIE,WAAJ,EAAiBG,WAAW,CAACL,QAAQ,CAACG,GAAT,GAAe,SAAf,CAAD,CAAX,CAAjB,KACKE,WAAW,CAACL,QAAQ,CAACG,GAAT,GAAe,SAAf,CAAD,CAAX;IACN,CAHM,CAAP;IAKArC,OAAO,CAACC,GAAG,CAACN,IAAD,aAAgBgB,IAAhB,cAAJ,EAAqC,UAACuB,QAAD,EAAc;MACxD,IAAIE,WAAJ,EAAiB;QACfK,UAAU,CAACP,QAAQ,CAACG,GAAT,GAAe,SAAf,CAAD,CAAV;QACAM,UAAU,CAACT,QAAQ,CAACG,GAAT,GAAe,SAAf,CAAD,CAAV;MACD,CAHD,MAGO;QACLI,UAAU,CAACP,QAAQ,CAACG,GAAT,GAAe,SAAf,CAAD,CAAV;QACAM,UAAU,CAACT,QAAQ,CAACG,GAAT,GAAe,SAAf,CAAD,CAAV;MACD;IACF,CARM,CAAP;IAWAtC,GAAG,CAACD,KAAK,CAACG,GAAG,CAACN,IAAD,CAAJ,aAAqBgB,IAArB,cAAN,CAAH,CAA+CsB,IAA/C,CAAoD,UAACC,QAAD,EAAc;MAChE,IAAIA,QAAQ,CAACC,MAAT,EAAJ,EAAuB;QACrB,IAAIC,WAAJ,EAAiB;UACf,QAAQF,QAAQ,CAACG,GAAT,GAAe,SAAf,CAAR;YACE,KAAK,WAAL;cACEQ,gBAAgB,CAACvB,OAAO,2BAAR,CAAhB;cACA;;YACF,KAAK,QAAL;cACEuB,gBAAgB,CAACvB,OAAO,wBAAR,CAAhB;cACA;UANJ;;UAQA,QAAQY,QAAQ,CAACG,GAAT,GAAe,SAAf,CAAR;YACE,KAAK,WAAL;cACEU,gBAAgB,CAACzB,OAAO,2BAAR,CAAhB;cACA;;YACF,KAAK,QAAL;cACEyB,gBAAgB,CAACzB,OAAO,wBAAR,CAAhB;cACA;UANJ;QAQD,CAjBD,MAiBO;UACL,QAAQY,QAAQ,CAACG,GAAT,GAAe,SAAf,CAAR;YACE,KAAK,WAAL;cACEQ,gBAAgB,CAACvB,OAAO,2BAAR,CAAhB;cACA;;YACF,KAAK,QAAL;cACEuB,gBAAgB,CAACvB,OAAO,wBAAR,CAAhB;cACA;UANJ;;UAQA,QAAQY,QAAQ,CAACG,GAAT,GAAe,SAAf,CAAR;YACE,KAAK,WAAL;cACEU,gBAAgB,CAACzB,OAAO,2BAAR,CAAhB;cACA;;YACF,KAAK,QAAL;cACEyB,gBAAgB,CAACzB,OAAO,wBAAR,CAAhB;cACA;UANJ;QAQD;MACF;IACF,CAtCD;IAyCAvB,GAAG,CAACD,KAAK,CAACG,GAAG,CAACN,IAAD,CAAJ,aAAqBgB,IAArB,YAAN,CAAH,CAA6CsB,IAA7C,CAAkD,UAACC,QAAD,EAAc;MAC9D,IAAIA,QAAQ,CAACC,MAAT,EAAJ,EAAuB;QACrB,IAAIC,WAAJ,EAAiB;UACfa,eAAe,CAACf,QAAQ,CAACG,GAAT,GAAe,SAAf,CAAD,CAAf;UACAc,eAAe,CAACjB,QAAQ,CAACG,GAAT,GAAe,SAAf,CAAD,CAAf;QACD,CAHD,MAGO;UACLY,eAAe,CAACf,QAAQ,CAACG,GAAT,GAAe,SAAf,CAAD,CAAf;UACAc,eAAe,CAACjB,QAAQ,CAACG,GAAT,GAAe,SAAf,CAAD,CAAf;QACD;MACF;IACF,CAVD;;IAaA,IAAID,WAAJ,EAAiB;MACfiB,YAAY,CACV;QAAA,UACGf,QAAQ,CAACmB,GAAT,CAAa,UAACC,OAAD,EAAUC,KAAV,EAAoB;UAChC,OACE,KAAC,SAAD;YACE,OAAO,EAAE,mBAAM;cACbC,OAAO,CAACC,GAAR,CAAY,SAAZ;;cACA,IAAI9C,KAAK,GAAG,EAAZ,EAAgB;gBACd+C,KAAK,CAAC,kDAAD,CAAL;cACD,CAFD,MAEO;gBACL,IAAIC,YAAY,GAAGzB,QAAnB;gBACAyB,YAAY,CAACC,MAAb,CAAoBD,YAAY,CAACE,OAAb,CAAqBP,OAArB,CAApB,EAAmD,CAAnD;gBACA,IAAMQ,OAAO,GAAG,EAAhB;gBACAA,OAAO,YAAUvD,IAAV,uBAAP,GAA4CoD,YAA5C;gBACAG,OAAO,YAAUvD,IAAV,uBAAP,GACE+B,OAAO,GAAGV,MADZ;gBAGA7B,MAAM,CAACF,GAAG,CAACN,IAAD,CAAJ,EAAYuE,OAAZ,CAAN,CAA2BjC,IAA3B,CAAgC,YAAM;kBACpCf,gBAAgB,CAAC,IAAD,CAAhB;kBACAa,UAAU;gBACX,CAHD;cAID;YACF,CAlBH;YAoBE,KAAK,EAAEoC,MAAM,CAACC,aApBhB;YAqBE,QAAQ,EAAE,CAAChC,WArBb;YAsBE,oBAAoB,EAAE,IAtBxB;YAAA,UAwBE,MAAC,IAAD;cAAM,KAAK,EAAE+B,MAAM,CAACE,IAApB;cAAA,qBACIX,OADJ;YAAA,GAA+BC,KAA/B;UAxBF,GAmBOA,KAnBP,CADF;QA8BD,CA/BA;MADH,EADU,CAAZ;MAqCAJ,YAAY,CAAC,KAAC,IAAD;QAAM,KAAK,EAAEY,MAAM,CAACE,IAApB;QAAA;MAAA,EAAD,CAAZ;IACD,CAvCD,MAuCO;MACLd,YAAY,CACV;QAAA,UACGjB,QAAQ,CAACmB,GAAT,CAAa,UAACC,OAAD,EAAUC,KAAV,EAAoB;UAChC,OACE,KAAC,SAAD;YACE,OAAO,EAAE,mBAAM;cACbC,OAAO,CAACC,GAAR,CAAY,SAAZ;;cACA,IAAI9C,KAAK,GAAG,EAAZ,EAAgB;gBACd+C,KAAK,CAAC,kDAAD,CAAL;cACD,CAFD,MAEO;gBACL,IAAIC,YAAY,GAAGzB,QAAnB;gBACAyB,YAAY,CAACC,MAAb,CAAoBD,YAAY,CAACE,OAAb,CAAqBP,OAArB,CAApB,EAAmD,CAAnD;gBACA,IAAMQ,OAAO,GAAG,EAAhB;gBACAA,OAAO,YAAUvD,IAAV,uBAAP,GAA4CoD,YAA5C;gBACAG,OAAO,YAAUvD,IAAV,sBAAP,GAA2C6B,OAAO,GAAGR,MAArD;gBAEA7B,MAAM,CAACF,GAAG,CAACN,IAAD,CAAJ,EAAYuE,OAAZ,CAAN,CAA2BjC,IAA3B,CAAgC,YAAM;kBACpCf,gBAAgB,CAAC,IAAD,CAAhB;kBACAa,UAAU;gBACX,CAHD;cAID;YACF,CAjBH;YAmBE,KAAK,EAAEoC,MAAM,CAACC,aAnBhB;YAoBE,QAAQ,EAAEhC,WApBZ;YAqBE,oBAAoB,EAAE,IArBxB;YAAA,UAuBE,MAAC,IAAD;cAAM,KAAK,EAAE+B,MAAM,CAACE,IAApB;cAAA,qBACIX,OADJ;YAAA,GAA+BC,KAA/B;UAvBF,GAkBOA,KAlBP,CADF;QA6BD,CA9BA;MADH,EADU,CAAZ;MAoCAN,YAAY,CAAC,KAAC,IAAD;QAAM,KAAK,EAAEc,MAAM,CAACE,IAApB;QAAA;MAAA,EAAD,CAAZ;IACD;EACF,CA9JQ,EA8JN,EA9JM,CAAT;EAgKA,OACE,KAAC,IAAD;IAAA,UACE,MAAC,eAAD;MACE,MAAM,EAAE/C,OAAO,4BADjB;MAEE,KAAK,EAAE6C,MAAM,CAACG,EAFhB;MAAA,WAIE,MAAC,IAAD;QAAM,KAAK,EAAEH,MAAM,CAACI,eAApB;QAAA,WACE,KAAC,eAAD;UAAiB,KAAK,EAAEJ,MAAM,CAACK,aAA/B;UAAA,UACE,MAAC,IAAD;YAAM,KAAK,EAAEL,MAAM,CAACM,iBAApB;YAAA,WACE,KAAC,IAAD;cAAM,KAAK,EAAEN,MAAM,CAACO,IAApB;cAAA,UAA2B1B;YAA3B,EADF,EAEGI,SAFH;UAAA;QADF,EADF,EAOE,KAAC,eAAD;UAAiB,KAAK,EAAEe,MAAM,CAACK,aAA/B;UAAA,UACE,MAAC,IAAD;YAAM,KAAK,EAAEL,MAAM,CAACM,iBAApB;YAAA,WACE,KAAC,IAAD;cAAM,KAAK,EAAEN,MAAM,CAACO,IAApB;cAAA,UAA2BxB;YAA3B,EADF,EAEGI,SAFH;UAAA;QADF,EAPF;MAAA,EAJF,EAkBE,KAAC,SAAD;QAAW,MAAM,EAAEd,OAAnB;QAA4B,OAAO,EAAE;MAArC,EAlBF,EAmBE,KAAC,KAAD;QAAO,KAAK,EAAE2B,MAAM,CAACQ,WAArB;QAAkC,MAAM,EAAE/B;MAA1C,EAnBF,EAoBE,KAAC,KAAD;QAAO,KAAK,EAAEuB,MAAM,CAACS,WAArB;QAAkC,MAAM,EAAE9B;MAA1C,EApBF,EAqBE,KAAC,SAAD;QAAW,MAAM,EAAEJ,OAAnB;QAA4B,OAAO,EAAE;MAArC,EArBF;IAAA;EADF,EADF;AA2BD,CAtQD;;AAwQA,eAAetC,iBAAf;AAEA,IAAM+D,MAAM,GAAGU,UAAU,CAACC,MAAX,CAAkB;EAC/BR,EAAE,EAAE;IACFS,KAAK,EAAE,MADL;IAEFC,MAAM,EAAE,MAFN;IAGFC,UAAU,EAAE,SAHV;IAIFC,OAAO,EAAE,MAJP;IAKFC,aAAa,EAAE;EALb,CAD2B;EAQ/BX,aAAa,EAAE;IACbY,eAAe,EAAE,SADJ;IAEbL,KAAK,EAAE,GAFM;IAGbC,MAAM,EAAE;EAHK,CARgB;EAa/BP,iBAAiB,EAAE;IACjBS,OAAO,EAAE,MADQ;IAEjBG,IAAI,EAAE,CAFW;IAGjBF,aAAa,EAAE,QAHE;IAIjBG,UAAU,EAAE;EAJK,CAbY;EAmB/Bf,eAAe,EAAE;IACfW,OAAO,EAAE,MADM;IAEfC,aAAa,EAAE,KAFA;IAGfI,cAAc,EAAE;EAHD,CAnBc;EAwB/BlB,IAAI,EAAE;IACJmB,QAAQ,EAAE,EADN;IAEJC,KAAK,EAAE,OAFH;IAGJC,UAAU,EAAE,aAHR;IAIJC,GAAG,EAAE,CAJD;IAKJC,IAAI,EAAE,CALF;IAMJC,QAAQ,EAAE;EANN,CAxByB;EAgC/BzB,aAAa,EAAE;IACbiB,IAAI,EAAE,CADO;IAEbS,QAAQ,EAAE,QAFG;IAMbV,eAAe,EAAE;EANJ,CAhCgB;EAwC/BV,IAAI,EAAE;IACJc,QAAQ,EAAE,EADN;IAEJC,KAAK,EAAE,OAFH;IAGJC,UAAU,EAAE,aAHR;IAMJK,YAAY,EAAE,EANV;IAOJC,mBAAmB,EAAE,OAPjB;IAQJC,kBAAkB,EAAE;EARhB,CAxCyB;EAkD/BtB,WAAW,EAAE;IACXI,KAAK,EAAE,GADI;IAEXC,MAAM,EAAE,GAFG;IAGXkB,UAAU,EAAE,EAHD;IAIXH,YAAY,EAAE,EAJH;IAKXd,UAAU,EAAE;EALD,CAlDkB;EAyD/BL,WAAW,EAAE;IACXG,KAAK,EAAE,GADI;IAEXC,MAAM,EAAE,GAFG;IAGXa,QAAQ,EAAE,UAHC;IAIXF,GAAG,EAAE,EAJM;IAKXQ,KAAK,EAAE,EALI;IAMXC,SAAS,EAAE,CAAC;MAAEC,MAAM,EAAE,CAAC;IAAX,CAAD,CANA;IAOXpB,UAAU,EAAE;EAPD;AAzDkB,CAAlB,CAAf"},"metadata":{},"sourceType":"module"}