{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _toArray from \"@babel/runtime/helpers/toArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { useContext, useState } from \"react\";\nimport { QuestContext } from \"../QuestContext\";\nimport { useFonts } from \"expo-font\";\nimport Topbar from \"../components/Topbar\";\nimport MultiSlider from \"@ptomasroos/react-native-multi-slider\";\nimport BottomBar from \"../components/BottomBar\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { Audio } from \"expo-av\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar QuestPage = function QuestPage(_ref) {\n  var route = _ref.route,\n      navigation = _ref.navigation;\n  var rewardData = route.params;\n\n  var _useContext = useContext(QuestContext),\n      quest = _useContext.quest,\n      setQuest = _useContext.setQuest;\n\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      duration = _useState2[0],\n      setDuration = _useState2[1];\n\n  var _useFonts = useFonts({\n    RetroGaming: require(\"../assets/fonts/RetroGaming-Regular.ttf\"),\n    InkyThinPixels: require(\"../assets/fonts/InkyThinPixels-Regular.ttf\"),\n    PlayMeGames: require(\"../assets/fonts/Playmegames-Regular.ttf\")\n  }),\n      _useFonts2 = _toArray(_useFonts);\n\n  var rewardsJSX = _jsxs(_Fragment, {\n    children: [_jsxs(Text, {\n      style: styles.paragraphText,\n      children: [rewardData[quest[\"difficulty\"]][\"xp\"], \"xp\"]\n    }), _jsxs(Text, {\n      style: styles.paragraphText,\n      children: [rewardData[quest[\"difficulty\"]][\"coins\"], \" coins\"]\n    })]\n  });\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      sound = _useState4[0],\n      setSound = _useState4[1];\n\n  function playTap() {\n    var _await$Audio$Sound$cr, sound;\n\n    return _regeneratorRuntime.async(function playTap$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(Audio.Sound.createAsync(require(\"../assets/sfx/tap2.mp3\")));\n\n          case 2:\n            _await$Audio$Sound$cr = _context.sent;\n            sound = _await$Audio$Sound$cr.sound;\n            setSound(sound);\n            _context.next = 7;\n            return _regeneratorRuntime.awrap(sound.playAsync());\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  function playFailed() {\n    var _await$Audio$Sound$cr2, sound;\n\n    return _regeneratorRuntime.async(function playFailed$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(Audio.Sound.createAsync(require(\"../assets/sfx/purchaseFailed.mp3\")));\n\n          case 2:\n            _await$Audio$Sound$cr2 = _context2.sent;\n            sound = _await$Audio$Sound$cr2.sound;\n            setSound(sound);\n            _context2.next = 7;\n            return _regeneratorRuntime.awrap(sound.playAsync());\n\n          case 7:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  return _jsx(View, {\n    children: _jsxs(ImageBackground, {\n      source: require(\"../assets/background.png\"),\n      style: styles.bg,\n      children: [_jsx(View, {\n        style: styles.banner,\n        children: _jsx(Text, {\n          style: styles.bannerText,\n          children: quest[\"title\"]\n        })\n      }), _jsx(Topbar, {}), _jsxs(ImageBackground, {\n        source: require(\"../assets/mediumPanel.png\"),\n        style: styles.sectionBG,\n        children: [_jsx(Text, {\n          style: styles.paragraphText,\n          children: \"Rewards: \"\n        }), rewardsJSX]\n      }), _jsxs(ImageBackground, {\n        source: require(\"../assets/mediumPanel.png\"),\n        style: styles.sectionBG,\n        children: [_jsx(Text, {\n          style: styles.paragraphText,\n          children: \"Duration: \"\n        }), _jsx(MultiSlider, {\n          sliderLength: 250,\n          min: 0,\n          max: 95,\n          step: 5,\n          onValuesChange: function onValuesChange(values) {\n            setDuration.apply(void 0, _toConsumableArray(values));\n\n            var _values = _slicedToArray(values, 1),\n                temp = _values[0];\n\n            setQuest({\n              difficulty: quest[\"difficulty\"],\n              owner: quest[\"owner\"],\n              subTasks: quest[\"subTasks\"],\n              title: quest[\"title\"],\n              duration: temp * 60\n            });\n          }\n        }), _jsxs(Text, {\n          style: styles.paragraphText,\n          children: [duration, \" mins\"]\n        })]\n      }), _jsx(Pressable, {\n        style: {\n          width: \"20%\",\n          height: \"20%\",\n          left: 150,\n          bottom: 250\n        },\n        onPress: function onPress() {\n          if (duration != 0) {\n            playTap();\n            navigation.navigate(\"activeQuestPage\");\n          } else {\n            playFailed();\n            alert(\"Duraton cannot be 0!\");\n          }\n        },\n        android_disableSound: true,\n        children: _jsx(Image, {\n          source: require(\"../assets/playButton.png\"),\n          style: styles.playButton\n        })\n      }), _jsx(BottomBar, {})]\n    })\n  });\n};\n\nexport default QuestPage;\nvar styles = StyleSheet.create({\n  bg: {\n    width: \"100%\",\n    height: \"100%\",\n    justifyContent: \"flex-start\",\n    alignItems: \"center\"\n  },\n  banner: {\n    width: \"100%\",\n    height: \"15%\",\n    backgroundColor: \"#E92720\",\n    top: 50,\n    flex: 1,\n    flexDirection: \"row\"\n  },\n  bannerText: {\n    color: \"#fff\",\n    textAlign: \"center\",\n    fontFamily: \"PlayMeGames\",\n    fontSize: 25,\n    flex: 1,\n    flexWrap: \"wrap\",\n    alignSelf: \"center\"\n  },\n  paragraphText: {\n    fontFamily: \"PlayMeGames\",\n    color: \"white\",\n    fontSize: 30\n  },\n  sectionBG: {\n    width: \"100%\",\n    height: \"auto\",\n    resizeMode: \"contain\",\n    padding: 50,\n    top: 70,\n    marginBottom: 20\n  },\n  playButton: {\n    width: \"100%\",\n    height: \"100%\",\n    resizeMode: \"contain\"\n  }\n});","map":{"version":3,"names":["useContext","useState","QuestContext","useFonts","Topbar","MultiSlider","BottomBar","NavigationContainer","Audio","QuestPage","route","navigation","rewardData","params","quest","setQuest","duration","setDuration","RetroGaming","require","InkyThinPixels","PlayMeGames","rewardsJSX","styles","paragraphText","sound","setSound","playTap","Sound","createAsync","playAsync","playFailed","bg","banner","bannerText","sectionBG","values","temp","difficulty","owner","subTasks","title","width","height","left","bottom","navigate","alert","playButton","StyleSheet","create","justifyContent","alignItems","backgroundColor","top","flex","flexDirection","color","textAlign","fontFamily","fontSize","flexWrap","alignSelf","resizeMode","padding","marginBottom"],"sources":["/home/aadivyaraushan/Documents/GitHub/nocrastination/screens/QuestPage.js"],"sourcesContent":["import {\n  ImageBackground,\n  Pressable,\n  StyleSheet,\n  Text,\n  View,\n  Image,\n} from \"react-native\";\nimport { useContext, useState } from \"react\";\nimport { QuestContext } from \"../QuestContext\";\nimport { useFonts } from \"expo-font\";\nimport Topbar from \"../components/Topbar\";\nimport MultiSlider from \"@ptomasroos/react-native-multi-slider\";\nimport BottomBar from \"../components/BottomBar\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { Audio } from \"expo-av\";\n\nconst QuestPage = ({ route, navigation }) => {\n  const rewardData = route.params;\n  const { quest, setQuest } = useContext(QuestContext);\n  const [duration, setDuration] = useState(0);\n  const [] = useFonts({\n    RetroGaming: require(\"../assets/fonts/RetroGaming-Regular.ttf\"),\n    InkyThinPixels: require(\"../assets/fonts/InkyThinPixels-Regular.ttf\"),\n    PlayMeGames: require(\"../assets/fonts/Playmegames-Regular.ttf\"),\n  });\n  let rewardsJSX = (\n    <>\n      <Text style={styles.paragraphText}>\n        {rewardData[quest[\"difficulty\"]][\"xp\"]}xp\n      </Text>\n      <Text style={styles.paragraphText}>\n        {rewardData[quest[\"difficulty\"]][\"coins\"]} coins\n      </Text>\n    </>\n  );\n  const [sound, setSound] = useState();\n  async function playTap() {\n    const { sound } = await Audio.Sound.createAsync(\n      require(\"../assets/sfx/tap2.mp3\")\n    );\n    setSound(sound);\n    await sound.playAsync();\n  }\n  async function playFailed() {\n    const { sound } = await Audio.Sound.createAsync(\n      require(\"../assets/sfx/purchaseFailed.mp3\")\n    );\n    setSound(sound);\n    await sound.playAsync();\n  }\n\n  return (\n    <View>\n      <ImageBackground\n        source={require(\"../assets/background.png\")}\n        style={styles.bg}\n      >\n        <View style={styles.banner}>\n          <Text style={styles.bannerText}>{quest[\"title\"]}</Text>\n        </View>\n        <Topbar />\n        <ImageBackground\n          source={require(\"../assets/mediumPanel.png\")}\n          style={styles.sectionBG}\n        >\n          <Text style={styles.paragraphText}>Rewards: </Text>\n          {rewardsJSX}\n        </ImageBackground>\n        <ImageBackground\n          source={require(\"../assets/mediumPanel.png\")}\n          style={styles.sectionBG}\n        >\n          <Text style={styles.paragraphText}>Duration: </Text>\n          <MultiSlider\n            sliderLength={250}\n            min={0}\n            max={95}\n            step={5}\n            onValuesChange={(values) => {\n              setDuration(...values);\n              const [temp] = values;\n              setQuest({\n                difficulty: quest[\"difficulty\"],\n                owner: quest[\"owner\"],\n                subTasks: quest[\"subTasks\"],\n                title: quest[\"title\"],\n                duration: temp * 60,\n              });\n            }}\n          />\n          <Text style={styles.paragraphText}>{duration} mins</Text>\n        </ImageBackground>\n        <Pressable\n          style={{ width: \"20%\", height: \"20%\", left: 150, bottom: 250 }}\n          onPress={() => {\n            if (duration != 0) {\n              playTap();\n              navigation.navigate(\"activeQuestPage\");\n            } else {\n              playFailed();\n              alert(\"Duraton cannot be 0!\");\n            }\n          }}\n          android_disableSound={true}\n        >\n          <Image\n            source={require(\"../assets/playButton.png\")}\n            style={styles.playButton}\n          />\n        </Pressable>\n        <BottomBar />\n      </ImageBackground>\n    </View>\n  );\n};\n\nexport default QuestPage;\n\nconst styles = StyleSheet.create({\n  bg: {\n    width: \"100%\",\n    height: \"100%\",\n    justifyContent: \"flex-start\",\n    alignItems: \"center\",\n  },\n  banner: {\n    width: \"100%\",\n    height: \"15%\",\n    backgroundColor: \"#E92720\",\n    top: 50,\n    flex: 1,\n    flexDirection: \"row\",\n  },\n  bannerText: {\n    color: \"#fff\",\n    textAlign: \"center\",\n    fontFamily: \"PlayMeGames\",\n    fontSize: 25,\n    flex: 1,\n    flexWrap: \"wrap\",\n    alignSelf: \"center\",\n  },\n  paragraphText: {\n    fontFamily: \"PlayMeGames\",\n    color: \"white\",\n    fontSize: 30,\n  },\n  sectionBG: {\n    width: \"100%\",\n    height: \"auto\",\n    resizeMode: \"contain\",\n    padding: 50,\n    top: 70,\n    marginBottom: 20,\n  },\n  playButton: {\n    width: \"100%\",\n    height: \"100%\",\n    resizeMode: \"contain\",\n  },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}