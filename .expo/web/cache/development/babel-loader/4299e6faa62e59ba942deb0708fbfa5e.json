{"ast":null,"code":"import _toArray from \"@babel/runtime/helpers/toArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport React, { useState, useContext } from \"react\";\nimport { getFirestore, setDoc, doc, updateDoc } from \"@firebase/firestore\";\nimport { UserContext } from \"../UserContext\";\nimport { useFonts } from \"expo-font\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar AddTask = function AddTask() {\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      title = _useState2[0],\n      setTitle = _useState2[1];\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      subTasks = _useState4[0],\n      setSubTasks = _useState4[1];\n\n  var _useState5 = useState(),\n      _useState6 = _slicedToArray(_useState5, 2),\n      difficulty = _useState6[0],\n      setDifficulty = _useState6[1];\n\n  var _useFonts = useFonts({\n    RetroGaming: require(\"../assets/fonts/RetroGaming-Regular.ttf\"),\n    InkyThinPixels: require(\"../assets/fonts/InkyThinPixels-Regular.ttf\"),\n    PlayMeGames: require(\"../assets/fonts/Playmegames-Regular.ttf\")\n  }),\n      _useFonts2 = _toArray(_useFonts);\n\n  var _useContext = useContext(UserContext),\n      user = _useContext.user,\n      setUser = _useContext.setUser;\n\n  var db = getFirestore();\n\n  var handleAdd = function handleAdd() {\n    var subTasksArr, data, userRef;\n    return _regeneratorRuntime.async(function handleAdd$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!(difficulty === \"easy\" || difficulty === \"medium\" || difficulty === \"hard\")) {\n              alert(\"Invalid difficulty entered!\");\n            }\n\n            subTasksArr = subTasks.split(\",\");\n            data = {\n              title: title,\n              subTasks: subTasksArr,\n              difficulty: difficulty,\n              owner: user[\"email\"]\n            };\n            _context.next = 5;\n            return _regeneratorRuntime.awrap(setDoc(doc(db, \"tasks\", title), data));\n\n          case 5:\n            user[\"tasks\"].unshift(data[\"title\"]);\n            setUser({\n              activeQuest: user[\"activeQuest\"],\n              coins: user[\"coins\"],\n              emotes: user[\"emotes\"],\n              items: user[\"items\"],\n              currentXp: user[\"currentXp\"],\n              diamonds: user[\"diamonds\"],\n              displayName: user[\"displayName\"],\n              email: user[\"email\"],\n              level: user[\"level\"],\n              multiplier: user[\"multiplier\"],\n              questsDone: user[\"questsDone\"],\n              tasks: user[\"tasks\"],\n              avatar: user[\"avatar\"]\n            });\n            userRef = doc(db, \"users\", user[\"email\"]);\n            _context.next = 10;\n            return _regeneratorRuntime.awrap(updateDoc(userRef, {\n              tasks: user[\"tasks\"]\n            }));\n\n          case 10:\n            alert(\"Task added!\");\n\n          case 11:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return _jsx(View, {\n    children: _jsxs(ImageBackground, {\n      source: require(\"../assets/background.png\"),\n      style: styles.bg,\n      children: [_jsx(View, {\n        style: styles.banner,\n        children: _jsx(Text, {\n          style: styles.bannerText,\n          children: \"ADD TASK\"\n        })\n      }), _jsxs(View, {\n        style: styles.inputFieldsContainer,\n        children: [_jsx(TextInput, {\n          style: styles.inputFields,\n          onChangeText: setTitle,\n          value: title,\n          placeholder: \"Name the task.\"\n        }), _jsx(TextInput, {\n          style: styles.inputFields,\n          onChangeText: setSubTasks,\n          value: subTasks,\n          placeholder: \"Break the task into smaller sub-tasks(Each sub task should be separated by commas).\"\n        }), _jsx(TextInput, {\n          style: styles.inputFields,\n          onChangeText: setDifficulty,\n          value: difficulty,\n          placeholder: \"How difficult is the task(Only easy, medium and hard will be accepted)?\"\n        }), _jsx(Pressable, {\n          onPress: handleAdd,\n          children: _jsx(Image, {\n            source: require(\"./../assets/buttons/add.png\"),\n            style: styles.submit\n          })\n        })]\n      })]\n    })\n  });\n};\n\nvar styles = StyleSheet.create({\n  bg: {\n    width: \"100%\",\n    height: \"100%\"\n  },\n  banner: {\n    backgroundColor: \"#DD4141\",\n    width: \"100%\"\n  },\n  bannerText: {\n    fontSize: 60,\n    fontFamily: \"PlayMeGames\",\n    color: \"white\",\n    textAlign: \"center\",\n    paddingTop: 4\n  },\n  inputFields: {\n    marginTop: 50,\n    width: \"100%\",\n    backgroundColor: \"white\",\n    height: \"10%\"\n  },\n  inputFieldsContainer: {\n    marginTop: 50\n  },\n  submit: {\n    width: \"100%\",\n    height: \"35%\",\n    resizeMode: \"contain\",\n    top: 50\n  }\n});\nexport default AddTask;","map":{"version":3,"names":["React","useState","useContext","getFirestore","setDoc","doc","updateDoc","UserContext","useFonts","AddTask","title","setTitle","subTasks","setSubTasks","difficulty","setDifficulty","RetroGaming","require","InkyThinPixels","PlayMeGames","user","setUser","db","handleAdd","alert","subTasksArr","split","data","owner","unshift","activeQuest","coins","emotes","items","currentXp","diamonds","displayName","email","level","multiplier","questsDone","tasks","avatar","userRef","styles","bg","banner","bannerText","inputFieldsContainer","inputFields","submit","StyleSheet","create","width","height","backgroundColor","fontSize","fontFamily","color","textAlign","paddingTop","marginTop","resizeMode","top"],"sources":["/home/aadivyaraushan/Documents/GitHub/nocrastination/screens/AddTask.js"],"sourcesContent":["import {\n  View,\n  Text,\n  StyleSheet,\n  ImageBackground,\n  Image,\n  TextInput,\n  Pressable,\n} from \"react-native\";\nimport React, { useState, useContext } from \"react\";\nimport { getFirestore, setDoc, doc, updateDoc } from \"@firebase/firestore\";\nimport { UserContext } from \"../UserContext\";\nimport { useFonts } from \"expo-font\";\n\nconst AddTask = () => {\n  const [title, setTitle] = useState();\n  const [subTasks, setSubTasks] = useState();\n  const [difficulty, setDifficulty] = useState();\n  const [] = useFonts({\n    RetroGaming: require(\"../assets/fonts/RetroGaming-Regular.ttf\"),\n    InkyThinPixels: require(\"../assets/fonts/InkyThinPixels-Regular.ttf\"),\n    PlayMeGames: require(\"../assets/fonts/Playmegames-Regular.ttf\"),\n  });\n\n  const { user, setUser } = useContext(UserContext);\n  const db = getFirestore();\n\n  const handleAdd = async () => {\n    if (\n      !(\n        difficulty === \"easy\" ||\n        difficulty === \"medium\" ||\n        difficulty === \"hard\"\n      )\n    ) {\n      alert(\"Invalid difficulty entered!\");\n    }\n\n    const subTasksArr = subTasks.split(\",\");\n\n    const data = {\n      title: title,\n      subTasks: subTasksArr,\n      difficulty: difficulty,\n      owner: user[\"email\"],\n    };\n\n    await setDoc(doc(db, \"tasks\", title), data);\n    user[\"tasks\"].unshift(data[\"title\"]);\n    setUser({\n      activeQuest: user[\"activeQuest\"],\n      coins: user[\"coins\"],\n      emotes: user[\"emotes\"],\n      items: user[\"items\"],\n      currentXp: user[\"currentXp\"],\n      diamonds: user[\"diamonds\"],\n      displayName: user[\"displayName\"],\n      email: user[\"email\"],\n      level: user[\"level\"],\n      multiplier: user[\"multiplier\"],\n      questsDone: user[\"questsDone\"],\n      tasks: user[\"tasks\"],\n      avatar: user[\"avatar\"],\n    });\n\n    const userRef = doc(db, \"users\", user[\"email\"]);\n    await updateDoc(userRef, {\n      tasks: user[\"tasks\"],\n    });\n    alert(\"Task added!\");\n  };\n\n  return (\n    <View>\n      <ImageBackground\n        source={require(\"../assets/background.png\")}\n        style={styles.bg}\n      >\n        <View style={styles.banner}>\n          <Text style={styles.bannerText}>ADD TASK</Text>\n        </View>\n        <View style={styles.inputFieldsContainer}>\n          <TextInput\n            style={styles.inputFields}\n            onChangeText={setTitle}\n            value={title}\n            placeholder=\"Name the task.\"\n          />\n          <TextInput\n            style={styles.inputFields}\n            onChangeText={setSubTasks}\n            value={subTasks}\n            placeholder=\"Break the task into smaller sub-tasks(Each sub task should be separated by commas).\"\n          />\n          <TextInput\n            style={styles.inputFields}\n            onChangeText={setDifficulty}\n            value={difficulty}\n            placeholder=\"How difficult is the task(Only easy, medium and hard will be accepted)?\"\n          />\n          <Pressable onPress={handleAdd}>\n            <Image\n              source={require(\"./../assets/buttons/add.png\")}\n              style={styles.submit}\n            />\n          </Pressable>\n        </View>\n      </ImageBackground>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  bg: {\n    width: \"100%\",\n    height: \"100%\",\n  },\n  banner: {\n    backgroundColor: \"#DD4141\",\n    width: \"100%\",\n  },\n  bannerText: {\n    fontSize: 60,\n    fontFamily: \"PlayMeGames\",\n    color: \"white\",\n    textAlign: \"center\",\n    paddingTop: 4,\n  },\n  inputFields: {\n    marginTop: 50,\n    width: \"100%\",\n    backgroundColor: \"white\",\n    height: \"10%\",\n  },\n  inputFieldsContainer: {\n    marginTop: 50,\n  },\n  submit: {\n    width: \"100%\",\n    height: \"35%\",\n    resizeMode: \"contain\",\n    top: 50,\n  },\n});\n\nexport default AddTask;\n"],"mappings":";;;;;;;;;;AASA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,QAA4C,OAA5C;AACA,SAASC,YAAT,EAAuBC,MAAvB,EAA+BC,GAA/B,EAAoCC,SAApC,QAAqD,qBAArD;AACA,SAASC,WAAT;AACA,SAASC,QAAT,QAAyB,WAAzB;;;;AAEA,IAAMC,OAAO,GAAG,SAAVA,OAAU,GAAM;EACpB,gBAA0BR,QAAQ,EAAlC;EAAA;EAAA,IAAOS,KAAP;EAAA,IAAcC,QAAd;;EACA,iBAAgCV,QAAQ,EAAxC;EAAA;EAAA,IAAOW,QAAP;EAAA,IAAiBC,WAAjB;;EACA,iBAAoCZ,QAAQ,EAA5C;EAAA;EAAA,IAAOa,UAAP;EAAA,IAAmBC,aAAnB;;EACA,gBAAWP,QAAQ,CAAC;IAClBQ,WAAW,EAAEC,OAAO,2CADF;IAElBC,cAAc,EAAED,OAAO,8CAFL;IAGlBE,WAAW,EAAEF,OAAO;EAHF,CAAD,CAAnB;EAAA;;EAMA,kBAA0Bf,UAAU,CAACK,WAAD,CAApC;EAAA,IAAQa,IAAR,eAAQA,IAAR;EAAA,IAAcC,OAAd,eAAcA,OAAd;;EACA,IAAMC,EAAE,GAAGnB,YAAY,EAAvB;;EAEA,IAAMoB,SAAS,GAAG,SAAZA,SAAY;IAAA;IAAA;MAAA;QAAA;UAAA;YAChB,IACE,EACET,UAAU,KAAK,MAAf,IACAA,UAAU,KAAK,QADf,IAEAA,UAAU,KAAK,MAHjB,CADF,EAME;cACAU,KAAK,CAAC,6BAAD,CAAL;YACD;;YAEKC,WAXU,GAWIb,QAAQ,CAACc,KAAT,CAAe,GAAf,CAXJ;YAaVC,IAbU,GAaH;cACXjB,KAAK,EAAEA,KADI;cAEXE,QAAQ,EAAEa,WAFC;cAGXX,UAAU,EAAEA,UAHD;cAIXc,KAAK,EAAER,IAAI,CAAC,OAAD;YAJA,CAbG;YAAA;YAAA,iCAoBVhB,MAAM,CAACC,GAAG,CAACiB,EAAD,EAAK,OAAL,EAAcZ,KAAd,CAAJ,EAA0BiB,IAA1B,CApBI;;UAAA;YAqBhBP,IAAI,CAAC,OAAD,CAAJ,CAAcS,OAAd,CAAsBF,IAAI,CAAC,OAAD,CAA1B;YACAN,OAAO,CAAC;cACNS,WAAW,EAAEV,IAAI,CAAC,aAAD,CADX;cAENW,KAAK,EAAEX,IAAI,CAAC,OAAD,CAFL;cAGNY,MAAM,EAAEZ,IAAI,CAAC,QAAD,CAHN;cAINa,KAAK,EAAEb,IAAI,CAAC,OAAD,CAJL;cAKNc,SAAS,EAAEd,IAAI,CAAC,WAAD,CALT;cAMNe,QAAQ,EAAEf,IAAI,CAAC,UAAD,CANR;cAONgB,WAAW,EAAEhB,IAAI,CAAC,aAAD,CAPX;cAQNiB,KAAK,EAAEjB,IAAI,CAAC,OAAD,CARL;cASNkB,KAAK,EAAElB,IAAI,CAAC,OAAD,CATL;cAUNmB,UAAU,EAAEnB,IAAI,CAAC,YAAD,CAVV;cAWNoB,UAAU,EAAEpB,IAAI,CAAC,YAAD,CAXV;cAYNqB,KAAK,EAAErB,IAAI,CAAC,OAAD,CAZL;cAaNsB,MAAM,EAAEtB,IAAI,CAAC,QAAD;YAbN,CAAD,CAAP;YAgBMuB,OAtCU,GAsCAtC,GAAG,CAACiB,EAAD,EAAK,OAAL,EAAcF,IAAI,CAAC,OAAD,CAAlB,CAtCH;YAAA;YAAA,iCAuCVd,SAAS,CAACqC,OAAD,EAAU;cACvBF,KAAK,EAAErB,IAAI,CAAC,OAAD;YADY,CAAV,CAvCC;;UAAA;YA0ChBI,KAAK,CAAC,aAAD,CAAL;;UA1CgB;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,CAAlB;;EA6CA,OACE,KAAC,IAAD;IAAA,UACE,MAAC,eAAD;MACE,MAAM,EAAEP,OAAO,4BADjB;MAEE,KAAK,EAAE2B,MAAM,CAACC,EAFhB;MAAA,WAIE,KAAC,IAAD;QAAM,KAAK,EAAED,MAAM,CAACE,MAApB;QAAA,UACE,KAAC,IAAD;UAAM,KAAK,EAAEF,MAAM,CAACG,UAApB;UAAA;QAAA;MADF,EAJF,EAOE,MAAC,IAAD;QAAM,KAAK,EAAEH,MAAM,CAACI,oBAApB;QAAA,WACE,KAAC,SAAD;UACE,KAAK,EAAEJ,MAAM,CAACK,WADhB;UAEE,YAAY,EAAEtC,QAFhB;UAGE,KAAK,EAAED,KAHT;UAIE,WAAW,EAAC;QAJd,EADF,EAOE,KAAC,SAAD;UACE,KAAK,EAAEkC,MAAM,CAACK,WADhB;UAEE,YAAY,EAAEpC,WAFhB;UAGE,KAAK,EAAED,QAHT;UAIE,WAAW,EAAC;QAJd,EAPF,EAaE,KAAC,SAAD;UACE,KAAK,EAAEgC,MAAM,CAACK,WADhB;UAEE,YAAY,EAAElC,aAFhB;UAGE,KAAK,EAAED,UAHT;UAIE,WAAW,EAAC;QAJd,EAbF,EAmBE,KAAC,SAAD;UAAW,OAAO,EAAES,SAApB;UAAA,UACE,KAAC,KAAD;YACE,MAAM,EAAEN,OAAO,+BADjB;YAEE,KAAK,EAAE2B,MAAM,CAACM;UAFhB;QADF,EAnBF;MAAA,EAPF;IAAA;EADF,EADF;AAsCD,CAhGD;;AAkGA,IAAMN,MAAM,GAAGO,UAAU,CAACC,MAAX,CAAkB;EAC/BP,EAAE,EAAE;IACFQ,KAAK,EAAE,MADL;IAEFC,MAAM,EAAE;EAFN,CAD2B;EAK/BR,MAAM,EAAE;IACNS,eAAe,EAAE,SADX;IAENF,KAAK,EAAE;EAFD,CALuB;EAS/BN,UAAU,EAAE;IACVS,QAAQ,EAAE,EADA;IAEVC,UAAU,EAAE,aAFF;IAGVC,KAAK,EAAE,OAHG;IAIVC,SAAS,EAAE,QAJD;IAKVC,UAAU,EAAE;EALF,CATmB;EAgB/BX,WAAW,EAAE;IACXY,SAAS,EAAE,EADA;IAEXR,KAAK,EAAE,MAFI;IAGXE,eAAe,EAAE,OAHN;IAIXD,MAAM,EAAE;EAJG,CAhBkB;EAsB/BN,oBAAoB,EAAE;IACpBa,SAAS,EAAE;EADS,CAtBS;EAyB/BX,MAAM,EAAE;IACNG,KAAK,EAAE,MADD;IAENC,MAAM,EAAE,KAFF;IAGNQ,UAAU,EAAE,SAHN;IAINC,GAAG,EAAE;EAJC;AAzBuB,CAAlB,CAAf;AAiCA,eAAetD,OAAf"},"metadata":{},"sourceType":"module"}