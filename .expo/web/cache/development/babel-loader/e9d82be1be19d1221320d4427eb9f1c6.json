{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\nimport AuthenticationScreen from \"./screens/AuthenticationScreen.js\";\nimport LoginScreen from \"./screens/Login.js\";\nimport SignupScreen from \"./screens/Signup.js\";\nimport Homepage from \"./screens/Homepage.js\";\nimport Quests from \"./screens/Quests.js\";\nimport Settings from \"./screens/Settings\";\nimport Shop from \"./screens/Shop\";\nimport Organisations from \"./screens/Organisations\";\nimport { UserContext } from \"./UserContext.js\";\nimport { QuestContext } from \"./QuestContext.js\";\nimport { OrganisationContext } from \"./OrganisationContext.js\";\nimport { useMemo, useState } from \"react\";\nimport { GameContext } from \"./GameContext.js\";\nimport AddTask from \"./screens/AddTask.js\";\nimport QuestPage from \"./screens/QuestPage.js\";\nimport QuestActive from \"./screens/QuestActive.js\";\nimport Organisation from \"./screens/Organisation\";\nimport BattleSelect from \"./screens/BattleSelect.js\";\nimport PickATask from \"./screens/TaskSelect.js\";\nimport MultiplayerBattle from \"./screens/MultiplayerBattle.js\";\nimport MatchmakingSelect from \"./screens/MatchmakingSelect.js\";\nimport TaskSelect from \"./screens/TaskSelect.js\";\nimport AddGame from \"./screens/AddGame.js\";\nimport LogBox from \"react-native-web/dist/exports/LogBox\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Stack = createNativeStackNavigator();\nexport default function App() {\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      user = _useState2[0],\n      setUser = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      quest = _useState4[0],\n      setQuest = _useState4[1];\n\n  var _useState5 = useState(null),\n      _useState6 = _slicedToArray(_useState5, 2),\n      organisation = _useState6[0],\n      setOrganisation = _useState6[1];\n\n  var _useState7 = useState(null),\n      _useState8 = _slicedToArray(_useState7, 2),\n      game = _useState8[0],\n      setGame = _useState8[1];\n\n  var providerValue = useMemo(function () {\n    return {\n      user: user,\n      setUser: setUser\n    };\n  }, [user, setUser]);\n  var questProviderValue = useMemo(function () {\n    return {\n      quest: quest,\n      setQuest: setQuest\n    };\n  }, [quest, setQuest]);\n  var gameProviderValue = useMemo(function () {\n    return {\n      game: game,\n      setGame: setGame\n    };\n  }, [game, setGame]);\n  var organisationProviderValue = useMemo(function () {\n    return {\n      organisation: organisation,\n      setOrganisation: setOrganisation\n    };\n  }, [organisation, setOrganisation]);\n  var rewardData = {\n    easy: {\n      coins: 5,\n      xp: 10\n    },\n    medium: {\n      coins: 10,\n      xp: 20\n    },\n    hard: {\n      coins: 20,\n      xp: 40\n    }\n  };\n  return _jsx(UserContext.Provider, {\n    value: providerValue,\n    children: _jsx(QuestContext.Provider, {\n      value: questProviderValue,\n      children: _jsx(OrganisationContext.Provider, {\n        value: organisationProviderValue,\n        children: _jsx(GameContext.Provider, {\n          value: gameProviderValue,\n          children: _jsx(NavigationContainer, {\n            children: _jsxs(Stack.Navigator, {\n              screenOptions: {\n                headerShown: false\n              },\n              children: [_jsx(Stack.Screen, {\n                name: \"auth\",\n                component: AuthenticationScreen\n              }), _jsx(Stack.Screen, {\n                name: \"login\",\n                component: LoginScreen\n              }), _jsx(Stack.Screen, {\n                name: \"signup\",\n                component: SignupScreen\n              }), _jsx(Stack.Screen, {\n                name: \"homepage\",\n                component: Homepage\n              }), _jsx(Stack.Screen, {\n                name: \"addtask\",\n                component: AddTask\n              }), _jsx(Stack.Screen, {\n                name: \"quests\",\n                component: Quests\n              }), _jsx(Stack.Screen, {\n                name: \"questPage\",\n                component: QuestPage,\n                initialParams: rewardData\n              }), _jsx(Stack.Screen, {\n                name: \"activeQuestPage\",\n                component: QuestActive,\n                initialParams: rewardData\n              }), _jsx(Stack.Screen, {\n                name: \"settings\",\n                component: Settings\n              }), _jsx(Stack.Screen, {\n                name: \"shop\",\n                component: Shop\n              }), _jsx(Stack.Screen, {\n                name: \"organisations\",\n                component: Organisations\n              }), _jsx(Stack.Screen, {\n                name: \"organisation\",\n                component: Organisation\n              }), _jsx(Stack.Screen, {\n                name: \"battleselect\",\n                component: BattleSelect\n              }), _jsx(Stack.Screen, {\n                name: \"pickatask\",\n                component: PickATask\n              }), _jsx(Stack.Screen, {\n                name: \"multiplayerBattle\",\n                component: MultiplayerBattle,\n                initialParams: rewardData\n              }), _jsx(Stack.Screen, {\n                name: \"matchmakingSelect\",\n                component: MatchmakingSelect\n              }), _jsx(Stack.Screen, {\n                name: \"taskSelect\",\n                component: TaskSelect\n              }), _jsx(Stack.Screen, {\n                name: \"addGame\",\n                component: AddGame\n              })]\n            })\n          })\n        })\n      })\n    })\n  });\n  LogBox.ignoreLogs([\"Warning: Async Storage has been extracted from react-native core\"]);\n}\nvar styles = StyleSheet.create({});","map":{"version":3,"names":["NavigationContainer","createNativeStackNavigator","AuthenticationScreen","LoginScreen","SignupScreen","Homepage","Quests","Settings","Shop","Organisations","UserContext","QuestContext","OrganisationContext","useMemo","useState","GameContext","AddTask","QuestPage","QuestActive","Organisation","BattleSelect","PickATask","MultiplayerBattle","MatchmakingSelect","TaskSelect","AddGame","Stack","App","user","setUser","quest","setQuest","organisation","setOrganisation","game","setGame","providerValue","questProviderValue","gameProviderValue","organisationProviderValue","rewardData","easy","coins","xp","medium","hard","headerShown","LogBox","ignoreLogs","styles","StyleSheet","create"],"sources":["/home/aadivyaraushan/Documents/GitHub/nocrastination/App.js"],"sourcesContent":["import { StyleSheet } from \"react-native\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\nimport AuthenticationScreen from \"./screens/AuthenticationScreen.js\";\nimport LoginScreen from \"./screens/Login.js\";\nimport SignupScreen from \"./screens/Signup.js\";\nimport Homepage from \"./screens/Homepage.js\";\nimport Quests from \"./screens/Quests.js\";\nimport Settings from \"./screens/Settings\";\nimport Shop from \"./screens/Shop\";\nimport Organisations from \"./screens/Organisations\";\nimport { UserContext } from \"./UserContext.js\";\nimport { QuestContext } from \"./QuestContext.js\";\nimport { OrganisationContext } from \"./OrganisationContext.js\";\nimport { useMemo, useState } from \"react\";\nimport { GameContext } from \"./GameContext.js\";\nimport AddTask from \"./screens/AddTask.js\";\nimport QuestPage from \"./screens/QuestPage.js\";\nimport QuestActive from \"./screens/QuestActive.js\";\nimport Organisation from \"./screens/Organisation\";\nimport BattleSelect from \"./screens/BattleSelect.js\";\nimport PickATask from \"./screens/TaskSelect.js\";\nimport MultiplayerBattle from \"./screens/MultiplayerBattle.js\";\nimport MatchmakingSelect from \"./screens/MatchmakingSelect.js\";\nimport TaskSelect from \"./screens/TaskSelect.js\";\nimport AddGame from \"./screens/AddGame.js\";\nimport { LogBox } from \"react-native\";\n\nconst Stack = createNativeStackNavigator();\n\nexport default function App() {\n  const [user, setUser] = useState(null);\n  const [quest, setQuest] = useState(null);\n  const [organisation, setOrganisation] = useState(null);\n  const [game, setGame] = useState(null);\n\n  const providerValue = useMemo(() => ({ user, setUser }), [user, setUser]);\n  const questProviderValue = useMemo(\n    () => ({ quest, setQuest }),\n    [quest, setQuest]\n  );\n  const gameProviderValue = useMemo(() => ({ game, setGame }), [game, setGame]);\n  const organisationProviderValue = useMemo(\n    () => ({ organisation, setOrganisation }),\n    [organisation, setOrganisation]\n  );\n\n  const rewardData = {\n    easy: {\n      coins: 5,\n      xp: 10,\n    },\n    medium: {\n      coins: 10,\n      xp: 20,\n    },\n    hard: {\n      coins: 20,\n      xp: 40,\n    },\n  };\n\n  return (\n    <UserContext.Provider value={providerValue}>\n      <QuestContext.Provider value={questProviderValue}>\n        <OrganisationContext.Provider value={organisationProviderValue}>\n          <GameContext.Provider value={gameProviderValue}>\n            <NavigationContainer>\n              <Stack.Navigator screenOptions={{ headerShown: false }}>\n                <Stack.Screen name=\"auth\" component={AuthenticationScreen} />\n                <Stack.Screen name=\"login\" component={LoginScreen} />\n                <Stack.Screen name=\"signup\" component={SignupScreen} />\n                <Stack.Screen name=\"homepage\" component={Homepage} />\n                <Stack.Screen name=\"addtask\" component={AddTask} />\n                <Stack.Screen name=\"quests\" component={Quests} />\n                <Stack.Screen\n                  name=\"questPage\"\n                  component={QuestPage}\n                  initialParams={rewardData}\n                />\n                <Stack.Screen\n                  name=\"activeQuestPage\"\n                  component={QuestActive}\n                  initialParams={rewardData}\n                />\n                <Stack.Screen name=\"settings\" component={Settings} />\n                <Stack.Screen name=\"shop\" component={Shop} />\n                <Stack.Screen name=\"organisations\" component={Organisations} />\n                <Stack.Screen name=\"organisation\" component={Organisation} />\n                <Stack.Screen name=\"battleselect\" component={BattleSelect} />\n                <Stack.Screen name=\"pickatask\" component={PickATask} />\n                <Stack.Screen\n                  name=\"multiplayerBattle\"\n                  component={MultiplayerBattle}\n                  initialParams={rewardData}\n                />\n                <Stack.Screen\n                  name=\"matchmakingSelect\"\n                  component={MatchmakingSelect}\n                />\n                <Stack.Screen name=\"taskSelect\" component={TaskSelect} />\n                <Stack.Screen name=\"addGame\" component={AddGame} />\n              </Stack.Navigator>\n            </NavigationContainer>\n          </GameContext.Provider>\n        </OrganisationContext.Provider>\n      </QuestContext.Provider>\n    </UserContext.Provider>\n  );\n\n  LogBox.ignoreLogs([\n    \"Warning: Async Storage has been extracted from react-native core\",\n  ]);\n}\n\nconst styles = StyleSheet.create({});\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}