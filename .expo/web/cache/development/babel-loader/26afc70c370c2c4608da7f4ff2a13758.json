{"ast":null,"code":"import _toArray from \"@babel/runtime/helpers/toArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport { useState } from \"react\";\nimport Topbar from \"../components/Topbar.js\";\nimport BottomBar from \"../components/BottomBar.js\";\nimport { useFonts } from \"expo-font\";\nimport { collection, getDocs, getFirestore, query, where } from \"firebase/firestore\";\nimport { useContext, useEffect } from \"react/cjs/react.development\";\nimport { UserContext } from \"../UserContext.js\";\nimport { db } from \"../firebase\";\nimport { doc, getDoc, updateDoc } from \"@firebase/firestore\";\nimport { Audio } from \"expo-av\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar Shop = function Shop() {\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      sound = _useState2[0],\n      setSound = _useState2[1];\n\n  var _useFonts = useFonts({\n    RetroGaming: require(\"../assets/fonts/RetroGaming-Regular.ttf\"),\n    InkyThinPixels: require(\"../assets/fonts/InkyThinPixels-Regular.ttf\"),\n    PlayMeGames: require(\"../assets/fonts/Playmegames-Regular.ttf\")\n  }),\n      _useFonts2 = _toArray(_useFonts);\n\n  var _useContext = useContext(UserContext),\n      user = _useContext.user,\n      setUser = _useContext.setUser;\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      itemsJSX = _useState4[0],\n      setItemsJSX = _useState4[1];\n\n  var _useState5 = useState(),\n      _useState6 = _slicedToArray(_useState5, 2),\n      emotesJSX = _useState6[0],\n      setEmotesJSX = _useState6[1];\n\n  var items = [];\n  var q = query(collection(db, \"shop\"), where(\"levelRequirement\", \"<=\", user[\"level\"]));\n  var emotes = [];\n  var q2 = query(collection(db, \"emotes\"), where(\"levelRequirement\", \"<=\", user[\"level\"]));\n\n  function playPurchaseSound() {\n    var _await$Audio$Sound$cr, sound;\n\n    return _regeneratorRuntime.async(function playPurchaseSound$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(Audio.Sound.createAsync(require(\"../assets/sfx/itemPurchase.mp3\")));\n\n          case 2:\n            _await$Audio$Sound$cr = _context.sent;\n            sound = _await$Audio$Sound$cr.sound;\n            setSound(sound);\n            _context.next = 7;\n            return _regeneratorRuntime.awrap(sound.playAsync());\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  function playPurchaseFailed() {\n    var _await$Audio$Sound$cr2, sound;\n\n    return _regeneratorRuntime.async(function playPurchaseFailed$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(Audio.Sound.createAsync(require(\"../assets/sfx/purchaseFailed.mp3\")));\n\n          case 2:\n            _await$Audio$Sound$cr2 = _context2.sent;\n            sound = _await$Audio$Sound$cr2.sound;\n            setSound(sound);\n            _context2.next = 7;\n            return _regeneratorRuntime.awrap(sound.playAsync());\n\n          case 7:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  useEffect(function () {\n    getDocs(q).then(function (querySnapshot) {\n      return querySnapshot.forEach(function (doc) {\n        items.push(doc);\n      });\n    }).then(function () {\n      var level = user[\"level\"];\n      setItemsJSX(_jsx(ScrollView, {\n        style: {\n          display: \"flex\",\n          flexDirection: \"row\",\n          flexWrap: \"wrap\",\n          bottom: 90\n        },\n        horizontal: true,\n        children: items.map(function (itemFromArr, index) {\n          var requirement = itemFromArr.data()[\"levelRequirement\"];\n\n          if (requirement > level) {\n            return _jsx(ImageBackground, {\n              style: styles.itemBackground,\n              source: require(\"../assets/lockedBG.png\"),\n              children: _jsxs(Text, {\n                style: styles.itemText,\n                children: [\"Unlocked at level \", requirement, \"!\"]\n              })\n            }, index);\n          } else {\n            var image;\n\n            switch (itemFromArr.data()[\"name\"]) {\n              case \"Laser Eyes\":\n                image = require(\"../assets/laserEyes.png\");\n                break;\n\n              case \"pyrokinesis\":\n                image = require(\"../assets/pyrokinesis.png\");\n                break;\n\n              case \"regeneration\":\n                image = require(\"../assets/regeneration.png\");\n                break;\n\n              case \"shield\":\n                image = require(\"../assets/shield.png\");\n                break;\n\n              case \"sword\":\n                image = require(\"../assets/sword.png\");\n                break;\n\n              case \"telekinesis\":\n                image = require(\"../assets/shopIcon.png\");\n                break;\n            }\n\n            var multiplayerBoost;\n\n            if (itemFromArr.data()[\"type\"] === \"offensive\") {\n              multiplayerBoost = _jsxs(Text, {\n                style: styles.itemFooter,\n                children: [\"+\", itemFromArr.data()[\"damageBoost\"], \" damage\"]\n              });\n            } else if (itemFromArr.data()[\"healthBoost\"] != \"regeneration\") {\n              multiplayerBoost = _jsxs(Text, {\n                style: styles.itemFooter,\n                children: [\"+\", itemFromArr.data()[\"healthBoost\"], \" health\"]\n              });\n            } else {\n              multiplayerBoost = _jsx(Text, {\n                style: styles.itemFooter,\n                children: \"Increasing health\"\n              });\n            }\n\n            return _jsx(ImageBackground, {\n              style: styles.itemBackground,\n              source: require(\"../assets/shopPanel.png\"),\n              children: _jsxs(Pressable, {\n                onPress: function onPress() {\n                  var items = user[\"items\"];\n                  var purchasedBy;\n                  getDoc(doc(db, \"shop\", itemFromArr.id)).then(function (docSnap) {\n                    if (docSnap.exists()) {\n                      console.log(\"Document snapshot exists!\");\n                      purchasedBy = docSnap.get(\"purchasedBy\");\n                    } else {\n                      console.log(\"Document snapshot doesn't exist\");\n                    }\n                  }).then(function () {\n                    console.log(purchasedBy);\n\n                    if (purchasedBy.indexOf(user[\"email\"]) != -1) {\n                      playPurchaseFailed();\n                      alert(\"You already have this item!\");\n                      return;\n                    } else if (user[\"coins\"] >= itemFromArr.data()[\"priceCoins\"] && purchasedBy.indexOf(user[\"email\"]) == -1) {\n                      items.push(itemFromArr.id);\n                      user[\"coins\"] = user[\"coins\"] - itemFromArr.data()[\"priceCoins\"];\n                      console.log(user[\"coins\"]);\n                      console.log(items);\n                      setUser({\n                        activeQuest: user[\"activeQuest\"],\n                        coins: user[\"coins\"],\n                        currentXp: user[\"currentXp\"],\n                        diamonds: user[\"diamonds\"],\n                        displayName: user[\"displayName\"],\n                        email: user[\"email\"],\n                        level: user[\"level\"],\n                        multiplier: user[\"multiplier\"],\n                        questsDone: user[\"questsDone\"],\n                        tasks: user[\"tasks\"],\n                        items: items,\n                        emotes: user[\"emotes\"],\n                        avatar: user[\"avatar\"]\n                      });\n                      purchasedBy.push(user[\"email\"]);\n                      updateDoc(doc(db, \"users\", user[\"email\"]), {\n                        coins: user[\"coins\"] - itemFromArr.data()[\"priceCoins\"],\n                        items: items\n                      }).then(function () {\n                        updateDoc(doc(db, \"shop\", itemFromArr.id), {\n                          purchasedBy: purchasedBy\n                        });\n                      }).then(function () {\n                        console.log(\"Updated documents\");\n                      });\n                      playPurchaseSound();\n                      alert(\"Item purchased!\");\n                    } else {\n                      playPurchaseFailed();\n                      alert(\"Insufficient funds!\");\n                    }\n                  });\n                },\n                android_disableSound: true,\n                children: [_jsx(Text, {\n                  style: styles.itemText,\n                  children: itemFromArr.data()[\"name\"]\n                }), _jsx(Image, {\n                  style: styles.itemImage,\n                  source: image\n                }), _jsx(Image, {\n                  style: styles.coinIcon,\n                  source: require(\"../assets/coin.png\")\n                }), _jsx(Text, {\n                  style: styles.itemFooter,\n                  children: itemFromArr.data()[\"priceCoins\"]\n                }), _jsxs(Text, {\n                  style: styles.itemFooter,\n                  children: [itemFromArr.data()[\"multiplierXP\"], \"x XP,\", \" \", itemFromArr.data()[\"multiplierCoins\"], \"x coins\"]\n                }), multiplayerBoost]\n              })\n            }, index);\n          }\n        })\n      }));\n    });\n    getDocs(q2).then(function (querySnapshot) {\n      return querySnapshot.forEach(function (doc) {\n        emotes.push(doc);\n      });\n    }).then(function () {\n      var level = user[\"level\"];\n      setEmotesJSX(_jsx(ScrollView, {\n        style: styles.itemsContainer,\n        horizontal: true,\n        children: emotes.map(function (emoteFromArr, index) {\n          var requirement = emoteFromArr.data()[\"levelRequirement\"];\n\n          if (requirement > level) {\n            return _jsx(ImageBackground, {\n              style: styles.itemBackground,\n              source: require(\"../assets/lockedBG.png\"),\n              children: _jsxs(Text, {\n                style: styles.itemText,\n                children: [\"Unlocked at level \", requirement, \"!\"]\n              })\n            }, index);\n          } else {\n            var image;\n\n            switch (emoteFromArr.data()[\"name\"]) {\n              case \"smile\":\n                image = require(\"../assets/smile.png\");\n                break;\n\n              case \"embarrased\":\n                image = require(\"../assets/embarrased.png\");\n                break;\n\n              case \"ROFL\":\n                image = require(\"../assets/rofl.png\");\n                break;\n\n              case \"surprise\":\n                image = require(\"../assets/surprise.png\");\n                break;\n            }\n\n            return _jsx(ImageBackground, {\n              style: styles.itemBackground,\n              source: require(\"../assets/shopPanel.png\"),\n              children: _jsxs(Pressable, {\n                onPress: function onPress() {\n                  var emotes = user[\"emotes\"];\n                  var purchasedBy;\n                  getDoc(doc(db, \"emotes\", emoteFromArr.id)).then(function (docSnap) {\n                    if (docSnap.exists()) {\n                      console.log(\"Document snapshot exists!\");\n                      purchasedBy = docSnap.get(\"purchasedBy\");\n                    } else {\n                      console.log(\"Document snapshot doesn't exist\");\n                    }\n                  }).then(function () {\n                    if (purchasedBy.indexOf(user[\"email\"]) != -1) {\n                      playPurchaseFailed();\n                      alert(\"You already have this emote!\");\n                      return;\n                    } else if (user[\"diamonds\"] >= emoteFromArr.data()[\"priceDiamonds\"] && purchasedBy.indexOf(user[\"email\"]) == -1) {\n                      emotes.push(emoteFromArr.id);\n                      user[\"diamonds\"] = user[\"diamonds\"] - emoteFromArr.data()[\"priceDiamonds\"];\n                      setUser({\n                        activeQuest: user[\"activeQuest\"],\n                        coins: user[\"coins\"],\n                        currentXp: user[\"currentXp\"],\n                        diamonds: user[\"diamonds\"],\n                        displayName: user[\"displayName\"],\n                        email: user[\"email\"],\n                        level: user[\"level\"],\n                        multiplier: user[\"multiplier\"],\n                        questsDone: user[\"questsDone\"],\n                        tasks: user[\"tasks\"],\n                        items: user[\"items\"],\n                        emotes: emotes,\n                        avatar: user[\"avatar\"]\n                      });\n                      purchasedBy.push(user[\"email\"]);\n                      updateDoc(doc(db, \"users\", user[\"email\"]), {\n                        diamonds: user[\"diamonds\"],\n                        emotes: emotes\n                      }).then(function () {\n                        updateDoc(doc(db, \"emotes\", emoteFromArr.id), {\n                          purchasedBy: purchasedBy\n                        });\n                      });\n                      playPurchaseSound();\n                      alert(\"Emote purchased!\");\n                    } else {\n                      playPurchaseFailed();\n                      alert(\"Insufficient funds!\");\n                    }\n                  });\n                },\n                children: [_jsx(Text, {\n                  style: styles.itemText,\n                  children: emoteFromArr.data()[\"name\"]\n                }), _jsx(Image, {\n                  style: styles.itemImage,\n                  source: image\n                }), _jsx(Text, {\n                  style: styles.itemFooter,\n                  children: emoteFromArr.data()[\"priceDiamonds\"]\n                }), _jsx(Image, {\n                  style: styles.rubyIcon,\n                  source: require(\"../assets/ruby.png\")\n                })]\n              })\n            }, index);\n          }\n        })\n      }));\n    });\n  }, [].concat(items));\n  return _jsx(View, {\n    style: {\n      flexDirection: \"row\",\n      flexWrap: \"wrap\",\n      flex: 1\n    },\n    children: _jsxs(ImageBackground, {\n      source: require(\"../assets/background.png\"),\n      style: styles.bg,\n      children: [_jsx(Topbar, {}), _jsx(View, {\n        style: styles.banner,\n        children: _jsx(Text, {\n          style: styles.bannerText,\n          children: \"EMOTES\"\n        })\n      }), emotesJSX, _jsx(View, {\n        style: styles.itemsBanner,\n        children: _jsx(Text, {\n          style: styles.bannerText,\n          children: \"WEAPONS/ABILITIES\"\n        })\n      }), itemsJSX, _jsx(BottomBar, {})]\n    })\n  });\n};\n\nexport default Shop;\nvar styles = StyleSheet.create({\n  bg: {\n    width: \"100%\",\n    height: \"100%\",\n    resizeMode: \"contain\"\n  },\n  banner: {\n    marginTop: 50,\n    backgroundColor: \"#DD4141\",\n    width: \"100%\"\n  },\n  bannerText: {\n    fontSize: 50,\n    fontFamily: \"PlayMeGames\",\n    color: \"white\",\n    textAlign: \"center\",\n    paddingTop: 4\n  },\n  itemBackground: {\n    width: 150,\n    height: 220,\n    resizeMode: \"contain\",\n    marginRight: 10,\n    marginBottom: 10\n  },\n  itemsContainer: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    flexWrap: \"wrap\"\n  },\n  itemText: {\n    fontSize: 25,\n    fontFamily: \"PlayMeGames\",\n    color: \"white\",\n    textAlign: \"center\"\n  },\n  itemImage: {\n    height: \"40%\",\n    width: \"auto\",\n    resizeMode: \"contain\"\n  },\n  itemFooter: {\n    fontSize: 20,\n    fontFamily: \"PlayMeGames\",\n    color: \"white\",\n    textAlign: \"center\"\n  },\n  coinIcon: {\n    resizeMode: \"contain\",\n    width: \"auto\",\n    height: 15,\n    position: \"relative\",\n    right: 20,\n    top: 16\n  },\n  rubyIcon: {\n    resizeMode: \"contain\",\n    width: \"auto\",\n    height: 15,\n    position: \"relative\",\n    right: 25,\n    bottom: 16\n  },\n  itemsBanner: {\n    backgroundColor: \"#DD4141\",\n    width: \"100%\",\n    bottom: 90\n  }\n});","map":{"version":3,"names":["useState","Topbar","BottomBar","useFonts","collection","getDocs","getFirestore","query","where","useContext","useEffect","UserContext","db","doc","getDoc","updateDoc","Audio","Shop","sound","setSound","RetroGaming","require","InkyThinPixels","PlayMeGames","user","setUser","itemsJSX","setItemsJSX","emotesJSX","setEmotesJSX","items","q","emotes","q2","playPurchaseSound","Sound","createAsync","playAsync","playPurchaseFailed","then","querySnapshot","forEach","push","level","display","flexDirection","flexWrap","bottom","map","itemFromArr","index","requirement","data","styles","itemBackground","itemText","image","multiplayerBoost","itemFooter","purchasedBy","id","docSnap","exists","console","log","get","indexOf","alert","activeQuest","coins","currentXp","diamonds","displayName","email","multiplier","questsDone","tasks","avatar","itemImage","coinIcon","itemsContainer","emoteFromArr","rubyIcon","flex","bg","banner","bannerText","itemsBanner","StyleSheet","create","width","height","resizeMode","marginTop","backgroundColor","fontSize","fontFamily","color","textAlign","paddingTop","marginRight","marginBottom","position","right","top"],"sources":["/home/aadivyaraushan/Documents/GitHub/nocrastination/screens/Shop.js"],"sourcesContent":["import {\n  StyleSheet,\n  Text,\n  View,\n  Image,\n  ImageBackground,\n  ScrollView,\n  Pressable,\n} from \"react-native\";\nimport { useState } from \"react\";\nimport Topbar from \"../components/Topbar.js\";\nimport BottomBar from \"../components/BottomBar.js\";\nimport { useFonts } from \"expo-font\";\nimport {\n  collection,\n  getDocs,\n  getFirestore,\n  query,\n  where,\n} from \"firebase/firestore\";\nimport { useContext, useEffect } from \"react/cjs/react.development\";\nimport { UserContext } from \"../UserContext.js\";\nimport { db } from \"../firebase\";\nimport { doc, getDoc, updateDoc } from \"@firebase/firestore\";\nimport { Audio } from \"expo-av\";\n\nconst Shop = () => {\n  const [sound, setSound] = useState();\n  const [] = useFonts({\n    RetroGaming: require(\"../assets/fonts/RetroGaming-Regular.ttf\"),\n    InkyThinPixels: require(\"../assets/fonts/InkyThinPixels-Regular.ttf\"),\n    PlayMeGames: require(\"../assets/fonts/Playmegames-Regular.ttf\"),\n  });\n  const { user, setUser } = useContext(UserContext);\n  const [itemsJSX, setItemsJSX] = useState();\n  const [emotesJSX, setEmotesJSX] = useState();\n  const items = [];\n  const q = query(\n    collection(db, \"shop\"),\n    where(\"levelRequirement\", \"<=\", user[\"level\"])\n  );\n  const emotes = [];\n  const q2 = query(\n    collection(db, \"emotes\"),\n    where(\"levelRequirement\", \"<=\", user[\"level\"])\n  );\n\n  async function playPurchaseSound() {\n    const { sound } = await Audio.Sound.createAsync(\n      require(\"../assets/sfx/itemPurchase.mp3\")\n    );\n    setSound(sound);\n    await sound.playAsync();\n  }\n\n  async function playPurchaseFailed() {\n    const { sound } = await Audio.Sound.createAsync(\n      require(\"../assets/sfx/purchaseFailed.mp3\")\n    );\n    setSound(sound);\n\n    await sound.playAsync();\n  }\n\n  useEffect(() => {\n    getDocs(q)\n      .then((querySnapshot) =>\n        querySnapshot.forEach((doc) => {\n          items.push(doc);\n        })\n      )\n      .then(() => {\n        const level = user[\"level\"];\n        setItemsJSX(\n          <ScrollView\n            style={{\n              display: \"flex\",\n              flexDirection: \"row\",\n              flexWrap: \"wrap\",\n              bottom: 90,\n            }}\n            horizontal={true}\n          >\n            {items.map((itemFromArr, index) => {\n              const requirement = itemFromArr.data()[\"levelRequirement\"];\n              if (requirement > level) {\n                return (\n                  <ImageBackground\n                    style={styles.itemBackground}\n                    source={require(\"../assets/lockedBG.png\")}\n                    key={index}\n                  >\n                    <Text style={styles.itemText}>\n                      Unlocked at level {requirement}!\n                    </Text>\n                  </ImageBackground>\n                );\n              } else {\n                let image;\n                switch (itemFromArr.data()[\"name\"]) {\n                  case \"Laser Eyes\":\n                    image = require(\"../assets/laserEyes.png\");\n                    break;\n                  case \"pyrokinesis\":\n                    image = require(\"../assets/pyrokinesis.png\");\n                    break;\n                  case \"regeneration\":\n                    image = require(\"../assets/regeneration.png\");\n                    break;\n                  case \"shield\":\n                    image = require(\"../assets/shield.png\");\n                    break;\n                  case \"sword\":\n                    image = require(\"../assets/sword.png\");\n                    break;\n                  case \"telekinesis\":\n                    image = require(\"../assets/shopIcon.png\");\n                    break;\n                }\n\n                let multiplayerBoost;\n                if (itemFromArr.data()[\"type\"] === \"offensive\") {\n                  multiplayerBoost = (\n                    <Text style={styles.itemFooter}>\n                      +{itemFromArr.data()[\"damageBoost\"]} damage\n                    </Text>\n                  );\n                } else if (\n                  itemFromArr.data()[\"healthBoost\"] != \"regeneration\"\n                ) {\n                  multiplayerBoost = (\n                    <Text style={styles.itemFooter}>\n                      +{itemFromArr.data()[\"healthBoost\"]} health\n                    </Text>\n                  );\n                } else {\n                  multiplayerBoost = (\n                    <Text style={styles.itemFooter}>Increasing health</Text>\n                  );\n                }\n\n                return (\n                  <ImageBackground\n                    style={styles.itemBackground}\n                    source={require(\"../assets/shopPanel.png\")}\n                    key={index}\n                  >\n                    <Pressable\n                      onPress={() => {\n                        const items = user[\"items\"];\n                        let purchasedBy;\n                        getDoc(doc(db, \"shop\", itemFromArr.id))\n                          .then((docSnap) => {\n                            if (docSnap.exists()) {\n                              console.log(\"Document snapshot exists!\");\n                              purchasedBy = docSnap.get(\"purchasedBy\");\n                            } else {\n                              console.log(\"Document snapshot doesn't exist\");\n                            }\n                          })\n                          .then(() => {\n                            console.log(purchasedBy);\n                            if (purchasedBy.indexOf(user[\"email\"]) != -1) {\n                              playPurchaseFailed();\n                              alert(\"You already have this item!\");\n                              return;\n                            } else if (\n                              user[\"coins\"] >=\n                                itemFromArr.data()[\"priceCoins\"] &&\n                              purchasedBy.indexOf(user[\"email\"]) == -1\n                            ) {\n                              items.push(itemFromArr.id);\n                              user[\"coins\"] =\n                                user[\"coins\"] -\n                                itemFromArr.data()[\"priceCoins\"];\n                              console.log(user[\"coins\"]);\n                              console.log(items);\n                              setUser({\n                                activeQuest: user[\"activeQuest\"],\n                                coins: user[\"coins\"],\n                                currentXp: user[\"currentXp\"],\n                                diamonds: user[\"diamonds\"],\n                                displayName: user[\"displayName\"],\n                                email: user[\"email\"],\n                                level: user[\"level\"],\n                                multiplier: user[\"multiplier\"],\n                                questsDone: user[\"questsDone\"],\n                                tasks: user[\"tasks\"],\n                                items: items,\n                                emotes: user[\"emotes\"],\n                                avatar: user[\"avatar\"],\n                              });\n                              purchasedBy.push(user[\"email\"]);\n\n                              updateDoc(doc(db, \"users\", user[\"email\"]), {\n                                coins:\n                                  user[\"coins\"] -\n                                  itemFromArr.data()[\"priceCoins\"],\n                                items: items,\n                              })\n                                .then(() => {\n                                  updateDoc(doc(db, \"shop\", itemFromArr.id), {\n                                    purchasedBy: purchasedBy,\n                                  });\n                                })\n                                .then(() => {\n                                  console.log(\"Updated documents\");\n                                });\n\n                              playPurchaseSound();\n                              alert(\"Item purchased!\");\n                            } else {\n                              playPurchaseFailed();\n                              alert(\"Insufficient funds!\");\n                            }\n                          });\n                      }}\n                      android_disableSound={true}\n                    >\n                      <Text style={styles.itemText}>\n                        {itemFromArr.data()[\"name\"]}\n                      </Text>\n                      <Image style={styles.itemImage} source={image}></Image>\n                      <Image\n                        style={styles.coinIcon}\n                        source={require(\"../assets/coin.png\")}\n                      />\n                      <Text style={styles.itemFooter}>\n                        {itemFromArr.data()[\"priceCoins\"]}\n                      </Text>\n                      <Text style={styles.itemFooter}>\n                        {itemFromArr.data()[\"multiplierXP\"]}x XP,{\" \"}\n                        {itemFromArr.data()[\"multiplierCoins\"]}x coins\n                      </Text>\n                      {multiplayerBoost}\n                    </Pressable>\n                  </ImageBackground>\n                );\n              }\n            })}\n          </ScrollView>\n        );\n      });\n\n    getDocs(q2)\n      .then((querySnapshot) =>\n        querySnapshot.forEach((doc) => {\n          emotes.push(doc);\n        })\n      )\n      .then(() => {\n        const level = user[\"level\"];\n        setEmotesJSX(\n          <ScrollView style={styles.itemsContainer} horizontal={true}>\n            {emotes.map((emoteFromArr, index) => {\n              const requirement = emoteFromArr.data()[\"levelRequirement\"];\n              if (requirement > level) {\n                return (\n                  <ImageBackground\n                    style={styles.itemBackground}\n                    source={require(\"../assets/lockedBG.png\")}\n                    key={index}\n                  >\n                    <Text style={styles.itemText}>\n                      Unlocked at level {requirement}!\n                    </Text>\n                  </ImageBackground>\n                );\n              } else {\n                let image;\n                switch (emoteFromArr.data()[\"name\"]) {\n                  case \"smile\":\n                    image = require(\"../assets/smile.png\");\n                    break;\n                  case \"embarrased\":\n                    image = require(\"../assets/embarrased.png\");\n                    break;\n                  case \"ROFL\":\n                    image = require(\"../assets/rofl.png\");\n                    break;\n                  case \"surprise\":\n                    image = require(\"../assets/surprise.png\");\n                    break;\n                }\n\n                return (\n                  <ImageBackground\n                    style={styles.itemBackground}\n                    source={require(\"../assets/shopPanel.png\")}\n                    key={index}\n                  >\n                    <Pressable\n                      onPress={() => {\n                        const emotes = user[\"emotes\"];\n                        let purchasedBy;\n                        getDoc(doc(db, \"emotes\", emoteFromArr.id))\n                          .then((docSnap) => {\n                            if (docSnap.exists()) {\n                              console.log(\"Document snapshot exists!\");\n                              purchasedBy = docSnap.get(\"purchasedBy\");\n                            } else {\n                              console.log(\"Document snapshot doesn't exist\");\n                            }\n                          })\n                          .then(() => {\n                            if (purchasedBy.indexOf(user[\"email\"]) != -1) {\n                              playPurchaseFailed();\n                              alert(\"You already have this emote!\");\n                              return;\n                            } else if (\n                              user[\"diamonds\"] >=\n                                emoteFromArr.data()[\"priceDiamonds\"] &&\n                              purchasedBy.indexOf(user[\"email\"]) == -1\n                            ) {\n                              emotes.push(emoteFromArr.id);\n                              user[\"diamonds\"] =\n                                user[\"diamonds\"] -\n                                emoteFromArr.data()[\"priceDiamonds\"];\n                              setUser({\n                                activeQuest: user[\"activeQuest\"],\n                                coins: user[\"coins\"],\n                                currentXp: user[\"currentXp\"],\n                                diamonds: user[\"diamonds\"],\n                                displayName: user[\"displayName\"],\n                                email: user[\"email\"],\n                                level: user[\"level\"],\n                                multiplier: user[\"multiplier\"],\n                                questsDone: user[\"questsDone\"],\n                                tasks: user[\"tasks\"],\n                                items: user[\"items\"],\n                                emotes: emotes,\n                                avatar: user[\"avatar\"],\n                              });\n                              purchasedBy.push(user[\"email\"]);\n\n                              updateDoc(doc(db, \"users\", user[\"email\"]), {\n                                diamonds: user[\"diamonds\"],\n                                emotes: emotes,\n                              }).then(() => {\n                                updateDoc(doc(db, \"emotes\", emoteFromArr.id), {\n                                  purchasedBy: purchasedBy,\n                                });\n                              });\n\n                              playPurchaseSound();\n                              alert(\"Emote purchased!\");\n                            } else {\n                              playPurchaseFailed();\n                              alert(\"Insufficient funds!\");\n                            }\n                          });\n                      }}\n                    >\n                      <Text style={styles.itemText}>\n                        {emoteFromArr.data()[\"name\"]}\n                      </Text>\n                      <Image style={styles.itemImage} source={image}></Image>\n                      <Text style={styles.itemFooter}>\n                        {emoteFromArr.data()[\"priceDiamonds\"]}\n                      </Text>\n                      <Image\n                        style={styles.rubyIcon}\n                        source={require(\"../assets/ruby.png\")}\n                      />\n                    </Pressable>\n                  </ImageBackground>\n                );\n              }\n            })}\n          </ScrollView>\n        );\n      });\n  }, [...items]);\n  return (\n    <View style={{ flexDirection: \"row\", flexWrap: \"wrap\", flex: 1 }}>\n      <ImageBackground\n        source={require(\"../assets/background.png\")}\n        style={styles.bg}\n      >\n        <Topbar />\n        <View style={styles.banner}>\n          <Text style={styles.bannerText}>EMOTES</Text>\n        </View>\n        {emotesJSX}\n        <View style={styles.itemsBanner}>\n          <Text style={styles.bannerText}>WEAPONS/ABILITIES</Text>\n        </View>\n        {itemsJSX}\n\n        <BottomBar />\n      </ImageBackground>\n    </View>\n  );\n};\nexport default Shop;\nconst styles = StyleSheet.create({\n  bg: {\n    width: \"100%\",\n    height: \"100%\",\n    resizeMode: \"contain\",\n  },\n  banner: {\n    marginTop: 50,\n    backgroundColor: \"#DD4141\",\n    width: \"100%\",\n  },\n  bannerText: {\n    fontSize: 50,\n    fontFamily: \"PlayMeGames\",\n    color: \"white\",\n    textAlign: \"center\",\n    paddingTop: 4,\n  },\n  itemBackground: {\n    width: 150,\n    height: 220,\n    resizeMode: \"contain\",\n    marginRight: 10,\n    marginBottom: 10,\n  },\n  itemsContainer: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    flexWrap: \"wrap\",\n  },\n  itemText: {\n    fontSize: 25,\n    fontFamily: \"PlayMeGames\",\n    color: \"white\",\n    textAlign: \"center\",\n  },\n  itemImage: {\n    height: \"40%\",\n    width: \"auto\",\n    resizeMode: \"contain\",\n  },\n  itemFooter: {\n    fontSize: 20,\n    fontFamily: \"PlayMeGames\",\n    color: \"white\",\n    textAlign: \"center\",\n  },\n  coinIcon: {\n    resizeMode: \"contain\",\n    width: \"auto\",\n    height: 15,\n    position: \"relative\",\n    right: 20,\n    top: 16,\n  },\n  rubyIcon: {\n    resizeMode: \"contain\",\n    width: \"auto\",\n    height: 15,\n    position: \"relative\",\n    right: 25,\n    bottom: 16,\n  },\n  itemsBanner: {\n    backgroundColor: \"#DD4141\",\n    width: \"100%\",\n    bottom: 90,\n  },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}