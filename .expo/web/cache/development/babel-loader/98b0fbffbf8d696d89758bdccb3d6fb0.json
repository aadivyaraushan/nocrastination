{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _toArray from \"@babel/runtime/helpers/toArray\";\n\nfunction _createForOfIteratorHelperLoose(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (it) return (it = it.call(o)).next.bind(it); if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport React, { useState, useContext, useEffect } from \"react\";\nimport Topbar from \"../components/Topbar\";\nimport BottomBar from \"../components/BottomBar\";\nimport { deleteDoc, doc, getDoc } from \"firebase/firestore\";\nimport { set, ref, onValue } from \"firebase/database\";\nimport { UserContext } from \"../UserContext\";\nimport { db, rtdb } from \"../firebase\";\nimport { GameContext } from \"../GameContext\";\nimport { QuestContext } from \"../QuestContext\";\nimport { useFonts } from \"expo-font\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar id = Math.floor(Math.random() * Math.floor(Math.random() * Date.now()));\nconsole.log(\"ID: \", id);\n\nvar AddGame = function AddGame(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useContext = useContext(UserContext),\n      user = _useContext.user,\n      setUser = _useContext.setUser;\n\n  var _useContext2 = useContext(GameContext),\n      game = _useContext2.game,\n      setGame = _useContext2.setGame;\n\n  var _useContext3 = useContext(QuestContext),\n      quest = _useContext3.quest,\n      setQuest = _useContext3.setQuest;\n\n  var _useFonts = useFonts({\n    RetroGaming: require(\"../assets/fonts/RetroGaming-Regular.ttf\"),\n    InkyThinPixels: require(\"../assets/fonts/InkyThinPixels-Regular.ttf\"),\n    PlayMeGames: require(\"../assets/fonts/Playmegames-Regular.ttf\")\n  }),\n      _useFonts2 = _toArray(_useFonts);\n\n  var _useState = useState(_jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.text,\n      children: \"Adding game to queue\"\n    }), _jsx(ActivityIndicator, {\n      color: \"#ffff\",\n      size: \"large\"\n    })]\n  })),\n      _useState2 = _slicedToArray(_useState, 2),\n      bodyJSX = _useState2[0],\n      setBodyJSX = _useState2[1];\n\n  useEffect(function () {\n    var player1HealthBoost = 0;\n    var player1DamageBoost = 0;\n    var player1Avatar = \"\";\n    var items = [];\n\n    for (var _iterator = _createForOfIteratorHelperLoose(user[\"items\"]), _step; !(_step = _iterator()).done;) {\n      var itemName = _step.value;\n      console.log(itemName);\n      getDoc(doc(db, \"shop\", itemName)).then(function (docSnap) {\n        if (docSnap.exists()) items.push(docSnap.data());\n      });\n    }\n\n    for (var _i = 0, _items = items; _i < _items.length; _i++) {\n      var item = _items[_i];\n\n      if (item[\"name\"] == \"regeneration\") {} else if (item[\"type\"] == \"offensive\") player1DamageBoost += item[\"damageBoost\"];else if (item[\"type\"] == \"deensive\") player1HealthBoost += item[\"healthBoost\"];\n    }\n\n    var player1Damage = 100 / quest[\"subTasks\"].length + player1DamageBoost;\n    var player1Health = 100 + player1HealthBoost;\n    set(ref(rtdb, \"games/\" + id), {\n      names: {\n        player1: user[\"displayName\"],\n        player2: \"\"\n      },\n      healths: {\n        player1: player1Health,\n        player2: 0\n      },\n      subTasks: {\n        player1: quest[\"subTasks\"],\n        player2: []\n      },\n      avatars: {\n        player1: user[\"avatar\"],\n        player2: \"\"\n      },\n      numberOfItems: {\n        player1: user[\"items\"].length,\n        player2: 0\n      },\n      levels: {\n        player1: user[\"level\"],\n        player2: 0\n      },\n      difficulty: {\n        player1: quest[\"difficulty\"],\n        player2: \"\"\n      },\n      damages: {\n        player1: player1Damage,\n        player2: 0\n      },\n      emails: {\n        player1: user[\"email\"],\n        player2: \"\"\n      }\n    }).then(function () {\n      setBodyJSX(_jsxs(View, {\n        style: styles.container,\n        children: [_jsx(Text, {\n          style: styles.text,\n          children: \"Waiting for a player to join\"\n        }), _jsx(ActivityIndicator, {\n          color: \"#ffff\",\n          size: \"large\"\n        })]\n      }));\n      onValue(ref(rtdb, \"games/\" + id + \"/names/player2\"), function (snapshot) {\n        if (snapshot.val() != \"\") {\n          setBodyJSX(_jsx(View, {\n            style: styles.container,\n            children: _jsx(Text, {\n              style: styles.text,\n              children: \"Player found!\"\n            })\n          }));\n          navigation.navigate(\"multiplayerBattle\");\n        }\n      });\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }, []);\n  useEffect(function () {\n    navigation.addListener(\"beforeRemove\", function (e) {\n      e.preventDefault();\n    });\n  }, [navigation]);\n  return _jsx(View, {\n    children: _jsxs(ImageBackground, {\n      source: require(\"../assets/background.png\"),\n      style: styles.bg,\n      children: [_jsx(Topbar, {}), _jsx(BottomBar, {}), bodyJSX]\n    })\n  });\n};\n\nexport default AddGame;\nvar styles = StyleSheet.create({\n  bg: {\n    width: \"100%\",\n    height: \"100%\",\n    resizeMode: \"contain\",\n    display: \"flex\"\n  },\n  banner: {\n    marginTop: 50,\n    backgroundColor: \"#DD4141\",\n    width: \"100%\"\n  },\n  bannerText: {\n    fontSize: 40,\n    fontFamily: \"PlayMeGames\",\n    color: \"white\",\n    textAlign: \"center\"\n  },\n  text: {\n    fontSize: 25,\n    textAlign: \"center\",\n    width: \"100%\",\n    color: \"white\",\n    fontFamily: \"PlayMeGames\",\n    alignSelf: \"center\"\n  },\n  container: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    width: \"100%\",\n    height: \"100%\"\n  }\n});","map":{"version":3,"names":["React","useState","useContext","useEffect","Topbar","BottomBar","deleteDoc","doc","getDoc","set","ref","onValue","UserContext","db","rtdb","GameContext","QuestContext","useFonts","id","Math","floor","random","Date","now","console","log","AddGame","navigation","user","setUser","game","setGame","quest","setQuest","RetroGaming","require","InkyThinPixels","PlayMeGames","styles","container","text","bodyJSX","setBodyJSX","player1HealthBoost","player1DamageBoost","player1Avatar","items","itemName","then","docSnap","exists","push","data","item","player1Damage","length","player1Health","names","player1","player2","healths","subTasks","avatars","numberOfItems","levels","difficulty","damages","emails","snapshot","val","navigate","catch","error","addListener","e","preventDefault","bg","StyleSheet","create","width","height","resizeMode","display","banner","marginTop","backgroundColor","bannerText","fontSize","fontFamily","color","textAlign","alignSelf","alignItems","justifyContent"],"sources":["/home/aadivyaraushan/Documents/GitHub/nocrastination/screens/AddGame.js"],"sourcesContent":["import {\n  ActivityIndicator,\n  ImageBackground,\n  StyleSheet,\n  Text,\n  View,\n} from \"react-native\";\nimport React, { useState, useContext, useEffect } from \"react\";\nimport Topbar from \"../components/Topbar\";\nimport BottomBar from \"../components/BottomBar\";\nimport { deleteDoc, doc, getDoc } from \"firebase/firestore\";\nimport { set, ref, onValue } from \"firebase/database\";\nimport { UserContext } from \"../UserContext\";\nimport { db, rtdb } from \"../firebase\";\nimport { GameContext } from \"../GameContext\";\nimport { QuestContext } from \"../QuestContext\";\nimport { useFonts } from \"expo-font\";\n\nconst id = Math.floor(Math.random() * Math.floor(Math.random() * Date.now()));\nconsole.log(\"ID: \", id);\n\nconst AddGame = ({ navigation }) => {\n  const { user, setUser } = useContext(UserContext);\n  const { game, setGame } = useContext(GameContext);\n  const { quest, setQuest } = useContext(QuestContext);\n\n  const [] = useFonts({\n    RetroGaming: require(\"../assets/fonts/RetroGaming-Regular.ttf\"),\n    InkyThinPixels: require(\"../assets/fonts/InkyThinPixels-Regular.ttf\"),\n    PlayMeGames: require(\"../assets/fonts/Playmegames-Regular.ttf\"),\n  });\n\n  const [bodyJSX, setBodyJSX] = useState(\n    <View style={styles.container}>\n      <Text style={styles.text}>Adding game to queue</Text>\n      <ActivityIndicator color=\"#ffff\" size=\"large\" />\n    </View>\n  );\n\n  useEffect(() => {\n    // setDoc(doc(db, \"games\", String(id)), {\n    //   id: String(id),\n    //   created: Date.now(),\n    //   finished: false,\n    //   started: false,\n    //   player1: {\n    //     difficultyQuest: quest[\"difficulty\"],\n    //     subTasks: quest[\"subTasks\"],\n    //     taskTitle: quest[\"title\"],\n    //     avatar: user[\"avatar\"],\n    //     displayName: user[\"displayName\"],\n    //     items: user[\"items\"],\n    //     emotes: user[\"emotes\"],\n    //   },\n    //   player2: null,\n    // })\n    //   .then(() => {\n    //     console.log(\"Game added to database\");\n    //     setGame({\n    //       id: String(id),\n    //       created: Date.now(),\n    //       finished: false,\n    //       started: false,\n    //       player1: {\n    //         email: user[\"email\"],\n    //         difficultyQuest: quest[\"difficulty\"],\n    //         subTasks: quest[\"subTasks\"],\n    //         taskTitle: quest[\"title\"],\n    //         avatar: user[\"avatar\"],\n    //         displayName: user[\"displayName\"],\n    //         items: user[\"items\"],\n    //         emotes,\n    //         level: user[\"level\"],\n    //       },\n    //       player2: null,\n    //     });\n    //   })\n    //   .then(() => {\n    //     onSnapshot(doc(db, \"games\", String(id)), (snapshot) => {\n    //       setGame(snapshot.data());\n    //     });\n    //   })\n    //   .catch((error) => console.log(error));\n\n    let player1HealthBoost = 0;\n    let player1DamageBoost = 0;\n    let player1Avatar = \"\";\n\n    let items = [];\n    for (let itemName of user[\"items\"]) {\n      console.log(itemName);\n      getDoc(doc(db, \"shop\", itemName)).then((docSnap) => {\n        if (docSnap.exists()) items.push(docSnap.data());\n      });\n    }\n\n    // boost calculations\n    for (const item of items) {\n      if (item[\"name\"] == \"regeneration\") {\n        // special regeneration stuff\n      } else if (item[\"type\"] == \"offensive\")\n        player1DamageBoost += item[\"damageBoost\"];\n      else if (item[\"type\"] == \"deensive\")\n        player1HealthBoost += item[\"healthBoost\"];\n    }\n    // damage calculation\n    const player1Damage = 100 / quest[\"subTasks\"].length + player1DamageBoost;\n\n    // health calculation\n    let player1Health = 100 + player1HealthBoost;\n\n    // data necessary for game\n    // character healths\n    // subtasks to perform\n    // character avatars\n    // damage per subtask\n    // number of items\n    // character levels\n\n    // creating game\n    set(ref(rtdb, `games/${id}`), {\n      names: {\n        player1: user[\"displayName\"],\n        player2: \"\",\n      },\n      healths: {\n        player1: player1Health,\n        player2: 0,\n      },\n      subTasks: {\n        player1: quest[\"subTasks\"],\n        player2: [],\n      },\n      avatars: {\n        player1: user[\"avatar\"],\n        player2: \"\",\n      },\n      numberOfItems: {\n        player1: user[\"items\"].length,\n        player2: 0,\n      },\n      levels: {\n        player1: user[\"level\"],\n        player2: 0,\n      },\n      difficulty: {\n        player1: quest[\"difficulty\"],\n        player2: \"\",\n      },\n      damages: {\n        player1: player1Damage,\n        player2: 0,\n      },\n      emails: {\n        player1: user[\"email\"],\n        player2: \"\",\n      },\n    })\n      .then(() => {\n        setBodyJSX(\n          <View style={styles.container}>\n            <Text style={styles.text}>Waiting for a player to join</Text>\n            <ActivityIndicator color=\"#ffff\" size=\"large\" />\n          </View>\n        );\n\n        onValue(ref(rtdb, `games/${id}/names/player2`), (snapshot) => {\n          if (snapshot.val() != \"\") {\n            setBodyJSX(\n              <View style={styles.container}>\n                <Text style={styles.text}>Player found!</Text>\n              </View>\n            );\n            navigation.navigate(\"multiplayerBattle\");\n          }\n        });\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }, []);\n\n  useEffect(() => {\n    navigation.addListener(\"beforeRemove\", (e) => {\n      e.preventDefault();\n      // deleteDoc(doc(db, \"games\", String(id)));\n    });\n  }, [navigation]);\n\n  return (\n    <View>\n      <ImageBackground\n        source={require(\"../assets/background.png\")}\n        style={styles.bg}\n      >\n        <Topbar />\n        <BottomBar />\n        {bodyJSX}\n      </ImageBackground>\n    </View>\n  );\n};\n\nexport default AddGame;\n\nconst styles = StyleSheet.create({\n  bg: {\n    width: \"100%\",\n    height: \"100%\",\n    resizeMode: \"contain\",\n    display: \"flex\",\n  },\n  banner: {\n    marginTop: 50,\n    backgroundColor: \"#DD4141\",\n    width: \"100%\",\n  },\n  bannerText: {\n    fontSize: 40,\n    fontFamily: \"PlayMeGames\",\n    color: \"white\",\n    textAlign: \"center\",\n  },\n  text: {\n    fontSize: 25,\n    textAlign: \"center\",\n    width: \"100%\",\n    color: \"white\",\n    fontFamily: \"PlayMeGames\",\n    alignSelf: \"center\",\n  },\n  container: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    width: \"100%\",\n    height: \"100%\",\n  },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}